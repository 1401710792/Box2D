b2Vec2 g(0.000000000000000e+00f, 0.000000000000000e+00f);
m_world->SetGravity(g);
b2Body** bodies = (b2Body**)b2Alloc(1240 * sizeof(b2Body*));
b2Joint** joints = (b2Joint**)b2Alloc(11 * sizeof(b2Joint*));
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.203617248535156e+02f, -2.495534515380859e+01f);
  bd.angle = 5.397439479827881e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[0] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[0]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.305815277099609e+02f, 1.746700592041016e+02f);
  bd.angle = 3.271683454513550e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.558737487792969e+02f, 8.715484619140625e+01f);
  bd.angle = 9.426788240671158e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[2] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[2]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.049737548828125e+01f, -9.854760742187500e+01f);
  bd.angle = 5.413794040679932e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[3] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[3]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.808773803710938e+01f, -1.020350189208984e+02f);
  bd.angle = 6.014038085937500e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[4] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[4]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.520054626464844e+01f, 2.744176940917969e+02f);
  bd.angle = -2.286381244659424e+00f;
  bd.linearVelocity.Set(-1.044150257110596e+01f, -1.201157665252686e+01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[5] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 5.000000000000000e+01f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(16);
    fd.filter.maskBits = uint16(8);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.000000029802322e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[5]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.379542846679688e+02f, 9.398616790771484e+00f);
  bd.angle = 4.013583660125732e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[6] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[6]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.377508163452148e+01f, -3.526492691040039e+01f);
  bd.angle = 1.517377376556396e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[7] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[7]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.453668518066406e+02f, 1.870635833740234e+02f);
  bd.angle = 2.393217325210571e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[8] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[8]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.451263275146484e+02f, 1.593084106445312e+02f);
  bd.angle = 4.954440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[9] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[9]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.839584350585938e+01f, 1.549075012207031e+02f);
  bd.angle = 2.638218700885773e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[10] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[10]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.239226531982422e+01f, -1.419946289062500e+02f);
  bd.angle = 2.890100717544556e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[11] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[11]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.090063018798828e+02f, -1.304981994628906e+02f);
  bd.angle = 5.180225372314453e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[12] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[12]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.792444000244141e+02f, 6.712353515625000e+01f);
  bd.angle = 3.533930540084839e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[13] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[13]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.343319702148438e+01f, -1.321619415283203e+02f);
  bd.angle = 9.951143860816956e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[14] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[14]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.242159271240234e+01f, 5.394033813476562e+01f);
  bd.angle = 2.733741104602814e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[15] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[15]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.329841766357422e+02f, -6.771989440917969e+01f);
  bd.angle = -4.314236145019531e+02f;
  bd.linearVelocity.Set(3.521032340358943e-05f, 2.352229421376251e-05f);
  bd.angularVelocity = -3.141592788696289e+01f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[16] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4768);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[16]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.807269287109375e+01f, -1.061717128753662e+01f);
  bd.angle = 2.828813552856445e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[17] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[17]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.646613464355469e+02f, 3.954127502441406e+01f);
  bd.angle = 3.468137502670288e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[18] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[18]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.434035186767578e+02f, 1.621568298339844e+02f);
  bd.angle = 1.934215188026428e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[19] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[19]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.812595214843750e+02f, 6.580801391601562e+01f);
  bd.angle = 4.708208560943604e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[20] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[20]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.028463172912598e+01f, 1.879338836669922e+01f);
  bd.angle = 5.539624691009521e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[21] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[21]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.836319427490234e+02f, 9.357147979736328e+01f);
  bd.angle = 5.534741878509521e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[22] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[22]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.492044067382812e+01f, 1.619542083740234e+02f);
  bd.angle = 1.953896403312683e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[23] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[23]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.081228866577148e+02f, -1.293172454833984e+02f);
  bd.angle = 4.157683372497559e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[24] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[24]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.420240783691406e+01f, -1.180482635498047e+02f);
  bd.angle = 3.663679838180542e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[25] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[25]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.146100997924805e+01f, -1.393087615966797e+02f);
  bd.angle = 1.448623299598694e+00f;
  bd.linearVelocity.Set(-2.451856040954590e+01f, 2.056307792663574e+01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 5.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[26] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[26]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.083101806640625e+02f, -1.985247039794922e+02f);
  bd.angle = 5.751039886474609e+01f;
  bd.linearVelocity.Set(-8.516361564397812e-02f, 3.663029193878174e+00f);
  bd.angularVelocity = -2.632627868652344e+01f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[27] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4768);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[27]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.168190917968750e+02f, -4.684279632568359e+01f);
  bd.angle = 3.293135166168213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[28] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[28]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.378835601806641e+02f, 8.417317962646484e+01f);
  bd.angle = 2.169465303421021e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[29] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[29]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.309267425537109e+01f, -2.327315979003906e+02f);
  bd.angle = 2.909826755523682e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[30] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[30]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.317061614990234e+01f, -1.047632369995117e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[31] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[31]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.039275588989258e+02f, -1.306705169677734e+02f);
  bd.angle = -3.316125571727753e-01f;
  bd.linearVelocity.Set(-2.343018293380737e+00f, 8.067703247070312e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[32] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 5.000000000000000e+01f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(16);
    fd.filter.maskBits = uint16(8);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.000000029802322e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[32]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.142274475097656e+01f, -1.136686859130859e+02f);
  bd.angle = 2.473255157470703e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[33] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[33]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.532387084960938e+02f, -4.982601547241211e+01f);
  bd.angle = 1.979259133338928e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[34] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[34]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.486023712158203e+02f, 4.639879608154297e+01f);
  bd.angle = 2.043507337570190e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[35] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[35]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.583423614501953e+01f, 6.277245712280273e+01f);
  bd.angle = 4.445086479187012e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[36] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[36]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.807411956787109e+01f, 2.683977355957031e+02f);
  bd.angle = 2.528687238693237e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[37] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[37]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.516325759887695e+01f, 1.644087371826172e+02f);
  bd.angle = 1.764289617538452e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[38] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[38]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.048258209228516e+01f, 5.543522262573242e+01f);
  bd.angle = 3.442489862442017e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[39] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[39]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.498236083984375e+01f, 7.111109924316406e+01f);
  bd.angle = 1.162959814071655e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[40] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[40]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.646893310546875e+01f, 2.700596923828125e+02f);
  bd.angle = 4.349536895751953e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[41] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[41]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.098509979248047e+01f, -1.285566616058350e+01f);
  bd.angle = 2.321287870407104e+00f;
  bd.linearVelocity.Set(-2.542437314987183e+00f, -8.188994973897934e-02f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 5.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[42] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[42]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.399206542968750e+01f, -1.279244613647461e+01f);
  bd.angle = 3.520052671432495e+00f;
  bd.linearVelocity.Set(-1.457008272409439e-01f, -5.016880109906197e-02f);
  bd.angularVelocity = 2.007792890071869e-02f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[43] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4767);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[43]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.360392913818359e+02f, 5.662034988403320e+00f);
  bd.angle = 2.786664009094238e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[44] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[44]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.130174827575684e+01f, 1.485915374755859e+02f);
  bd.angle = 4.214688777923584e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[45] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[45]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.366788177490234e+02f, 1.280034160614014e+01f);
  bd.angle = 2.492094039916992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[46] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[46]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.127856826782227e+01f, 3.949499607086182e+00f);
  bd.angle = 2.592738151550293e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[47] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[47]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.453120727539062e+02f, 9.429609680175781e+01f);
  bd.angle = 5.238858222961426e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[48] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[48]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.337855148315430e+01f, 8.509128570556641e+00f);
  bd.angle = 1.742835521697998e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[49] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[49]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.644038391113281e+02f, 5.625925445556641e+01f);
  bd.angle = 3.245283603668213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[50] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[50]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.353367614746094e+01f, 1.850082206726074e+01f);
  bd.angle = 3.859464824199677e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[51] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[51]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.743666992187500e+02f, 3.278188705444336e+01f);
  bd.angle = 5.717203140258789e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[52] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[52]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.941624450683594e+01f, 2.723959350585938e+02f);
  bd.angle = 4.478305339813232e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[53] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[53]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.663210906982422e+02f, 5.553606414794922e+01f);
  bd.angle = 3.748915910720825e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[54] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[54]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.624318542480469e+02f, -4.481998443603516e+01f);
  bd.angle = 2.982086181640625e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[55] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[55]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.135051269531250e+02f, -1.192185211181641e+02f);
  bd.angle = 2.625538587570190e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[56] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[56]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.731761169433594e+02f, 6.405635833740234e+01f);
  bd.angle = 4.509888172149658e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[57] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[57]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.087139129638672e+01f, 1.617832336425781e+02f);
  bd.angle = 1.243984937667847e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[58] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[58]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.587630081176758e+01f, 1.464897460937500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[59] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[59]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.213690185546875e+01f, -1.141994094848633e+02f);
  bd.angle = 6.023104190826416e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[60] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[60]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.460988159179688e+02f, 2.012253379821777e+01f);
  bd.angle = 4.960218966007233e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[61] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[61]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.168144989013672e+01f, -1.254483871459961e+02f);
  bd.angle = 5.629123687744141e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[62] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4763);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[62]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.720969390869141e+01f, -1.005566406250000e+02f);
  bd.angle = 2.593888521194458e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[63] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[63]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.344601898193359e+02f, 1.690616912841797e+02f);
  bd.angle = 5.635330200195312e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[64] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[64]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.462049713134766e+02f, 1.631702728271484e+02f);
  bd.angle = 3.115251779556274e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[65] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[65]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.348341369628906e+02f, -1.000580825805664e+02f);
  bd.angle = 6.138781070709229e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[66] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[66]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.519106750488281e+02f, 1.570701293945312e+02f);
  bd.angle = 1.629077196121216e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[67] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[67]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.856962432861328e+02f, 3.177871894836426e+01f);
  bd.angle = 2.919157743453979e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[68] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[68]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.513836669921875e+02f, 2.483044624328613e+01f);
  bd.angle = 4.016537189483643e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[69] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[69]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.055956268310547e+02f, -1.259671554565430e+02f);
  bd.angle = 2.404681921005249e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[70] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[70]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.052576751708984e+02f, -1.080285491943359e+02f);
  bd.angle = 4.370728492736816e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[71] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[71]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.130849838256836e+01f, 1.550255279541016e+02f);
  bd.angle = 4.579440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[72] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4743);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[72]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.499916076660156e+01f, 1.493586578369141e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[73] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[73]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.484523162841797e+02f, 1.620277252197266e+02f);
  bd.angle = 4.757214546203613e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[74] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[74]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.552550659179688e+02f, 1.718894004821777e+01f);
  bd.angle = 3.783319473266602e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[75] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[75]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.054011077880859e+02f, -1.219093627929688e+02f);
  bd.angle = 1.086357831954956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[76] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[76]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.460900115966797e+01f, 2.824139404296875e+02f);
  bd.angle = 2.797159671783447e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[77] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[77]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.724686889648438e+02f, -5.289154052734375e+01f);
  bd.angle = 5.845924854278564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[78] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[78]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.032991333007812e+02f, -9.599006652832031e+01f);
  bd.angle = 2.324633359909058e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[79] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[79]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.699515075683594e+02f, -5.227493667602539e+01f);
  bd.angle = 4.528053760528564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[80] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[80]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.842407989501953e+01f, -1.111391448974609e+02f);
  bd.angle = 1.530671596527100e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[81] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[81]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.436757965087891e+02f, 8.677878570556641e+01f);
  bd.angle = 2.583087205886841e+00f;
  bd.linearVelocity.Set(1.860661953687668e-01f, -8.413931131362915e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 5.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[82] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[82]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.412757263183594e+02f, 8.355220031738281e+01f);
  bd.angle = 3.042555809020996e+00f;
  bd.linearVelocity.Set(1.051555871963501e-01f, 8.468471467494965e-02f);
  bd.angularVelocity = 1.931282430887222e-01f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[83] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4764);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[83]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.531966400146484e+01f, 1.567257537841797e+02f);
  bd.angle = -3.278898000717163e+00f;
  bd.linearVelocity.Set(-1.867775619029999e-02f, -4.060980305075645e-02f);
  bd.angularVelocity = -3.026417270302773e-02f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[84] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[84]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.269145393371582e+01f, 1.660251617431641e+02f);
  bd.angle = 4.594952583312988e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[85] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[85]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.732250213623047e+01f, 2.855084228515625e+02f);
  bd.angle = 2.416291475296021e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[86] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[86]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.538729095458984e+01f, 2.726713562011719e+02f);
  bd.angle = 6.562970876693726e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[87] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[87]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.326921691894531e+02f, 1.674822540283203e+02f);
  bd.angle = 1.091759443283081e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[88] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[88]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.406230926513672e+01f, -1.272736282348633e+02f);
  bd.angle = -1.692969322204590e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[89] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[89]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.406230926513672e+01f, -1.272736282348633e+02f);
  bd.angle = 5.629123687744141e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[90] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4763);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[90]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.992298126220703e+01f, 6.378163528442383e+01f);
  bd.angle = 5.478219509124756e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[91] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[91]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.050405502319336e+02f, -1.076729354858398e+02f);
  bd.angle = 2.030150592327118e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[92] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[92]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.481875152587891e+02f, -8.371225738525391e+01f);
  bd.angle = 2.148756742477417e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[93] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[93]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.451358947753906e+02f, 1.573052825927734e+02f);
  bd.angle = 5.367353916168213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[94] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[94]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.279471206665039e+01f, 6.906017303466797e+01f);
  bd.angle = 1.216071963310242e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[95] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[95]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.444011077880859e+02f, 1.089085102081299e+01f);
  bd.angle = 6.495641469955444e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[96] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[96]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.590780639648438e+01f, 6.355587005615234e+01f);
  bd.angle = 3.440976619720459e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[97] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[97]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.115954589843750e+01f, -1.013644943237305e+02f);
  bd.angle = 6.091252565383911e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[98] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[98]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.772127838134766e+02f, 8.833630371093750e+01f);
  bd.angle = 3.450633525848389e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[99] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[99]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.702929840087891e+02f, 5.278057098388672e+01f);
  bd.angle = 5.528706073760986e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[100] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[100]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.396966857910156e+02f, 1.659022674560547e+02f);
  bd.angle = 6.259330749511719e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[101] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[101]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.891122436523438e+02f, 4.173036193847656e+01f);
  bd.angle = 5.539152145385742e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[102] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[102]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.233141937255859e+02f, -3.223489379882812e+01f);
  bd.angle = 5.350377559661865e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[103] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[103]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.357102203369141e+01f, 1.543819274902344e+02f);
  bd.angle = 3.738255023956299e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[104] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[104]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.438868560791016e+02f, -9.757226562500000e+01f);
  bd.angle = 2.045793533325195e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[105] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[105]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.058274078369141e+01f, 2.452825927734375e+01f);
  bd.angle = 5.707085132598877e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[106] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[106]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.699927062988281e+02f, -1.635392303466797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[107] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[107]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.208773803710938e+01f, 2.837569885253906e+02f);
  bd.angle = 2.291670799255371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[108] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[108]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.393270416259766e+02f, 2.065027236938477e+00f);
  bd.angle = 2.704521894454956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[109] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[109]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.344684982299805e+01f, 6.443508911132812e+01f);
  bd.angle = 1.566421747207642e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[110] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[110]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.133779144287109e+01f, 2.778689575195312e+02f);
  bd.angle = 1.038588285446167e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[111] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4761);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[111]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.362575988769531e+02f, 1.669117889404297e+02f);
  bd.angle = 6.060469627380371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[112] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[112]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.447046356201172e+02f, 1.861198997497559e+01f);
  bd.angle = 2.912232160568237e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[113] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[113]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.296080684661865e+01f, -2.040869598388672e+02f);
  bd.angle = 5.091501235961914e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[114] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[114]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.515998840332031e+01f, 2.837593994140625e+02f);
  bd.angle = 1.232102215290070e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[115] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[115]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.516397857666016e+01f, 2.753664855957031e+02f);
  bd.angle = 2.733269929885864e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[116] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[116]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.936065368652344e+02f, 3.697919464111328e+01f);
  bd.angle = 4.331675529479980e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[117] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[117]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.778363037109375e+02f, -5.606998062133789e+01f);
  bd.angle = 2.557946443557739e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[118] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[118]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.396989440917969e+02f, -9.303126525878906e+01f);
  bd.angle = 6.256739616394043e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[119] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[119]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.755332946777344e+01f, 1.562883148193359e+02f);
  bd.angle = 3.755620956420898e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[120] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[120]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.444030456542969e+02f, 1.457978129386902e+00f);
  bd.angle = 3.819842338562012e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[121] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[121]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.592882537841797e+01f, 5.621904754638672e+01f);
  bd.angle = 3.113061666488647e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[122] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[122]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.582450866699219e+02f, -6.259232330322266e+01f);
  bd.angle = 3.771668195724487e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[123] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[123]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.630324707031250e+02f, 7.400101184844971e+00f);
  bd.angle = 2.001740455627441e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[124] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[124]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.930998229980469e+01f, -1.046253738403320e+02f);
  bd.angle = 2.079165935516357e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[125] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[125]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.117236633300781e+02f, -1.288892211914062e+02f);
  bd.angle = 2.442714214324951e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[126] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[126]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.452089691162109e+01f, -2.396989288330078e+02f);
  bd.angle = 6.151968836784363e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[127] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[127]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.203865661621094e+02f, -2.786472702026367e+01f);
  bd.angle = 4.812769889831543e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[128] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[128]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.285029602050781e+01f, 5.078170776367188e+01f);
  bd.angle = 4.746119022369385e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[129] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[129]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.752276229858398e+01f, -1.059679317474365e+01f);
  bd.angle = 1.735719561576843e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[130] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[130]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.057128906250000e+02f, -1.427162170410156e+02f);
  bd.angle = 1.768083095550537e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[131] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[131]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.576616516113281e+02f, 1.531599044799805e+01f);
  bd.angle = 8.690982311964035e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[132] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[132]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.487045288085938e+01f, 2.747348632812500e+02f);
  bd.angle = 3.479317426681519e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[133] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[133]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.420177001953125e+02f, 7.622023105621338e+00f);
  bd.angle = 2.176643610000610e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[134] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[134]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.918683624267578e+01f, 2.769282836914062e+02f);
  bd.angle = 1.829222440719604e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[135] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[135]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.701828002929688e+02f, -4.997066497802734e+01f);
  bd.angle = 1.657744884490967e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[136] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[136]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.701612396240234e+02f, 3.148959922790527e+01f);
  bd.angle = 5.176353454589844e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[137] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[137]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.580138244628906e+02f, -5.145070648193359e+01f);
  bd.angle = 4.082066416740417e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[138] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[138]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.646124114990234e+02f, 3.386193084716797e+01f);
  bd.angle = 3.039560317993164e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[139] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[139]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.665481567382812e+01f, 5.816020202636719e+01f);
  bd.angle = 1.419553875923157e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[140] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[140]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.637377777099609e+02f, 9.962342071533203e+01f);
  bd.angle = 5.925274372100830e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[141] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[141]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.269944305419922e+02f, 1.513090057373047e+02f);
  bd.angle = 1.937041282653809e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[142] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[142]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.414873504638672e+02f, 1.553401489257812e+02f);
  bd.angle = 1.269026994705200e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[143] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[143]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.564313888549805e+01f, 2.692788696289062e+01f);
  bd.angle = 5.249121189117432e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[144] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[144]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.280159912109375e+02f, -9.539730072021484e+01f);
  bd.angle = 3.457974433898926e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[145] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[145]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.332909851074219e+02f, 1.699022674560547e+02f);
  bd.angle = 3.269759893417358e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[146] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[146]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.781394348144531e+02f, -4.939722442626953e+01f);
  bd.angle = 5.179194927215576e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[147] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[147]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.979094696044922e+01f, 5.146620941162109e+01f);
  bd.angle = 3.719912767410278e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[148] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[148]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.717268524169922e+02f, 9.655654907226562e+01f);
  bd.angle = 3.106859207153320e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[149] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[149]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.443820495605469e+02f, 1.558842773437500e+02f);
  bd.angle = 1.781192183494568e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[150] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[150]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.583814086914062e+02f, -5.246439743041992e+01f);
  bd.angle = 8.678414225578308e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[151] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[151]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.938437805175781e+02f, 4.837842559814453e+01f);
  bd.angle = 5.816813945770264e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[152] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[152]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.528043823242188e+02f, 1.478590545654297e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[153] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[153]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.483860626220703e+02f, 1.587151489257812e+02f);
  bd.angle = 3.853093862533569e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[154] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[154]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.579120483398438e+02f, 1.569628601074219e+02f);
  bd.angle = 4.835237979888916e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[155] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[155]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.659663696289062e+02f, -5.726892852783203e+01f);
  bd.angle = 2.537303447723389e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[156] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[156]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.833540344238281e+01f, -2.352845916748047e+02f);
  bd.angle = 3.858727216720581e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[157] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[157]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.600953674316406e+02f, -1.678614807128906e+02f);
  bd.angle = 9.858317971229553e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[158] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[158]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.685045051574707e+01f, 2.276706504821777e+01f);
  bd.angle = 3.258355379104614e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[159] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[159]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.587815704345703e+02f, 1.243797206878662e+01f);
  bd.angle = 3.645632266998291e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[160] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[160]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.698519134521484e+01f, 1.390468978881836e+01f);
  bd.angle = 3.690265893936157e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[161] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[161]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.739747619628906e+01f, -1.039472122192383e+02f);
  bd.angle = 2.537108182907104e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[162] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[162]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.180609436035156e+02f, -3.909624099731445e+01f);
  bd.angle = 5.381544113159180e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[163] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[163]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.244263458251953e+01f, 2.607734680175781e+02f);
  bd.angle = 6.742876768112183e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[164] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[164]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.472895355224609e+02f, 5.322179031372070e+01f);
  bd.angle = 1.449412941932678e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[165] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[165]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.416920471191406e+02f, 1.612955169677734e+02f);
  bd.angle = 4.632501125335693e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[166] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[166]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.629195556640625e+02f, 6.124165344238281e+01f);
  bd.angle = 5.531469821929932e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[167] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[167]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.844193267822266e+01f, 2.710205688476562e+02f);
  bd.angle = 5.476076126098633e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[168] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[168]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.502644958496094e+02f, 6.551354885101318e+00f);
  bd.angle = 3.831653296947479e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[169] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[169]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.689398803710938e+02f, 4.557635879516602e+01f);
  bd.angle = 3.032016038894653e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[170] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[170]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.356497039794922e+02f, 2.121397209167480e+01f);
  bd.angle = 3.808577060699463e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[171] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[171]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.575191040039062e+02f, -4.393905258178711e+01f);
  bd.angle = 4.320577621459961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[172] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[172]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.436271667480469e+01f, 2.864525756835938e+02f);
  bd.angle = 2.009779930114746e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[173] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[173]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.232954406738281e+01f, -9.447433471679688e+01f);
  bd.angle = 3.669390678405762e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[174] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[174]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.413105106353760e+01f, -2.098372039794922e+02f);
  bd.angle = 2.109172821044922e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[175] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[175]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.926497459411621e+01f, 1.706806945800781e+02f);
  bd.angle = 2.220236539840698e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[176] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[176]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.145073127746582e+01f, 1.608282012939453e+02f);
  bd.angle = 2.594018220901489e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[177] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[177]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.778781433105469e+02f, 3.641611480712891e+01f);
  bd.angle = 6.036226749420166e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[178] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[178]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.626944885253906e+02f, 1.360874938964844e+02f);
  bd.angle = 1.052941799163818e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[179] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[179]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.561030883789062e+02f, 8.518076896667480e+00f);
  bd.angle = 2.281517237424850e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[180] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[180]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.475414581298828e+02f, -1.005373229980469e+02f);
  bd.angle = 6.822140216827393e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[181] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[181]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.793125915527344e+01f, -2.512419891357422e+01f);
  bd.angle = 1.958849430084229e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[182] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[182]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.695490417480469e+02f, 6.291244888305664e+01f);
  bd.angle = 7.158485054969788e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[183] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[183]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.270857810974121e+00f, 2.509316444396973e+01f);
  bd.angle = 3.427245378494263e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[184] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[184]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.206811523437500e+01f, 2.780212097167969e+02f);
  bd.angle = -2.251474618911743e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[185] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[185]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.393093872070312e+01f, 2.793928222656250e+02f);
  bd.angle = 1.038588285446167e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[186] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4761);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[186]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.613748474121094e+02f, -6.171490859985352e+01f);
  bd.angle = 7.749146223068237e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[187] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[187]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.339699363708496e+01f, 2.703468627929688e+02f);
  bd.angle = 5.839902400970459e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[188] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[188]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.812901306152344e+01f, 1.661769866943359e+02f);
  bd.angle = 2.994908094406128e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[189] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[189]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.642974700927734e+02f, 5.894735336303711e+01f);
  bd.angle = 4.030077934265137e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[190] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[190]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.425722808837891e+02f, 1.630291748046875e+02f);
  bd.angle = 4.453478813171387e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[191] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[191]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.458185729980469e+02f, 1.576506347656250e+02f);
  bd.angle = 2.991176128387451e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[192] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[192]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.502359466552734e+02f, 1.716670989990234e+02f);
  bd.angle = 1.701080679893494e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[193] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[193]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.625026702880859e+02f, 5.860139083862305e+01f);
  bd.angle = 6.127237796783447e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[194] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[194]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.198823242187500e+02f, -3.171737861633301e+01f);
  bd.angle = 5.240964889526367e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[195] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[195]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.457346916198730e+01f, 2.648038024902344e+02f);
  bd.angle = 1.450448036193848e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[196] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[196]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.941044616699219e+01f, 2.594641723632812e+02f);
  bd.angle = 2.765635728836060e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[197] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[197]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.383200225830078e+02f, -1.030350723266602e+02f);
  bd.angle = 5.377557277679443e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[198] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[198]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.356060638427734e+02f, 7.199491024017334e+00f);
  bd.angle = 3.625009298324585e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[199] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[199]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.863470458984375e+01f, -9.845642852783203e+01f);
  bd.angle = 9.148628711700439e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[200] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[200]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.498465728759766e+01f, -1.091784515380859e+02f);
  bd.angle = 7.839265465736389e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[201] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[201]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.381142578125000e+02f, 1.687853698730469e+02f);
  bd.angle = 2.009960412979126e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[202] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[202]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.389024353027344e+02f, 1.681986999511719e+02f);
  bd.angle = 3.094610452651978e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[203] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[203]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.313125457763672e+02f, 1.717749938964844e+02f);
  bd.angle = 1.659162044525146e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[204] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[204]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.214305114746094e+01f, -1.943629608154297e+02f);
  bd.angle = 5.301311492919922e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[205] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[205]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.396791687011719e+02f, 1.675782928466797e+02f);
  bd.angle = 4.679597854614258e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[206] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[206]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.956927490234375e+01f, 6.477143859863281e+01f);
  bd.angle = 3.682517290115356e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[207] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[207]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.313013305664062e+02f, 1.631035003662109e+02f);
  bd.angle = 4.832111358642578e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[208] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[208]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.150363159179688e+01f, 6.356062698364258e+01f);
  bd.angle = 9.890024065971375e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[209] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[209]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.310166168212891e+01f, 4.820822143554688e+01f);
  bd.angle = 5.708123683929443e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[210] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[210]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.434904022216797e+02f, 1.586765747070312e+02f);
  bd.angle = 5.531320095062256e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[211] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[211]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.384989776611328e+02f, 2.271899032592773e+01f);
  bd.angle = 3.871481180191040e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[212] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[212]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.332370758056641e+01f, -9.361296653747559e+00f);
  bd.angle = 6.177963733673096e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[213] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[213]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.980720214843750e+02f, 3.467490005493164e+01f);
  bd.angle = 9.715170860290527e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[214] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[214]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.163771057128906e+01f, 5.659664535522461e+01f);
  bd.angle = 3.202256202697754e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[215] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[215]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.617945098876953e+02f, 5.030207824707031e+01f);
  bd.angle = 1.855468153953552e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[216] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[216]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.448867034912109e+01f, -2.430343322753906e+02f);
  bd.angle = 5.494610786437988e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[217] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[217]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.226493377685547e+02f, -1.065680389404297e+02f);
  bd.angle = 9.612500071525574e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[218] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[218]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.432023468017578e+02f, 1.400187587738037e+01f);
  bd.angle = 2.502136230468750e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[219] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[219]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.528961944580078e+01f, 1.564614105224609e+02f);
  bd.angle = 6.021197319030762e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[220] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[220]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.054874610900879e+01f, 2.617358703613281e+02f);
  bd.angle = 5.482686996459961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[221] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[221]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.787143325805664e+01f, 1.514906463623047e+02f);
  bd.angle = 1.997112989425659e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[222] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[222]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.057043075561523e+01f, 1.668129577636719e+02f);
  bd.angle = 4.278439998626709e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[223] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[223]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.004788589477539e+01f, 1.546418151855469e+02f);
  bd.angle = 2.052059173583984e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[224] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[224]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.846951103210449e+01f, 2.565117187500000e+02f);
  bd.angle = 4.262144565582275e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[225] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[225]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.210041809082031e+01f, -2.354635314941406e+02f);
  bd.angle = 5.571950078010559e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[226] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[226]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.034737396240234e+01f, 1.761057128906250e+02f);
  bd.angle = 5.441279411315918e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[227] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[227]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.195678710937500e+01f, 5.106141662597656e+01f);
  bd.angle = 3.172819614410400e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[228] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[228]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.414137878417969e+02f, 1.433654632568359e+02f);
  bd.angle = 2.759681046009064e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[229] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[229]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.161346588134766e+02f, -2.851770973205566e+01f);
  bd.angle = 8.519960641860962e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[230] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[230]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.609400177001953e+02f, 4.774936676025391e+01f);
  bd.angle = 3.696902692317963e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[231] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[231]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.359395217895508e+01f, 1.337102813720703e+02f);
  bd.angle = 6.216498374938965e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[232] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[232]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.547711944580078e+01f, -1.916949920654297e+02f);
  bd.angle = 3.666596651077271e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[233] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[233]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.371523742675781e+02f, 1.588012218475342e+01f);
  bd.angle = 3.324856519699097e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[234] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[234]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.764904022216797e+02f, 6.290297317504883e+01f);
  bd.angle = 2.648458480834961e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[235] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[235]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.469905853271484e+02f, 2.746604537963867e+01f);
  bd.angle = 3.794594764709473e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[236] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[236]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.566862487792969e+01f, 1.494333648681641e+02f);
  bd.angle = 9.760173559188843e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[237] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[237]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.100127563476562e+02f, 4.131334304809570e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[238] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[238]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.974843597412109e+01f, 5.577643394470215e+00f);
  bd.angle = 3.720530986785889e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[239] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[239]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.972338867187500e+01f, -1.406195163726807e+01f);
  bd.angle = 3.998376846313477e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[240] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[240]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.598383178710938e+02f, 3.815365982055664e+01f);
  bd.angle = 5.606730461120605e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[241] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[241]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.119533538818359e+02f, -1.013123626708984e+02f);
  bd.angle = 3.754207372665405e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[242] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[242]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.128796005249023e+01f, 1.567354125976562e+02f);
  bd.angle = 5.434552669525146e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[243] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[243]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.105063247680664e+01f, 1.481824645996094e+02f);
  bd.angle = 1.675635576248169e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[244] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[244]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.105879516601562e+02f, 3.839853286743164e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[245] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[245]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.134904785156250e+02f, -2.159984970092773e+01f);
  bd.angle = 2.166286557912827e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[246] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[246]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.793688964843750e+02f, -5.068785095214844e+01f);
  bd.angle = 2.951302766799927e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[247] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[247]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.145157623291016e+01f, 1.514474182128906e+02f);
  bd.angle = 5.979006290435791e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[248] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[248]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.614582824707031e+02f, 1.536672668457031e+02f);
  bd.angle = 3.354596376419067e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[249] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[249]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.417267913818359e+02f, -9.646686553955078e+01f);
  bd.angle = 3.551284074783325e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[250] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[250]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.468831729888916e+01f, 2.505945739746094e+02f);
  bd.angle = 3.563093662261963e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[251] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[251]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.627194824218750e+02f, -4.841473770141602e+01f);
  bd.angle = 1.457096219062805e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[252] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[252]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.716725311279297e+02f, -1.646134185791016e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[253] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[253]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.128463745117188e+01f, 5.847652816772461e+01f);
  bd.angle = -4.153883457183838e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[254] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[254]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.000648498535156e+01f, -1.571656341552734e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[255] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[255]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.280820846557617e+01f, 2.564370422363281e+02f);
  bd.angle = 8.644510507583618e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[256] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4760);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[256]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.246529388427734e+01f, -1.588844299316406e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[257] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[257]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.930377197265625e+01f, -6.859349060058594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[258] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[258]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.035972595214844e+01f, -7.140151214599609e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[259] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[259]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.119572830200195e+02f, 4.428492736816406e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[260] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[260]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.337476501464844e+02f, -2.328276672363281e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[261] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[261]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.388512573242188e+02f, -1.700830383300781e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[262] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[262]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.363143615722656e+02f, -1.716843261718750e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[263] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[263]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.887599945068359e+01f, -1.396772613525391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[264] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[264]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.156419754028320e+01f, -9.254257965087891e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[265] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[265]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.863872528076172e+01f, -1.366995239257812e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[266] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[266]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.953778839111328e+01f, -9.475481414794922e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[267] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[267]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.767731857299805e+01f, 2.589995117187500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[268] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[268]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.525881652832031e+02f, 1.465525970458984e+02f);
  bd.angle = 3.442035436630249e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[269] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4757);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[269]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.978174781799316e+01f, 1.889946441650391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[270] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[270]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.768138122558594e+01f, 1.868528900146484e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[271] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[271]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.832330322265625e+01f, -6.964775085449219e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[272] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[272]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.286737823486328e+01f, -6.255076980590820e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[273] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[273]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.274718475341797e+01f, -1.070359344482422e+02f);
  bd.angle = -1.393262028694153e+00f;
  bd.linearVelocity.Set(3.827757835388184e-01f, -6.226409077644348e-01f);
  bd.angularVelocity = -3.198903426527977e-02f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[274] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4744);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[274]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.052990150451660e+01f, 1.885827789306641e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[275] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[275]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.950004577636719e+01f, -5.515893554687500e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[276] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[276]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.171571016311646e+00f, 2.401020507812500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[277] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[277]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.233713073730469e+02f, 1.369282073974609e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[278] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[278]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.942007751464844e+02f, -1.479029388427734e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[279] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[279]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.201362228393555e+02f, 1.750399589538574e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[280] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[280]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.620478057861328e+02f, 1.161416015625000e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[281] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[281]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.285404663085938e+02f, -9.388100433349609e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[282] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[282]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.838875732421875e+02f, 1.932585601806641e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[283] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[283]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.813962097167969e+02f, 1.915872955322266e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[284] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[284]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.149894104003906e+02f, 9.361590576171875e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[285] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[285]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.672308349609375e+01f, 1.310661315917969e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[286] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[286]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.252224731445312e+01f, -1.053241348266602e+02f);
  bd.angle = 1.326450228691101e+00f;
  bd.linearVelocity.Set(-2.520145654678345e+00f, -6.820062994956970e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[287] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[287]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.221736907958984e+01f, -1.040830841064453e+02f);
  bd.angle = -1.393262028694153e+00f;
  bd.linearVelocity.Set(4.772072434425354e-01f, -6.055419445037842e-01f);
  bd.angularVelocity = -3.198903426527977e-02f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[288] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4744);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[288]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.013298034667969e+01f, 5.281830215454102e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[289] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[289]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.834698486328125e+01f, -5.487471771240234e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[290] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[290]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.711675720214844e+02f, 1.366998291015625e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[291] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[291]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.255992507934570e+02f, -2.173942260742188e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[292] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[292]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.436898803710938e+01f, 1.553787994384766e+02f);
  bd.angle = 2.565634012222290e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -1.837844365581986e-07f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[293] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[293]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.428202438354492e+01f, 1.554232025146484e+02f);
  bd.angle = 4.579440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[294] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4743);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[294]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.664569702148438e+02f, -5.162621688842773e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[295] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[295]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.664569702148438e+02f, -5.162621688842773e+01f);
  bd.angle = 1.602621555328369e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[296] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4741);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[296]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.294333953857422e+02f, -9.455098724365234e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[297] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[297]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.824299621582031e+02f, 1.904859008789062e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[298] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[298]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.720816955566406e+02f, -8.749137878417969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[299] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[299]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.323568115234375e+02f, 1.008561630249023e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[300] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[300]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.705903320312500e+02f, -9.009442901611328e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[301] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[301]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.193974304199219e+02f, -7.180329895019531e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[302] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[302]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.305039215087891e+01f, 7.282922363281250e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[303] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[303]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.542349548339844e+02f, -1.114536285400391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[304] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[304]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.889218139648438e+01f, 1.521104583740234e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[305] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[305]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.149031829833984e+01f, 4.725074768066406e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[306] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[306]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.278389282226562e+02f, -9.365334320068359e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[307] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[307]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.398396301269531e+01f, 1.390070037841797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[308] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[308]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.629336547851562e+01f, -4.949431991577148e+01f);
  bd.angle = 6.119395494461060e-01f;
  bd.linearVelocity.Set(-2.197167777922004e-04f, -1.357196015305817e-04f);
  bd.angularVelocity = -1.247519999742508e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[309] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[309]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.181338500976562e+01f, 5.839992523193359e+01f);
  bd.angle = 3.574404001235962e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[310] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4705);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[310]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.204537200927734e+01f, 5.895365142822266e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[311] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[311]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.453506469726562e+01f, 5.965665817260742e+01f);
  bd.angle = 3.574404001235962e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[312] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4705);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[312]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.463174133300781e+02f, 1.360447406768799e+01f);
  bd.angle = 2.408554315567017e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[313] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[313]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.458126983642578e+02f, 1.310201072692871e+01f);
  bd.angle = 5.938431739807129e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[314] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4574);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[314]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.446993560791016e+02f, 1.654241638183594e+02f);
  bd.angle = 1.320353221893311e+01f;
  bd.linearVelocity.Set(-2.802596928649634e-45f, -4.203895392974451e-45f);
  bd.angularVelocity = -1.401298464324817e-45f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[315] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4557);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[315]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.445529632568359e+02f, 1.699592742919922e+02f);
  bd.angle = -3.124139308929443e+00f;
  bd.linearVelocity.Set(-1.401298464324817e-45f, -1.401298464324817e-45f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[316] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[316]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.429664764404297e+02f, 1.678516845703125e+02f);
  bd.angle = 1.320353221893311e+01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, -2.802596928649634e-45f);
  bd.angularVelocity = -1.401298464324817e-45f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[317] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4557);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[317]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.566115570068359e+01f, -1.935981750488281e+01f);
  bd.angle = -2.499012470245361e+00f;
  bd.linearVelocity.Set(-1.160465478897095e+00f, -8.686846494674683e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[318] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[318]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(4.828424835205078e+01f, 3.347214508056641e+01f);
  bd.angle = -3.543018341064453e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[319] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[319]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(4.917011260986328e+01f, 3.612887954711914e+01f);
  bd.angle = -3.309671580791473e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[320] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[320]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.071242713928223e+01f, -6.220938873291016e+01f);
  bd.angle = 2.173273563385010e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[321] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[321]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(4.800211715698242e+01f, 3.623283004760742e+01f);
  bd.angle = 1.221729964017868e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[322] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[322]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(4.751157760620117e+01f, 3.433970642089844e+01f);
  bd.angle = -4.049163818359375e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[323] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[323]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.872148132324219e+01f, 2.341712760925293e+01f);
  bd.angle = -1.993762493133545e+00f;
  bd.linearVelocity.Set(-5.950062274932861e-01f, -1.321839928627014e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[324] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[324]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.175840682983398e+02f, 1.532691040039062e+02f);
  bd.angle = -1.414961099624634e+00f;
  bd.linearVelocity.Set(-4.104826256678962e-09f, -3.351889210634340e-09f);
  bd.angularVelocity = 4.465524034458213e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[325] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[325]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.714484405517578e+02f, 6.126200485229492e+01f);
  bd.angle = -9.186919212341309e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[326] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[326]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.485658111572266e+02f, -1.019355697631836e+02f);
  bd.angle = 3.018355607986450e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[327] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[327]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.679006958007812e+01f, -2.398462219238281e+02f);
  bd.angle = -1.766997337341309e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.054740976916571e-16f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[328] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[328]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.633477973937988e+01f, 6.877919006347656e+01f);
  bd.angle = 2.563919126987457e-01f;
  bd.linearVelocity.Set(1.330245256423950e+00f, 3.487378358840942e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[329] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[329]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.273102722167969e+02f, -8.816433715820312e+01f);
  bd.angle = -1.747846007347107e+00f;
  bd.linearVelocity.Set(4.985758442384303e-13f, -5.694136636269671e-15f);
  bd.angularVelocity = -1.933553619437589e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[330] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[330]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.132955551147461e+00f, -9.094824790954590e+00f);
  bd.angle = -2.391980409622192e+00f;
  bd.linearVelocity.Set(-7.838578551511754e-18f, 4.281416540222404e-19f);
  bd.angularVelocity = 2.226248352332760e-10f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[331] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[331]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.324348297119141e+02f, -9.585396575927734e+01f);
  bd.angle = -3.072846412658691e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[332] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[332]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.359155426025391e+02f, -1.094846878051758e+02f);
  bd.angle = -1.315006613731384e+00f;
  bd.linearVelocity.Set(3.661751151084900e-01f, -1.400192022323608e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[333] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[333]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.492772674560547e+02f, -1.126848831176758e+02f);
  bd.angle = -1.612565398216248e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.162958668685660e-20f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[334] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[334]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.907867431640625e+01f, -3.139852333068848e+01f);
  bd.angle = 1.192227676510811e-01f;
  bd.linearVelocity.Set(2.070108413696289e+00f, 1.611627638339996e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[335] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[335]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.465244445800781e+02f, -1.112792968750000e+02f);
  bd.angle = -2.670200109481812e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.162979994435828e-20f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[336] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[336]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.303902282714844e+02f, -8.871162414550781e+01f);
  bd.angle = -3.047257184982300e+00f;
  bd.linearVelocity.Set(-1.424512267112732e+00f, -1.347716450691223e-01f);
  bd.angularVelocity = -9.931175039662675e-24f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[337] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[337]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.330943756103516e+02f, -8.779200744628906e+01f);
  bd.angle = 2.096385002136230e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 5.959603258403979e-39f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[338] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[338]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.264412689208984e+02f, -8.824680328369141e+01f);
  bd.angle = 2.861729383468628e+00f;
  bd.linearVelocity.Set(-9.522509574890137e-01f, 2.736828327178955e-01f);
  bd.angularVelocity = -7.031802223833594e-11f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[339] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[339]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.637916412353516e+02f, -2.944952583312988e+01f);
  bd.angle = 2.429237842559814e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[340] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[340]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.468293914794922e+02f, -8.711806488037109e+01f);
  bd.angle = -1.615779995918274e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[341] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[341]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.606948242187500e+02f, -9.572406005859375e+01f);
  bd.angle = 2.637600183486938e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[342] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[342]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.553876800537109e+02f, 1.389236602783203e+02f);
  bd.angle = 1.776690125465393e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[343] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[343]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.517917175292969e+02f, 1.365003204345703e+02f);
  bd.angle = -2.752218008041382e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[344] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[344]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.467438354492188e+02f, -8.330507659912109e+01f);
  bd.angle = 2.474514961242676e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[345] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[345]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.634061126708984e+02f, -3.613757705688477e+01f);
  bd.angle = -1.035567045211792e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[346] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[346]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.409280700683594e+02f, -8.165122222900391e+01f);
  bd.angle = 4.694858789443970e-01f;
  bd.linearVelocity.Set(1.226403713226318e+00f, 6.221773028373718e-01f);
  bd.angularVelocity = -9.574916824170932e-31f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[347] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[347]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.545135650634766e+02f, -1.053365707397461e+02f);
  bd.angle = -1.895170807838440e-01f;
  bd.linearVelocity.Set(8.413070440292358e-01f, -1.613750904798508e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[348] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[348]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.652218780517578e+02f, -3.131711769104004e+01f);
  bd.angle = 1.139536499977112e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.624112312332727e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[349] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[349]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.663652496337891e+02f, -3.078295326232910e+01f);
  bd.angle = 2.441200733184814e+00f;
  bd.linearVelocity.Set(-1.020986914634705e+00f, 8.608262538909912e-01f);
  bd.angularVelocity = 2.624101580295246e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[350] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[350]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.817869567871094e+01f, -2.440777435302734e+02f);
  bd.angle = 2.854685544967651e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[351] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[351]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.029571294784546e+00f, 2.397268676757812e+02f);
  bd.angle = -9.411169052124023e+00f;
  bd.linearVelocity.Set(-2.075563192367554e+00f, 5.796065554022789e-02f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[352] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[352]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.319966888427734e+01f, -2.472746276855469e+02f);
  bd.angle = -4.596356451511383e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[353] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[353]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.206224975585938e+02f, -9.932706451416016e+01f);
  bd.angle = -8.145924568176270e+00f;
  bd.linearVelocity.Set(-6.796431541442871e-01f, -1.961991667747498e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[354] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[354]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(9.897350311279297e+00f, 3.102909564971924e+00f);
  bd.angle = 4.568039417266846e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[355] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[355]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.393803405761719e+01f, -2.339707031250000e+02f);
  bd.angle = 1.718065738677979e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[356] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[356]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.844607696533203e+02f, 3.611368560791016e+01f);
  bd.angle = -4.111821949481964e-02f;
  bd.linearVelocity.Set(3.372059229067581e-11f, -1.258735754516849e-10f);
  bd.angularVelocity = 4.617867034539813e-06f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[357] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[357]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(5.666482543945312e+01f, 1.243930053710938e+01f);
  bd.angle = 7.397074103355408e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[358] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[358]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.300293731689453e+01f, -6.280709457397461e+01f);
  bd.angle = 3.137442767620087e-01f;
  bd.linearVelocity.Set(1.361025571823120e+00f, 4.415992200374603e-01f);
  bd.angularVelocity = -1.214356607834484e-27f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[359] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[359]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-9.196956634521484e+01f, -2.369578094482422e+02f);
  bd.angle = 3.561318874359131e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[360] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[360]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.766596603393555e+01f, 7.537944793701172e+01f);
  bd.angle = 2.667490005493164e+00f;
  bd.linearVelocity.Set(-1.885115504264832e+00f, 8.704373240470886e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[361] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[361]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.695109558105469e+01f, -2.400550384521484e+02f);
  bd.angle = -1.216297626495361e+00f;
  bd.linearVelocity.Set(4.993762969970703e-01f, -1.349130630493164e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[362] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[362]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.527664337158203e+02f, -2.327041320800781e+02f);
  bd.angle = 4.492642402648926e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[363] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[363]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.598999023437500e+01f, -2.400018310546875e+02f);
  bd.angle = 4.940101146697998e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[364] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[364]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.691215515136719e+01f, -2.357582702636719e+02f);
  bd.angle = 3.397718906402588e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[365] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[365]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.057223892211914e+01f, 2.439626617431641e+02f);
  bd.angle = -3.006761789321899e+00f;
  bd.linearVelocity.Set(-2.067340850830078e+00f, -1.934527158737183e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[366] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[366]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.377220001220703e+02f, 3.279242706298828e+01f);
  bd.angle = 6.922468662261963e+00f;
  bd.linearVelocity.Set(1.613474726676941e+00f, 1.306914210319519e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[367] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[367]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.669010734558105e+01f, 2.585371017456055e+01f);
  bd.angle = 4.694357872009277e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[368] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[368]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.665500068664551e+01f, 6.656839752197266e+01f);
  bd.angle = -2.406693935394287e+00f;
  bd.linearVelocity.Set(-1.020580172538757e+00f, -9.223804473876953e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[369] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[369]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.514076385498047e+02f, -2.288068695068359e+02f);
  bd.angle = -1.903419494628906e+00f;
  bd.linearVelocity.Set(-4.725353717803955e-01f, -1.367912650108337e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[370] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[370]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.280772705078125e+02f, -9.389855194091797e+01f);
  bd.angle = 6.041939258575439e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[371] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[371]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.385899257659912e+01f, 1.059217643737793e+01f);
  bd.angle = 2.508100032806396e+00f;
  bd.linearVelocity.Set(-1.499678850173950e+00f, 1.101480484008789e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[372] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[372]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.629893493652344e+01f, 6.268812179565430e+00f);
  bd.angle = 3.250533580780029e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[373] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[373]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.359117279052734e+02f, -9.362834930419922e+01f);
  bd.angle = 2.952121734619141e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[374] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[374]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.574326477050781e+02f, -1.053724365234375e+02f);
  bd.angle = 5.111628770828247e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[375] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[375]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.225056934356689e+01f, -2.027657623291016e+02f);
  bd.angle = 4.027493476867676e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[376] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[376]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.525363826751709e+01f, -2.088423156738281e+02f);
  bd.angle = 5.523977756500244e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[377] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[377]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.610276947021484e+02f, -1.690365447998047e+02f);
  bd.angle = 4.153148829936981e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[378] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[378]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.615463714599609e+02f, -1.664578094482422e+02f);
  bd.angle = 3.751272201538086e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[379] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[379]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.544101257324219e+02f, -2.294156494140625e+02f);
  bd.angle = -1.720723986625671e+00f;
  bd.linearVelocity.Set(-2.161536514759064e-01f, -1.430997133255005e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[380] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[380]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.547553710937500e+02f, -2.344574127197266e+02f);
  bd.angle = 1.489552259445190e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[381] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[381]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.516530914306641e+02f, -2.348453674316406e+02f);
  bd.angle = -5.038928613066673e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[382] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[382]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.598425750732422e+02f, -1.664373626708984e+02f);
  bd.angle = -3.004578873515129e-02f;
  bd.linearVelocity.Set(-1.688176756288135e-20f, 3.004370391111174e-19f);
  bd.angularVelocity = -7.429078463516703e-10f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[383] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[383]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.893808364868164e+00f, -1.998847351074219e+02f);
  bd.angle = 2.833912849426270e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[384] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[384]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.632750511169434e+00f, -1.985033569335938e+02f);
  bd.angle = -3.718948364257812e-02f;
  bd.linearVelocity.Set(1.374680280685425e+00f, -5.116694793105125e-02f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[385] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[385]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.835629940032959e+00f, -1.984814758300781e+02f);
  bd.angle = -3.131721019744873e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[386] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[386]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.947374725341797e+01f, -1.920146026611328e+02f);
  bd.angle = -3.123398303985596e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -4.679563160581157e-12f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[387] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[387]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.228302860260010e+01f, -2.035620269775391e+02f);
  bd.angle = 3.205440640449524e-01f;
  bd.linearVelocity.Set(8.339356780052185e-01f, -7.804680615663528e-02f);
  bd.angularVelocity = 5.388750433921814e-01f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[388] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[388]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.555136680603027e+01f, -1.994056243896484e+02f);
  bd.angle = -1.379230499267578e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[389] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[389]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.220559692382812e+01f, -1.906932067871094e+02f);
  bd.angle = 4.880066215991974e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -4.679603059221105e-12f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[390] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[390]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.211164093017578e+01f, -8.477614402770996e+00f);
  bd.angle = 1.830576777458191e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[391] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[391]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.837593841552734e+01f, 2.592973632812500e+02f);
  bd.angle = 1.556314945220947e+00f;
  bd.linearVelocity.Set(-5.613385140895844e-02f, 2.075617551803589e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[392] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[392]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.684159851074219e+02f, -1.095254516601562e+02f);
  bd.angle = 1.635749697685242e+00f;
  bd.linearVelocity.Set(-2.206757515668869e-01f, 2.064612388610840e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[393] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[393]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.176329421997070e+02f, 1.569014434814453e+02f);
  bd.angle = 1.248461365699768e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -5.832664212723770e-11f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[394] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[394]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.169218902587891e+02f, -1.120198211669922e+02f);
  bd.angle = -2.913416147232056e+00f;
  bd.linearVelocity.Set(-1.608531355857849e+00f, -3.735343217849731e-01f);
  bd.angularVelocity = 1.669619422038647e-25f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[395] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[395]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.668737792968750e+01f, -4.705498886108398e+01f);
  bd.angle = -3.345582783222198e-01f;
  bd.linearVelocity.Set(1.351539611816406e+00f, -4.698311984539032e-01f);
  bd.angularVelocity = 1.215849925765113e-28f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[396] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[396]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.211791076660156e+02f, -1.112406311035156e+02f);
  bd.angle = -1.990115404129028e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[397] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[397]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.691963500976562e+02f, 6.148927307128906e+01f);
  bd.angle = 4.085394144058228e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[398] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.000000000000000e+00f, -4.999999701976776e-01f);
    vs[1].Set(1.000000000000000e+00f, 5.000000596046448e-01f);
    vs[2].Set(-1.000000000000000e+00f, 4.999999701976776e-01f);
    vs[3].Set(-1.000000000000000e+00f, -5.000000596046448e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[398]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.703157806396484e+01f, -1.946116333007812e+02f);
  bd.angle = 6.118397712707520e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[399] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[399]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.933951377868652e+00f, -2.020249176025391e+02f);
  bd.angle = -8.123171925544739e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[400] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[400]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.551184234619141e+02f, 1.813539581298828e+02f);
  bd.angle = 2.661613941192627e+00f;
  bd.linearVelocity.Set(-5.863077240064740e-05f, -1.127431969507597e-04f);
  bd.angularVelocity = -2.123062877217308e-04f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[401] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[401]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.068088836669922e+02f, -1.175348434448242e+02f);
  bd.angle = 6.042585849761963e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[402] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[402]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.569429206848145e+01f, -6.805871582031250e+01f);
  bd.angle = 4.567026495933533e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[403] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[403]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.093579330444336e+02f, -1.226391067504883e+02f);
  bd.angle = -4.886922538280487e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[404] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[404]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.104009857177734e+02f, -1.227029037475586e+02f);
  bd.angle = 6.108652949333191e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[405] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[405]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.261256408691406e+01f, 2.067887115478516e+02f);
  bd.angle = 7.482877373695374e-01f;
  bd.linearVelocity.Set(1.579017639160156e+00f, 1.348341464996338e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[406] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[406]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.071805572509766e+01f, -1.970042724609375e+02f);
  bd.angle = -2.199187040328979e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[407] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[407]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.784643554687500e+01f, 4.422397613525391e+00f);
  bd.angle = -1.974096775054932e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[408] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[408]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.444295349121094e+02f, -1.470857391357422e+02f);
  bd.angle = -3.037186861038208e-01f;
  bd.linearVelocity.Set(1.953850150108337e+00f, -7.027024626731873e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[409] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[409]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.508860321044922e+02f, 5.128598785400391e+01f);
  bd.angle = 4.828480243682861e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[410] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[410]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.339109649658203e+02f, 3.199501228332520e+01f);
  bd.angle = -8.243867874145508e+00f;
  bd.linearVelocity.Set(-7.087823748588562e-01f, -1.951652884483337e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[411] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[411]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.710759124755859e+02f, 3.267845535278320e+01f);
  bd.angle = 4.410110950469971e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[412] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[412]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.651910095214844e+02f, 5.237199783325195e+01f);
  bd.angle = -1.959520429372787e-01f;
  bd.linearVelocity.Set(1.068608835339546e-01f, -1.039597690105438e-01f);
  bd.angularVelocity = -2.378191053867340e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[413] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[413]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.661210021972656e+02f, 3.919572067260742e+01f);
  bd.angle = 1.542710900306702e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[414] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[414]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.655374603271484e+02f, 5.285514450073242e+01f);
  bd.angle = -2.092516899108887e+00f;
  bd.linearVelocity.Set(1.007626578211784e-01f, -9.042254835367203e-02f);
  bd.angularVelocity = 5.353179574012756e-01f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[415] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[415]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.595332946777344e+02f, 3.962231826782227e+01f);
  bd.angle = 3.291900753974915e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[416] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[416]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.563751220703125e+01f, -5.030828094482422e+01f);
  bd.angle = -1.542798876762390e+00f;
  bd.linearVelocity.Set(4.218091070652008e-02f, -1.374768733978271e+00f);
  bd.angularVelocity = -1.247532386332750e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[417] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[417]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.636646118164062e+02f, 3.269931030273438e+01f);
  bd.angle = 4.234836101531982e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[418] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[418]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.192858886718750e+01f, 4.760123062133789e+01f);
  bd.angle = 6.653372049331665e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.689703458396252e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[419] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[419]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.437516021728516e+01f, 4.215251159667969e+01f);
  bd.angle = -1.230741620063782e+00f;
  bd.linearVelocity.Set(4.244673252105713e-01f, -1.204600572586060e+00f);
  bd.angularVelocity = 2.535702660679817e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[420] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[420]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.148304748535156e+01f, 4.226752090454102e+01f);
  bd.angle = -2.511415481567383e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -4.217960867164294e-25f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[421] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[421]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.598878021240234e+02f, -1.670324096679688e+02f);
  bd.angle = 9.122590422630310e-01f;
  bd.linearVelocity.Set(1.688176756288135e-20f, -3.004370391111174e-19f);
  bd.angularVelocity = -7.430280279940860e-10f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[422] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[422]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.170583572387695e+02f, 1.526727752685547e+02f);
  bd.angle = 4.994053363800049e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[423] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[423]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.614717864990234e+01f, -1.940233306884766e+02f);
  bd.angle = -1.966076970100403e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[424] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[424]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.608861846923828e+02f, 2.791083526611328e+01f);
  bd.angle = -1.344167470932007e+00f;
  bd.linearVelocity.Set(3.214924037456512e-01f, -1.394288778305054e+00f);
  bd.angularVelocity = -5.312742867794679e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[425] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[425]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.315921401977539e+01f, -7.050691986083984e+01f);
  bd.angle = -4.353731498122215e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[426] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[426]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.539624633789062e+02f, 3.894356536865234e+01f);
  bd.angle = -2.458625316619873e+00f;
  bd.linearVelocity.Set(-2.049005342996679e-05f, -1.314610926783644e-05f);
  bd.angularVelocity = 3.715847386047244e-03f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[427] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[427]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.548046875000000e+02f, 3.846949386596680e+01f);
  bd.angle = 2.574457526206970e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.794902247842401e-04f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[428] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[428]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.540393676757812e+02f, 1.360445251464844e+02f);
  bd.angle = 1.693037986755371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[429] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[429]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.774410247802734e+00f, 8.413941192626953e+01f);
  bd.angle = -8.955929875373840e-01f;
  bd.linearVelocity.Set(1.364017009735107e+00f, -1.565496444702148e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[430] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[430]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.111615419387817e+00f, 1.071796112060547e+02f);
  bd.angle = 5.411629676818848e-01f;
  bd.linearVelocity.Set(1.733753204345703e+00f, 1.142558336257935e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[431] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[431]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.987889862060547e+01f, -5.411642837524414e+01f);
  bd.angle = 1.456047296524048e+00f;
  bd.linearVelocity.Set(3.231684565544128e-01f, 2.051069021224976e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[432] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[432]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.616956939697266e+02f, 3.730812072753906e+01f);
  bd.angle = -3.915702700614929e-01f;
  bd.linearVelocity.Set(1.908296465873718e+00f, -8.194019198417664e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[433] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[433]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.672319602966309e+01f, 4.092034149169922e+01f);
  bd.angle = 5.874237060546875e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[434] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[434]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.196303634643555e+02f, 1.556373901367188e+02f);
  bd.angle = 5.654015064239502e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[435] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[435]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.803591003417969e+02f, -4.524011993408203e+01f);
  bd.angle = -3.480116367340088e+00f;
  bd.linearVelocity.Set(-1.928214430809021e+00f, 7.702665328979492e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[436] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[436]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.241717529296875e+01f, -6.534706115722656e+01f);
  bd.angle = -1.688697934150696e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[437] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[437]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.219758987426758e+02f, -5.447659683227539e+01f);
  bd.angle = -5.359580039978027e+00f;
  bd.linearVelocity.Set(1.182095766067505e+00f, 1.707035779953003e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[438] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[438]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.234429168701172e+01f, -5.909067916870117e+01f);
  bd.angle = 1.292378604412079e-01f;
  bd.linearVelocity.Set(1.081552273955733e-12f, -1.291793386669349e-12f);
  bd.angularVelocity = 7.939456736494321e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[439] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[439]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.308662414550781e+01f, 4.723535156250000e+01f);
  bd.angle = 8.852767348289490e-01f;
  bd.linearVelocity.Set(8.708006143569946e-01f, 1.064366817474365e+00f);
  bd.angularVelocity = 1.689688178885262e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[440] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[440]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.262333145141602e+02f, 1.500164489746094e+02f);
  bd.angle = 1.031811714172363e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[441] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[441]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.770082702636719e+02f, 8.919757843017578e+01f);
  bd.angle = 2.463003844022751e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 4.583992046001071e-28f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[442] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[442]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.006573944091797e+02f, -1.884808654785156e+02f);
  bd.angle = -1.382480812072754e+01f;
  bd.linearVelocity.Set(7.091602683067322e-01f, -1.952097296714783e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[443] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[443]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.979584960937500e+02f, -1.407050933837891e+02f);
  bd.angle = -9.719927310943604e-01f;
  bd.linearVelocity.Set(7.751371264457703e-01f, -1.135928153991699e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[444] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[444]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.254173851013184e+01f, 6.438404083251953e+01f);
  bd.angle = 2.073390007019043e+00f;
  bd.linearVelocity.Set(-6.186813116073608e-01f, 1.125539898872375e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[445] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[445]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.639456558227539e+01f, 5.139031219482422e+01f);
  bd.angle = -4.433136463165283e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[446] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[446]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.601189422607422e+01f, 5.039483261108398e+01f);
  bd.angle = -2.095807343721390e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[447] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[447]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.371071338653564e+01f, 5.045044708251953e+01f);
  bd.angle = 1.745323650538921e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[448] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[448]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.351023864746094e+01f, 5.148377609252930e+01f);
  bd.angle = -5.235989391803741e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[449] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[449]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.828826904296875e+02f, 7.997286987304688e+01f);
  bd.angle = 3.131035566329956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[450] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[450]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.735819244384766e+01f, -2.450619354248047e+02f);
  bd.angle = -1.874497532844543e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[451] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[451]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.445221900939941e+01f, 6.876775360107422e+01f);
  bd.angle = 1.519561767578125e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[452] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[452]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.166994018554688e+02f, 1.536229400634766e+02f);
  bd.angle = -3.120120763778687e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[453] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[453]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.523325347900391e+01f, 4.668956375122070e+01f);
  bd.angle = 1.512353181838989e+00f;
  bd.linearVelocity.Set(4.321516478000831e-09f, 7.386013578525308e-08f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[454] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[454]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.524320602416992e+01f, 4.998871612548828e+01f);
  bd.angle = -3.629966080188751e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[455] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[455]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.731299591064453e+01f, -3.996856307983398e+01f);
  bd.angle = 1.357563376426697e+00f;
  bd.linearVelocity.Set(2.957291603088379e-01f, 1.365799307823181e+00f);
  bd.angularVelocity = -1.930905314768368e-26f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[456] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[456]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.845005798339844e+01f, 1.835217857360840e+01f);
  bd.angle = -2.900341033935547e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[457] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[457]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.047050476074219e+01f, -1.340515518188477e+01f);
  bd.angle = -2.224579095840454e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[458] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[458]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.873365402221680e+01f, 4.130913162231445e+01f);
  bd.angle = 1.043511509895325e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[459] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[459]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.988651275634766e+00f, 7.098174285888672e+01f);
  bd.angle = -2.147449970245361e+00f;
  bd.linearVelocity.Set(-7.801367640495300e-01f, -1.199494361877441e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[460] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[460]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.924392395019531e+02f, 2.962445259094238e+01f);
  bd.angle = 5.215346813201904e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[461] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[461]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.707415771484375e+02f, 5.834646606445312e+01f);
  bd.angle = -9.186919212341309e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[462] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[462]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.340785980224609e+01f, 4.283123397827148e+01f);
  bd.angle = 3.127571046352386e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.535714767873287e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[463] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[463]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.036747550964355e+01f, -6.333790969848633e+01f);
  bd.angle = 2.058279991149902e+00f;
  bd.linearVelocity.Set(-6.779125928878784e-01f, 1.278693199157715e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[464] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[464]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.578732757568359e+02f, 2.237226486206055e+01f);
  bd.angle = -3.108540058135986e+00f;
  bd.linearVelocity.Set(-1.446439623832703e+00f, -4.782608896493912e-02f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[465] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[465]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.637604217529297e+02f, 5.183322143554688e+01f);
  bd.angle = 2.550909280776978e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[466] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[466]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.265144729614258e+01f, 1.864800071716309e+01f);
  bd.angle = -1.667490363121033e+00f;
  bd.linearVelocity.Set(-9.822275023907423e-04f, -1.012650132179260e-02f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[467] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[467]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.980856628417969e+02f, 9.511704254150391e+01f);
  bd.angle = -1.645970153808594e+01f;
  bd.linearVelocity.Set(-1.456626653671265e+00f, 1.479719996452332e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[468] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[468]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.400618896484375e+02f, -1.014607772827148e+02f);
  bd.angle = 4.330961704254150e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[469] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[469]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.273555183410645e+01f, 3.398543548583984e+01f);
  bd.angle = 6.201698780059814e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[470] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[470]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.766862640380859e+02f, 2.260632705688477e+01f);
  bd.angle = -9.114691019058228e-01f;
  bd.linearVelocity.Set(8.765276670455933e-01f, -1.130972862243652e+00f);
  bd.angularVelocity = 6.056734183434356e-34f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[471] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[471]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.687712402343750e+02f, 1.389809112548828e+02f);
  bd.angle = 1.005015671253204e-01f;
  bd.linearVelocity.Set(2.055592060089111e+00f, 2.934923171997070e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[472] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[472]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.660766448974609e+02f, 5.179858398437500e+01f);
  bd.angle = 2.158440113067627e+00f;
  bd.linearVelocity.Set(-2.671635523438454e-02f, 2.025714889168739e-02f);
  bd.angularVelocity = -4.257432371377945e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[473] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[473]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.638432617187500e+02f, 2.663318061828613e+01f);
  bd.angle = -2.531881630420685e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[474] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[474]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.788086853027344e+02f, 1.926166687011719e+02f);
  bd.angle = -2.112464904785156e+00f;
  bd.linearVelocity.Set(-9.957239627838135e-01f, -1.822046995162964e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[475] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[475]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.073716926574707e+01f, -1.763320007324219e+02f);
  bd.angle = 2.984621524810791e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[476] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[476]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.370681381225586e+01f, -1.784511566162109e+02f);
  bd.angle = 2.291549682617188e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[477] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[477]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.193814849853516e+01f, -9.834347534179688e+01f);
  bd.angle = 1.141370487213135e+01f;
  bd.linearVelocity.Set(7.821754217147827e-01f, -1.924118399620056e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[478] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[478]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.843703460693359e+02f, 1.712953758239746e+01f);
  bd.angle = 2.292610168457031e+00f;
  bd.linearVelocity.Set(6.120537410225779e-11f, 4.476821136023545e-10f);
  bd.angularVelocity = 1.765490196703468e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[479] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[479]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.482391204833984e+02f, 1.759408111572266e+02f);
  bd.angle = 3.413913249969482e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[480] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[480]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.190984725952148e+01f, 2.091257629394531e+02f);
  bd.angle = -6.748507022857666e-01f;
  bd.linearVelocity.Set(1.565977454185486e+00f, -1.363464832305908e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[481] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[481]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.527274322509766e+02f, 4.510274124145508e+01f);
  bd.angle = 7.682537436485291e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[482] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[482]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.470932922363281e+02f, 1.886225128173828e+02f);
  bd.angle = -1.914649486541748e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[483] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[483]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.444214935302734e+02f, 1.882925567626953e+02f);
  bd.angle = -1.500682830810547e-01f;
  bd.linearVelocity.Set(2.724401354789734e-01f, -3.780353069305420e-02f);
  bd.angularVelocity = -3.167841210961342e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[484] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[484]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.479472961425781e+02f, 4.774819564819336e+01f);
  bd.angle = 5.613712787628174e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[485] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[485]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.616818695068359e+02f, 1.747443389892578e+02f);
  bd.angle = -2.043267488479614e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.408722821201081e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[486] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[486]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.500733642578125e+02f, 1.721016387939453e+02f);
  bd.angle = -1.304290771484375e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -1.269783834528377e-21f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[487] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[487]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.648072967529297e+02f, -2.202000274658203e+02f);
  bd.angle = -3.409217596054077e+00f;
  bd.linearVelocity.Set(-2.023525476455688e+00f, 4.654740095138550e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[488] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[488]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.998892211914062e+01f, 1.344463157653809e+01f);
  bd.angle = 5.397629261016846e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[489] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[489]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.009866333007812e+02f, 2.539997863769531e+01f);
  bd.angle = 1.679903864860535e+00f;
  bd.linearVelocity.Set(-1.402151286602020e-01f, 2.071632862091064e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[490] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[490]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.615307006835938e+02f, 2.140571212768555e+01f);
  bd.angle = -3.054326057434082e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[491] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[491]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.005860519409180e+01f, -6.122805404663086e+01f);
  bd.angle = -2.845525503158569e+00f;
  bd.linearVelocity.Set(-1.368485450744629e+00f, -4.174330234527588e-01f);
  bd.angularVelocity = -1.214351889306120e-27f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[492] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[492]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.918625640869141e+01f, 8.217592620849609e+01f);
  bd.angle = 2.211935806274414e+01f;
  bd.linearVelocity.Set(-2.046532392501831e+00f, -3.507506847381592e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[493] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[493]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.533038330078125e+01f, -7.457185363769531e+01f);
  bd.angle = 4.201066493988037e+00f;
  bd.linearVelocity.Set(-1.090332746505737e+00f, -1.767058610916138e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[494] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[494]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.584416656494141e+02f, 4.296952438354492e+01f);
  bd.angle = 2.778887510299683e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[495] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[495]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.537014770507812e+02f, 1.820908813476562e+02f);
  bd.angle = 2.851037025451660e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[496] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[496]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.654821929931641e+02f, 5.179201507568359e+01f);
  bd.angle = -5.983083844184875e-01f;
  bd.linearVelocity.Set(-2.811135537922382e-02f, 4.030593205243349e-03f);
  bd.angularVelocity = 8.335737138986588e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[497] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[497]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.105988693237305e+01f, 1.708205261230469e+02f);
  bd.angle = 4.233739078044891e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 4.376634872608675e-29f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[498] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[498]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.323281860351562e+01f, 1.709529571533203e+02f);
  bd.angle = -8.701127767562866e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[499] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[499]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.457922744750977e+01f, 1.714755249023438e+02f);
  bd.angle = 2.174865961074829e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[500] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[500]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.692268371582031e+01f, 1.755045318603516e+02f);
  bd.angle = -1.155359387397766e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[501] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[501]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.658167648315430e+01f, 1.731113128662109e+02f);
  bd.angle = 2.796055555343628e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 6.112926248324933e-19f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[502] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[502]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.968349838256836e+01f, 1.672380371093750e+02f);
  bd.angle = -5.623372197151184e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 4.376792859049426e-29f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[503] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[503]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.539794921875000e+02f, 1.393485717773438e+02f);
  bd.angle = -1.273710608482361e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[504] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[504]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.217961883544922e+01f, -2.446343231201172e+02f);
  bd.angle = 3.031521320343018e+00f;
  bd.linearVelocity.Set(-1.440788984298706e+00f, 1.591895818710327e-01f);
  bd.angularVelocity = -4.528704380390991e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[505] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[505]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.220162200927734e+01f, -2.529500274658203e+02f);
  bd.angle = 2.630893707275391e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[506] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[506]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.215230560302734e+01f, -2.455444641113281e+02f);
  bd.angle = 3.089294910430908e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -4.528740191744873e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[507] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[507]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.627154541015625e+01f, -2.445932159423828e+02f);
  bd.angle = 1.525204539299011e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[508] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[508]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.801014709472656e+01f, -2.532666778564453e+02f);
  bd.angle = 2.810047864913940e+00f;
  bd.linearVelocity.Set(-9.968830347061157e-01f, 3.431737422943115e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[509] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[509]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.160839843750000e+01f, -2.395204925537109e+02f);
  bd.angle = -2.089058309793472e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[510] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[510]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.989955902099609e+01f, -2.325121154785156e+02f);
  bd.angle = -2.876971721649170e+00f;
  bd.linearVelocity.Set(-1.388513922691345e+00f, -3.762430548667908e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[511] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[511]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.216866302490234e+01f, -2.428072967529297e+02f);
  bd.angle = 2.444603681564331e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[512] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[512]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.502966613769531e+02f, 2.173732566833496e+01f);
  bd.angle = 2.307666540145874e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -6.013498549795372e-31f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[513] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[513]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.533498382568359e+02f, 2.707278060913086e+01f);
  bd.angle = -2.383678436279297e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[514] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[514]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.469595031738281e+02f, 2.683174705505371e+01f);
  bd.angle = 5.553444027900696e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[515] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[515]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.532886505126953e+02f, 2.169334793090820e+01f);
  bd.angle = -1.076555967330933e+00f;
  bd.linearVelocity.Set(6.824247837066650e-01f, -1.266422629356384e+00f);
  bd.angularVelocity = -6.012325876630991e-31f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[516] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[516]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.510569610595703e+02f, 2.455964088439941e+01f);
  bd.angle = -9.152996540069580e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[517] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[517]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.607114105224609e+02f, -1.621090850830078e+02f);
  bd.angle = -5.977426767349243e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[518] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[518]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.596709899902344e+02f, -1.705020599365234e+02f);
  bd.angle = -2.963145971298218e+00f;
  bd.linearVelocity.Set(-1.314248323440552e+00f, -2.370327711105347e-01f);
  bd.angularVelocity = -2.355014070487969e-24f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[519] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[519]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.640589294433594e+02f, 1.342622280120850e+01f);
  bd.angle = 5.329053997993469e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.469976334043686e-20f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[520] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[520]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.671917419433594e+02f, 1.439831447601318e+01f);
  bd.angle = 1.911390423774719e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.922711838991863e-29f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[521] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[521]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.585876464843750e+02f, 6.952401638031006e+00f);
  bd.angle = -2.622455835342407e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.130953819483693e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[522] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[522]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.606624450683594e+02f, 1.029763889312744e+01f);
  bd.angle = 1.708027243614197e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.026697233896812e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[523] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[523]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.649316406250000e+02f, 1.441718196868896e+01f);
  bd.angle = -2.736438035964966e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -8.015427215937954e-43f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[524] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[524]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.980059051513672e+01f, -2.385324287414551e+01f);
  bd.angle = -1.580254316329956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[525] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[525]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.175815582275391e+01f, -2.361819076538086e+01f);
  bd.angle = 2.032959938049316e+00f;
  bd.linearVelocity.Set(-5.954644680023193e-01f, 1.195347189903259e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[526] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[526]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.448470306396484e+01f, -2.495082664489746e+01f);
  bd.angle = -2.537931203842163e+00f;
  bd.linearVelocity.Set(2.723940461874008e-02f, -5.760613083839417e-01f);
  bd.angularVelocity = -1.863963842391968e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[527] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[527]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.176213836669922e+01f, -2.080474662780762e+01f);
  bd.angle = 2.158245325088501e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -7.609050661283757e-43f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[528] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[528]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.004792785644531e+01f, -3.289051818847656e+01f);
  bd.angle = -2.267218351364136e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[529] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[529]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.179144287109375e+01f, -2.310709762573242e+01f);
  bd.angle = 1.458907425403595e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[530] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[530]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.606320190429688e+01f, -2.550249328613281e+02f);
  bd.angle = 3.030205011367798e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[531] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[531]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.988731002807617e+01f, -2.543222961425781e+02f);
  bd.angle = -2.468120574951172e+00f;
  bd.linearVelocity.Set(-7.075135272316402e-06f, 1.586487883287191e-06f);
  bd.angularVelocity = 3.780709579586983e-03f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[532] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[532]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.873965454101562e+01f, -2.534610595703125e+02f);
  bd.angle = -4.630410075187683e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[533] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[533]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.894354248046875e+01f, -2.572825012207031e+02f);
  bd.angle = 1.690546035766602e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[534] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[534]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.643781661987305e+01f, -1.796273956298828e+02f);
  bd.angle = -2.298699378967285e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 8.820236196096274e-37f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[535] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[535]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.456054878234863e+01f, -1.840784759521484e+02f);
  bd.angle = 1.922027468681335e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[536] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[536]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.802984428405762e+01f, -1.782142944335938e+02f);
  bd.angle = -3.024200677871704e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.616257648752244e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[537] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[537]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.252767372131348e+01f, -1.756619262695312e+02f);
  bd.angle = 8.901244401931763e-01f;
  bd.linearVelocity.Set(5.390879511833191e-01f, 6.657285094261169e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[538] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[538]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.260996475219727e+02f, 1.508008117675781e+02f);
  bd.angle = -5.928390622138977e-01f;
  bd.linearVelocity.Set(4.091002483619377e-05f, -3.353649617565679e-06f);
  bd.angularVelocity = -6.507697980850935e-03f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[539] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[539]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.246398696899414e+02f, 1.516018829345703e+02f);
  bd.angle = 1.851433873176575e+00f;
  bd.linearVelocity.Set(-3.962993025779724e-01f, 1.374898195266724e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[540] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[540]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.298861389160156e+02f, -3.158956909179688e+01f);
  bd.angle = -1.220593929290771e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[541] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[541]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.344062194824219e+02f, -3.262882614135742e+01f);
  bd.angle = -1.049530148506165e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[542] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[542]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.092829589843750e+02f, -4.834502792358398e+01f);
  bd.angle = -2.631779909133911e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[543] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[543]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.308236541748047e+02f, -4.593166732788086e+01f);
  bd.angle = -2.310170173645020e+00f;
  bd.linearVelocity.Set(-9.752141237258911e-01f, -1.069382548332214e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[544] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[544]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.135987548828125e+02f, -2.508409500122070e+01f);
  bd.angle = -2.526238679885864e+00f;
  bd.linearVelocity.Set(-6.966015696525574e-01f, -4.924403131008148e-01f);
  bd.angularVelocity = -1.039277326975238e-26f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[545] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[545]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.207798767089844e+02f, -2.143549156188965e+01f);
  bd.angle = 2.871108531951904e+00f;
  bd.linearVelocity.Set(-1.383893966674805e+00f, 3.837254047393799e-01f);
  bd.angularVelocity = -4.075816713335163e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[546] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[546]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.083715667724609e+02f, -3.845242691040039e+01f);
  bd.angle = 2.287978410720825e+00f;
  bd.linearVelocity.Set(-3.428183015241615e-10f, -6.411014774609924e-11f);
  bd.angularVelocity = -1.536683703307062e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[547] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[547]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.359065093994141e+02f, -3.450963973999023e+01f);
  bd.angle = 7.723265290260315e-01f;
  bd.linearVelocity.Set(1.036637902259827e+00f, 1.009879469871521e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[548] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[548]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.172478332519531e+02f, -4.886679077148438e+01f);
  bd.angle = -2.578732013702393e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[549] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[549]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.212254180908203e+02f, -4.692253494262695e+01f);
  bd.angle = 2.955244302749634e+00f;
  bd.linearVelocity.Set(-1.262134313583374e+00f, 2.379574477672577e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[550] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[550]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.263325195312500e+02f, -2.736065292358398e+01f);
  bd.angle = 2.862549304962158e+00f;
  bd.linearVelocity.Set(-1.380558967590332e+00f, 3.955560326576233e-01f);
  bd.angularVelocity = -4.075816713335163e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[551] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[551]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.138932800292969e+02f, -2.727955055236816e+01f);
  bd.angle = 3.132282495498657e-01f;
  bd.linearVelocity.Set(-8.159463850794352e-21f, 8.941580083628145e-21f);
  bd.angularVelocity = -6.789101632899463e-15f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[552] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[552]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.585925598144531e+02f, 2.571906661987305e+01f);
  bd.angle = 3.531347513198853e-01f;
  bd.linearVelocity.Set(1.342448592185974e+00f, 4.948074519634247e-01f);
  bd.angularVelocity = -5.312602737948246e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[553] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[553]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.468262634277344e+02f, 5.113105773925781e+01f);
  bd.angle = 1.655735135078430e+00f;
  bd.linearVelocity.Set(-1.232452690601349e-01f, 1.442023992538452e+00f);
  bd.angularVelocity = -8.130846254061908e-07f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[554] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[554]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.516560821533203e+02f, 5.148822784423828e+01f);
  bd.angle = -2.316364288330078e+00f;
  bd.linearVelocity.Set(1.704601572782849e-06f, -4.831109436054248e-06f);
  bd.angularVelocity = -2.848892239853740e-03f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[555] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[555]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.657746124267578e+02f, 5.231098175048828e+01f);
  bd.angle = -4.900091886520386e-01f;
  bd.linearVelocity.Set(1.285514794290066e-02f, -4.690923169255257e-02f);
  bd.angularVelocity = 1.699679046869278e-01f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[556] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[556]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.648936920166016e+02f, 5.186048126220703e+01f);
  bd.angle = -4.949971735477448e-01f;
  bd.linearVelocity.Set(2.590923756361008e-02f, -5.690574645996094e-03f);
  bd.angularVelocity = -8.932249248027802e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[557] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[557]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.690789031982422e+02f, 1.028350906372070e+02f);
  bd.angle = -3.344686701893806e-02f;
  bd.linearVelocity.Set(-1.727997187342661e-14f, -6.236237298995950e-15f);
  bd.angularVelocity = 3.147791138857770e-09f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[558] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[558]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.875892791748047e+02f, 8.788653564453125e+01f);
  bd.angle = -4.708862304687500e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[559] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[559]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.874885711669922e+02f, 8.317672729492188e+01f);
  bd.angle = -1.199208498001099e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.324787568172682e-41f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[560] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[560]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.819835510253906e+02f, 1.021214523315430e+02f);
  bd.angle = -9.139815568923950e-01f;
  bd.linearVelocity.Set(5.230671167373657e-01f, -6.784101724624634e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[561] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[561]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.753049774169922e+02f, 7.928906250000000e+01f);
  bd.angle = 1.762304306030273e+00f;
  bd.linearVelocity.Set(-2.430719584226608e-01f, 1.253792643547058e+00f);
  bd.angularVelocity = -3.363116314379561e-44f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[562] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[562]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.771823425292969e+02f, 8.319022369384766e+01f);
  bd.angle = -5.848730355501175e-02f;
  bd.linearVelocity.Set(9.891057014465332e-01f, -5.791617557406425e-02f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[563] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[563]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.806093139648438e+02f, 7.712155151367188e+01f);
  bd.angle = 2.133195161819458e+00f;
  bd.linearVelocity.Set(-6.802961230278015e-01f, 1.079327344894409e+00f);
  bd.angularVelocity = -3.082856621514598e-44f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[564] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[564]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.633765258789062e+02f, 9.899193572998047e+01f);
  bd.angle = 1.435522079467773e+00f;
  bd.linearVelocity.Set(1.722168177366257e-01f, 1.265472769737244e+00f);
  bd.angularVelocity = 2.764509301197868e-25f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[565] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[565]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.222890625000000e+02f, -1.135788955688477e+02f);
  bd.angle = 9.506478905677795e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[566] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[566]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.246061782836914e+02f, -1.229140090942383e+02f);
  bd.angle = -2.998130321502686e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -6.625102379542089e-21f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[567] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[567]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.233090591430664e+02f, -1.101390609741211e+02f);
  bd.angle = 2.707147359848022e+00f;
  bd.linearVelocity.Set(-2.599779283627868e-03f, 1.206329674459994e-03f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[568] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[568]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.162068710327148e+02f, -1.223577041625977e+02f);
  bd.angle = -1.133372545242310e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -6.625044622302052e-21f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[569] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[569]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.083322830200195e+02f, -1.053828887939453e+02f);
  bd.angle = -1.713289022445679e+00f;
  bd.linearVelocity.Set(-1.811816096305847e-01f, -1.262902975082397e+00f);
  bd.angularVelocity = 8.368255090610011e-13f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[570] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[570]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.140489196777344e+02f, -1.065021133422852e+02f);
  bd.angle = 2.190267086029053e+00f;
  bd.linearVelocity.Set(-9.109892882406712e-03f, -6.269016303122044e-03f);
  bd.angularVelocity = -4.460683092474937e-02f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[571] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[571]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.150197906494141e+02f, -1.089858474731445e+02f);
  bd.angle = -2.736433029174805e+00f;
  bd.linearVelocity.Set(3.415701910853386e-02f, -1.089606434106827e-01f);
  bd.angularVelocity = -3.836688399314880e-01f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[572] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[572]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.219513931274414e+02f, -1.188313064575195e+02f);
  bd.angle = -1.633009076118469e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[573] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[573]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.174191436767578e+02f, -1.221642074584961e+02f);
  bd.angle = 1.516543388366699e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[574] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[574]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.049381256103516e+02f, -1.376335906982422e+02f);
  bd.angle = -2.836743354797363e+00f;
  bd.linearVelocity.Set(-1.217009782791138e+00f, -3.829329013824463e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[575] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[575]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.163173980712891e+02f, -1.243264160156250e+02f);
  bd.angle = -1.251605153083801e+00f;
  bd.linearVelocity.Set(4.007799327373505e-01f, -1.212623357772827e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[576] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[576]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.154813842773438e+02f, -1.398225555419922e+02f);
  bd.angle = 2.510784864425659e+00f;
  bd.linearVelocity.Set(1.114234030562267e-13f, 1.648590220229822e-14f);
  bd.angularVelocity = 1.375257330238355e-08f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[577] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[577]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.129069976806641e+02f, -1.364181976318359e+02f);
  bd.angle = 3.078557968139648e+00f;
  bd.linearVelocity.Set(-1.274602055549622e+00f, 8.043244481086731e-02f);
  bd.angularVelocity = 2.756568725933526e-24f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[578] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[578]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.159756469726562e+02f, -1.374784698486328e+02f);
  bd.angle = 2.831740379333496e+00f;
  bd.linearVelocity.Set(-8.158496618270874e-01f, 2.612064778804779e-01f);
  bd.angularVelocity = -7.833564661741468e-14f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[579] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[579]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.966184539794922e+02f, -1.317095794677734e+02f);
  bd.angle = 2.383087396621704e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[580] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[580]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.128238983154297e+02f, -1.418748931884766e+02f);
  bd.angle = -1.237361580133438e-01f;
  bd.linearVelocity.Set(1.364744186401367e+00f, -1.692447066307068e-01f);
  bd.angularVelocity = -3.233545794500969e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[581] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[581]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.110825653076172e+02f, -1.429018402099609e+02f);
  bd.angle = -2.631614685058594e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -3.233762981835753e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[582] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[582]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.008726501464844e+02f, -1.188037185668945e+02f);
  bd.angle = 2.470213890075684e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[583] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[583]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.048650054931641e+02f, 3.114967727661133e+01f);
  bd.angle = -2.302541255950928e+00f;
  bd.linearVelocity.Set(-1.661788115866699e-16f, 1.927483399058179e-15f);
  bd.angularVelocity = 2.978140511977756e-10f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[584] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[584]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.930984802246094e+02f, 5.061389541625977e+01f);
  bd.angle = 2.832340955734253e+00f;
  bd.linearVelocity.Set(3.436619181229617e-06f, 2.040816980297677e-06f);
  bd.angularVelocity = 1.015805244445801e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[585] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[585]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.928081207275391e+02f, 1.555090236663818e+01f);
  bd.angle = -3.069688081741333e+00f;
  bd.linearVelocity.Set(-1.427176475524902e+00f, -1.027991622686386e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[586] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[586]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.766127471923828e+02f, 2.442235755920410e+01f);
  bd.angle = -2.377956151962280e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 1.659854059802577e-20f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[587] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[587]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.991896667480469e+02f, 2.272856903076172e+01f);
  bd.angle = 3.012976884841919e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[588] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[588]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.883172912597656e+02f, 1.734880256652832e+01f);
  bd.angle = -8.406425714492798e-01f;
  bd.linearVelocity.Set(9.653166532516479e-01f, -1.078325271606445e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[589] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[589]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.044404907226562e+02f, 3.863066482543945e+01f);
  bd.angle = -2.365334987640381e+00f;
  bd.linearVelocity.Set(-6.112465858459473e-01f, -6.001806259155273e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[590] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[590]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.802651977539062e+02f, 4.660861587524414e+01f);
  bd.angle = 2.654317855834961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[591] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[591]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.935446014404297e+02f, 4.572260665893555e+01f);
  bd.angle = 7.309134602546692e-01f;
  bd.linearVelocity.Set(5.618725970601979e-14f, -1.032880513974002e-13f);
  bd.angularVelocity = 1.646246694519959e-08f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[592] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[592]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.971274108886719e+02f, 2.598192024230957e+01f);
  bd.angle = -1.174607202410698e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[593] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[593]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.755479431152344e+02f, 3.215720367431641e+01f);
  bd.angle = -1.287493586540222e+00f;
  bd.linearVelocity.Set(-1.004811786042609e-15f, 1.048749926115531e-15f);
  bd.angularVelocity = 2.594137127331919e-10f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[594] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[594]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.604731750488281e+02f, 1.887888336181641e+02f);
  bd.angle = 2.537879943847656e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[595] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[595]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.541572265625000e+02f, 1.752126922607422e+02f);
  bd.angle = 5.518838167190552e-01f;
  bd.linearVelocity.Set(1.189981460571289e+00f, 7.326717376708984e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[596] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[596]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.395941467285156e+02f, 1.770251007080078e+02f);
  bd.angle = -1.758932232856750e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[597] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[597]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.597660827636719e+02f, 1.744149475097656e+02f);
  bd.angle = 2.710748195648193e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[598] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[598]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.389680480957031e+02f, 1.815942077636719e+02f);
  bd.angle = -2.210354328155518e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[599] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[599]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.454251251220703e+02f, 1.812532501220703e+02f);
  bd.angle = 1.338477969169617e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[600] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[600]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.825831604003906e+01f, -1.897411155700684e+01f);
  bd.angle = -2.838512659072876e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[601] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[601]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.971884155273438e+01f, -2.619193553924561e+00f);
  bd.angle = 5.494405627250671e-01f;
  bd.linearVelocity.Set(1.234265804290771e+00f, 7.557845115661621e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[602] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[602]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.972922897338867e+01f, -3.583581924438477e+01f);
  bd.angle = 1.857409119606018e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[603] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[603]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.741925811767578e+01f, 2.124333572387695e+01f);
  bd.angle = -2.436083316802979e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[604] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[604]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.774872589111328e+01f, 6.386447143554688e+01f);
  bd.angle = 3.015643835067749e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[605] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[605]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.727793121337891e+01f, 8.065040588378906e+00f);
  bd.angle = -9.843096733093262e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[606] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[606]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.945394134521484e+01f, 6.241013336181641e+01f);
  bd.angle = -2.795560359954834e+00f;
  bd.linearVelocity.Set(-1.361492872238159e+00f, -4.908762872219086e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[607] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[607]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.004542541503906e+01f, 6.008462905883789e+00f);
  bd.angle = 2.303720712661743e+00f;
  bd.linearVelocity.Set(-9.682928919792175e-01f, 1.075653910636902e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[608] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[608]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.524977111816406e+01f, -2.768028831481934e+01f);
  bd.angle = -2.808424949645996e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[609] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[609]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.054252624511719e+01f, -1.851624107360840e+01f);
  bd.angle = 1.958859801292419e+00f;
  bd.linearVelocity.Set(-5.476493239402771e-01f, 1.339665174484253e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[610] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[610]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.978797149658203e+01f, -1.615629005432129e+01f);
  bd.angle = -4.488798379898071e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[611] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[611]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.746869850158691e+01f, 6.612139892578125e+01f);
  bd.angle = -1.976363778114319e+00f;
  bd.linearVelocity.Set(-5.427383184432983e-01f, -1.264042854309082e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[612] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[612]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.980238342285156e+01f, -1.694440460205078e+01f);
  bd.angle = 2.357464075088501e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[613] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[613]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.582237243652344e+01f, 3.756871032714844e+01f);
  bd.angle = -3.069012880325317e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[614] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[614]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.332997894287109e+01f, 4.982971954345703e+01f);
  bd.angle = 2.603417634963989e+00f;
  bd.linearVelocity.Set(-1.095489025115967e+00f, 6.539526581764221e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[615] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[615]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.693082046508789e+01f, 3.481992721557617e+01f);
  bd.angle = -2.920732975006104e+00f;
  bd.linearVelocity.Set(-1.246115803718567e+00f, -2.797771096229553e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[616] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[616]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.328693771362305e+01f, -5.031245803833008e+01f);
  bd.angle = -4.483386278152466e-01f;
  bd.linearVelocity.Set(1.259337186813354e+00f, -6.057507991790771e-01f);
  bd.angularVelocity = -1.918709864137321e-26f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[617] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[617]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.873870849609375e+01f, -8.218927383422852e+00f);
  bd.angle = 1.728814840316772e+00f;
  bd.linearVelocity.Set(-1.342426836490631e-01f, 8.424547910690308e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[618] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[618]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.398958206176758e+01f, -6.203688049316406e+01f);
  bd.angle = 5.101304650306702e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[619] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[619]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.914483642578125e+01f, -5.417870998382568e+00f);
  bd.angle = -2.826411485671997e+00f;
  bd.linearVelocity.Set(-1.307456970214844e+00f, -4.262945055961609e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[620] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[620]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.329510116577148e+01f, 5.612268447875977e+01f);
  bd.angle = 2.972609758377075e+00f;
  bd.linearVelocity.Set(-1.426665544509888e+00f, 2.434085607528687e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[621] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[621]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.924150466918945e+01f, -2.945991516113281e+01f);
  bd.angle = 2.450732469558716e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[622] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[622]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.599809265136719e+01f, -6.334266662597656e+01f);
  bd.angle = 1.682198941707611e-01f;
  bd.linearVelocity.Set(1.257824182510376e+00f, 2.136088460683823e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[623] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[623]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.097016906738281e+01f, 2.708259391784668e+01f);
  bd.angle = -2.066771745681763e+00f;
  bd.linearVelocity.Set(-6.071563959121704e-01f, -1.122101306915283e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[624] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[624]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.793188095092773e+01f, -3.532806015014648e+01f);
  bd.angle = 1.835025548934937e+00f;
  bd.linearVelocity.Set(-3.592670559883118e-01f, 1.327889919281006e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[625] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[625]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.652530670166016e+01f, -1.342805480957031e+01f);
  bd.angle = 2.189722776412964e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[626] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[626]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.840947418212891e+02f, 9.481021118164062e+01f);
  bd.angle = -1.872739672660828e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[627] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[627]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.885406188964844e+02f, 9.329355621337891e+01f);
  bd.angle = 1.617006659507751e+00f;
  bd.linearVelocity.Set(-6.355326622724533e-02f, 1.374165415763855e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[628] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[628]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.533809814453125e+02f, 4.781708526611328e+01f);
  bd.angle = 1.829559922218323e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[629] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[629]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.582478179931641e+02f, 4.892077636718750e+01f);
  bd.angle = 2.208790481090546e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[630] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[630]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.914262390136719e+02f, 8.701660156250000e+01f);
  bd.angle = 2.277775764465332e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[631] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[631]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.202039718627930e+01f, 2.656270217895508e+01f);
  bd.angle = 1.914376765489578e-01f;
  bd.linearVelocity.Set(1.805911421775818e+00f, 3.500067591667175e-01f);
  bd.angularVelocity = 7.362915073645671e-13f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[632] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[632]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.239174652099609e+01f, 4.342176437377930e+01f);
  bd.angle = 5.892479419708252e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[633] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[633]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-6.552623748779297e+01f, 1.760588989257812e+02f);
  bd.angle = 3.921750783920288e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[634] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[634]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.529989624023438e+01f, 1.718111572265625e+02f);
  bd.angle = 4.450553417205811e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[635] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[635]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.875815963745117e+01f, 1.693230438232422e+02f);
  bd.angle = 3.127181529998779e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[636] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[636]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.683320770263672e+02f, 6.001604080200195e+01f);
  bd.angle = 2.338741302490234e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[637] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[637]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.904702758789062e+01f, 1.768534393310547e+02f);
  bd.angle = 4.708082199096680e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[638] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[638]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.051172027587891e+02f, -1.330498352050781e+02f);
  bd.angle = 2.062103748321533e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[639] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[639]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.604698333740234e+02f, 2.103802871704102e+01f);
  bd.angle = -3.525565147399902e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[640] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[640]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.594663238525391e+02f, 2.101586341857910e+01f);
  bd.angle = -2.617993831634521e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[641] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[641]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.584968566894531e+02f, 2.074417495727539e+01f);
  bd.angle = -3.630284786224365e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[642] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[642]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.341370544433594e+02f, -1.013862609863281e+02f);
  bd.angle = 3.740860939025879e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[643] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[643]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.574932861328125e+02f, 2.073612213134766e+01f);
  bd.angle = -3.612831592559814e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[644] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[644]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.564766998291016e+02f, 2.077654838562012e+01f);
  bd.angle = -4.380776405334473e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[645] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[645]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-6.447557830810547e+01f, 4.385217285156250e+01f);
  bd.angle = 1.073590397834778e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[646] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[646]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.140968475341797e+02f, -1.126800842285156e+02f);
  bd.angle = 1.245644807815552e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[647] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[647]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.527365112304688e+01f, -1.885711212158203e+02f);
  bd.angle = 4.153011322021484e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[648] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[648]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.104704742431641e+02f, -1.010863647460938e+02f);
  bd.angle = 2.862463474273682e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[649] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[649]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.071714172363281e+02f, 2.819130516052246e+01f);
  bd.angle = 4.100035190582275e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[650] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[650]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.947485961914062e+02f, 2.949142074584961e+01f);
  bd.angle = 6.000716686248779e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[651] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[651]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.920155334472656e+02f, 3.287627410888672e+01f);
  bd.angle = 5.958382606506348e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[652] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[652]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.082992095947266e+02f, -3.765732955932617e+01f);
  bd.angle = 3.644823729991913e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[653] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[653]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.243574676513672e+02f, -3.550588226318359e+01f);
  bd.angle = 5.254357337951660e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[654] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[654]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.216349487304688e+02f, -3.480639648437500e+01f);
  bd.angle = 1.374734491109848e-01f;
  bd.linearVelocity.Set(2.574430117632950e-16f, 3.561623327205093e-17f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[655] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[655]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.194021224975586e+01f, 2.616790580749512e+01f);
  bd.angle = 2.285217523574829e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[656] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[656]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.883401947021484e+02f, 4.301641464233398e+01f);
  bd.angle = 3.702369928359985e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[657] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[657]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.124419860839844e+02f, -3.073843193054199e+01f);
  bd.angle = 9.012703299522400e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[658] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[658]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.982546234130859e+02f, 3.318605422973633e+01f);
  bd.angle = 1.836815029382706e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[659] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[659]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.199468231201172e+02f, -2.929882049560547e+01f);
  bd.angle = 5.176027417182922e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[660] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[660]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.875161590576172e+02f, 4.608120727539062e+01f);
  bd.angle = 1.526693820953369e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[661] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[661]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.693931732177734e+02f, 5.989208984375000e+01f);
  bd.angle = -4.921028137207031e+00f;
  bd.linearVelocity.Set(-9.553115069866180e-02f, 5.918254852294922e-01f);
  bd.angularVelocity = -1.709442138671875e-01f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[662] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[662]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.687500762939453e+02f, 5.833811950683594e+01f);
  bd.angle = -3.734999656677246e+00f;
  bd.linearVelocity.Set(2.931351065635681e-01f, 8.250128030776978e-01f);
  bd.angularVelocity = 1.701627671718597e-01f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[663] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[663]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.674007873535156e+02f, 5.942769622802734e+01f);
  bd.angle = -7.437105178833008e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[664] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[664]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.478990020751953e+02f, 1.887871360778809e+01f);
  bd.angle = 5.744895458221436e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[665] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[665]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.062781448364258e+02f, -1.085205001831055e+02f);
  bd.angle = 1.216992974281311e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[666] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[666]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.157803268432617e+02f, -1.092182769775391e+02f);
  bd.angle = 9.396163225173950e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[667] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[667]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.401851654052734e+01f, -1.913450317382812e+02f);
  bd.angle = 1.716020107269287e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[668] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[668]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.104822158813477e+00f, -2.075072021484375e+02f);
  bd.angle = 1.073204636573792e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[669] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[669]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.247010803222656e+01f, 2.750890970230103e+00f);
  bd.angle = -2.061378479003906e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[670] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[670]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.037121772766113e+01f, 3.620595932006836e+01f);
  bd.angle = 9.937105774879456e-01f;
  bd.linearVelocity.Set(7.806628942489624e-01f, 1.199151992797852e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[671] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[671]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.411656951904297e+01f, -1.208360385894775e+01f);
  bd.angle = -1.349033117294312e+00f;
  bd.linearVelocity.Set(3.890245854854584e-01f, -1.725358843803406e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[672] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[672]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.484808197021484e+02f, 2.359118270874023e+01f);
  bd.angle = 8.431621640920639e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[673] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[673]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.717348480224609e+02f, 3.543849945068359e+01f);
  bd.angle = 1.671870708465576e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[674] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[674]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.455443572998047e+02f, 4.307078552246094e+01f);
  bd.angle = 7.668167948722839e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[675] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[675]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.951088867187500e+02f, 4.918434524536133e+01f);
  bd.angle = 1.346797466278076e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[676] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[676]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.140203552246094e+02f, -3.449880599975586e+01f);
  bd.angle = 1.165970563888550e+00f;
  bd.linearVelocity.Set(8.681877261551563e-08f, 2.026142027489186e-07f);
  bd.angularVelocity = -9.550875547110702e-22f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[677] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[677]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.166552734375000e+02f, -4.833382415771484e+01f);
  bd.angle = 3.844111442565918e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[678] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[678]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.759880371093750e+02f, 4.328839874267578e+01f);
  bd.angle = 3.684031724929810e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[679] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[679]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.937599639892578e+02f, 4.649057388305664e+01f);
  bd.angle = 8.993914723396301e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[680] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[680]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.764854583740234e+02f, 2.790196990966797e+01f);
  bd.angle = 5.343641757965088e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[681] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[681]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(4.092914581298828e+01f, 5.409067535400391e+01f);
  bd.angle = 3.694260120391846e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[682] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[682]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.628327331542969e+02f, 1.248087692260742e+01f);
  bd.angle = 3.836986541748047e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[683] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[683]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.191686820983887e+01f, 5.567774581909180e+01f);
  bd.angle = 2.220418453216553e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[684] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[684]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-9.480886459350586e+00f, 2.420669364929199e+01f);
  bd.angle = 6.183578372001648e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[685] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[685]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.678260498046875e+02f, 5.905332565307617e+01f);
  bd.angle = -9.186918258666992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[686] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[686]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.120765495300293e+01f, 3.445915603637695e+01f);
  bd.angle = -2.790870666503906e+00f;
  bd.linearVelocity.Set(6.873748134239577e-06f, 9.068517101695761e-07f);
  bd.angularVelocity = -1.159771272796206e-05f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[687] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[687]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.040694046020508e+01f, 1.409136104583740e+01f);
  bd.angle = -3.868197202682495e-01f;
  bd.linearVelocity.Set(9.422301314771175e-03f, -3.838106524199247e-03f);
  bd.angularVelocity = 9.257825591119853e-35f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[688] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[688]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.146880340576172e+02f, -1.397717285156250e+02f);
  bd.angle = 5.699009895324707e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[689] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[689]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.068877105712891e+02f, -1.417835845947266e+02f);
  bd.angle = 4.705009460449219e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[690] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[690]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(7.585597038269043e+00f, -4.875080871582031e+01f);
  bd.angle = -1.483529925346375e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[691] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[691]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.081589813232422e+02f, -1.264662170410156e+02f);
  bd.angle = 3.230277299880981e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[692] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[692]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(9.109466552734375e+00f, -1.068964958190918e+01f);
  bd.angle = 4.811484336853027e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[693] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[693]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.652959289550781e+02f, 5.428438186645508e+01f);
  bd.angle = -1.518436789512634e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[694] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[694]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.661570129394531e+02f, 5.354689025878906e+01f);
  bd.angle = -6.286807656288147e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[695] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[695]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.665585174560547e+02f, 5.243146514892578e+01f);
  bd.angle = -1.483529925346375e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[696] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[696]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.668482971191406e+02f, 5.135586166381836e+01f);
  bd.angle = -3.001966238021851e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[697] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[697]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.659319763183594e+02f, 5.602745819091797e+01f);
  bd.angle = 8.901178240776062e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[698] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[698]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(5.147059631347656e+01f, -2.348462343215942e+00f);
  bd.angle = -2.443460941314697e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[699] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[699]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.628037719726562e+02f, 5.593050003051758e+01f);
  bd.angle = 1.012290835380554e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[700] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[700]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.657667999267578e+02f, 5.104752731323242e+01f);
  bd.angle = 1.570796221494675e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[701] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[701]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.027358779907227e+02f, 2.044758605957031e+01f);
  bd.angle = 2.312786817550659e+00f;
  bd.linearVelocity.Set(-1.465452909469604e+00f, 1.470975637435913e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[702] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[702]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.115654754638672e+01f, -1.361917495727539e+01f);
  bd.angle = 3.421298980712891e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[703] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[703]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.647229919433594e+02f, 5.108526611328125e+01f);
  bd.angle = -1.047197133302689e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[704] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[704]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.650658111572266e+02f, 1.003207778930664e+02f);
  bd.angle = 5.454502105712891e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[705] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[705]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.918632812500000e+02f, 4.113519668579102e+01f);
  bd.angle = 2.459499597549438e+00f;
  bd.linearVelocity.Set(-6.553756842775371e-11f, 6.908429384111514e-11f);
  bd.angularVelocity = 4.021653694508132e-06f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[706] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[706]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.062438659667969e+02f, -1.265394134521484e+02f);
  bd.angle = 1.539428353309631e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[707] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[707]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.594517059326172e+02f, 6.950853729248047e+01f);
  bd.angle = -1.605874776840210e+00f;
  bd.linearVelocity.Set(1.338992826640606e-02f, -2.076328992843628e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[708] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[708]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.184962310791016e+02f, -2.379449462890625e+02f);
  bd.angle = 5.642107009887695e+00f;
  bd.linearVelocity.Set(1.655853271484375e+00f, -1.252785205841064e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[709] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[709]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.462206268310547e+01f, -2.445283966064453e+02f);
  bd.angle = 6.122554302215576e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[710] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[710]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.979867172241211e+01f, 9.029765129089355e+00f);
  bd.angle = 2.466191291809082e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[711] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[711]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.136499786376953e+01f, -2.436552581787109e+02f);
  bd.angle = 5.777448415756226e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[712] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[712]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.921844482421875e+01f, -2.498531036376953e+02f);
  bd.angle = 3.632810354232788e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[713] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[713]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.152467956542969e+02f, -3.376309585571289e+01f);
  bd.angle = -1.220503926277161e+00f;
  bd.linearVelocity.Set(3.779738843441010e-01f, -1.034489870071411e+00f);
  bd.angularVelocity = -6.981268181000876e-23f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[714] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[714]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.220422439575195e+02f, -1.051963882446289e+02f);
  bd.angle = 1.562251091003418e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[715] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[715]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.123212051391602e+02f, -1.158634567260742e+02f);
  bd.angle = 9.143980741500854e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[716] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[716]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.096799545288086e+02f, -1.160882568359375e+02f);
  bd.angle = 1.734280943870544e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[717] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[717]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.556793022155762e+01f, 4.254033279418945e+01f);
  bd.angle = 2.076493978500366e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[718] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[718]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.660377120971680e+01f, 2.914903831481934e+01f);
  bd.angle = 2.841059684753418e+00f;
  bd.linearVelocity.Set(-1.777324438095093e+00f, 5.508300662040710e-01f);
  bd.angularVelocity = -1.976168212172566e-26f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[719] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[719]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.014259719848633e+01f, 1.563460731506348e+01f);
  bd.angle = 2.095102787017822e+00f;
  bd.linearVelocity.Set(-6.377233266830444e-01f, 1.102766036987305e+00f);
  bd.angularVelocity = -4.002566988922024e-34f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[720] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[720]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.517319946289062e+02f, 1.717759246826172e+02f);
  bd.angle = 4.561709403991699e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[721] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[721]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.489457855224609e+02f, 1.893511505126953e+02f);
  bd.angle = 2.434512376785278e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[722] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[722]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.806691589355469e+02f, 9.306991577148438e+01f);
  bd.angle = 1.468325734138489e+00f;
  bd.linearVelocity.Set(3.305462066128945e-19f, 3.214467494158378e-18f);
  bd.angularVelocity = 5.735659345256259e-27f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[723] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[723]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.754385948181152e+01f, 4.537477874755859e+01f);
  bd.angle = -1.979940414428711e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[724] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[724]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.200448608398438e+01f, 1.667377710342407e+00f);
  bd.angle = 3.413042306900024e+00f;
  bd.linearVelocity.Set(-2.021347999572754e+00f, -4.732996821403503e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[725] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[725]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.460443725585938e+02f, -1.004438247680664e+02f);
  bd.angle = 3.107727766036987e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[726] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[726]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.866259155273438e+02f, 1.701147155761719e+02f);
  bd.angle = 6.080410480499268e-01f;
  bd.linearVelocity.Set(1.653508543968201e+00f, 1.255878448486328e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[727] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[727]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.420622406005859e+02f, -4.070458984375000e+01f);
  bd.angle = -1.669293045997620e+00f;
  bd.linearVelocity.Set(-2.897926270961761e-01f, -2.056050062179565e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[728] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[728]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.143154067993164e+02f, -1.179562072753906e+02f);
  bd.angle = 4.058985710144043e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[729] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[729]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.042278137207031e+02f, -1.066611709594727e+02f);
  bd.angle = 3.963500261306763e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[730] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[730]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.078405380249023e+02f, -1.037929916381836e+02f);
  bd.angle = 7.848357558250427e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[731] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[731]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.133558349609375e+02f, -1.968073730468750e+02f);
  bd.angle = -6.882894515991211e+00f;
  bd.linearVelocity.Set(1.761218786239624e+00f, -1.099740743637085e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[732] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[732]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.250037384033203e+01f, -2.721483039855957e+01f);
  bd.angle = 1.622079372406006e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[733] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[733]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.110593032836914e+02f, -1.057155532836914e+02f);
  bd.angle = 1.519670128822327e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[734] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[734]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.120677413940430e+02f, -1.145959243774414e+02f);
  bd.angle = 1.777463912963867e+00f;
  bd.linearVelocity.Set(-8.107170287985355e-05f, 3.866797487717122e-04f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[735] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[735]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.635863494873047e+01f, -2.683892822265625e+01f);
  bd.angle = 1.745329350233078e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[736] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[736]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.574518585205078e+01f, -2.593398284912109e+01f);
  bd.angle = 6.981317698955536e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[737] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[737]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.156436157226562e+02f, -1.125513839721680e+02f);
  bd.angle = 2.922985076904297e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[738] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[738]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.528170013427734e+01f, -2.495964622497559e+01f);
  bd.angle = 6.981317698955536e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[739] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[739]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.601766204833984e+01f, -2.413664627075195e+01f);
  bd.angle = 2.617993652820587e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[740] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[740]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.711425781250000e+01f, -2.393367385864258e+01f);
  bd.angle = 1.047212719917297e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[741] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[741]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.833133697509766e+01f, -2.408357048034668e+01f);
  bd.angle = 1.204277157783508e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[742] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[742]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.939583587646484e+01f, -2.453747367858887e+01f);
  bd.angle = -4.677482604980469e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[743] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[743]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.802743530273438e+01f, -2.901120567321777e+01f);
  bd.angle = 4.371138828673793e-08f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[744] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[744]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.415546264648438e+02f, -1.017191009521484e+02f);
  bd.angle = 4.045852184295654e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[745] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[745]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.727342987060547e+01f, -2.818341064453125e+01f);
  bd.angle = 6.457719206809998e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[746] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[746]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.674828186035156e+02f, 6.179132843017578e+01f);
  bd.angle = -7.424941062927246e+00f;
  bd.linearVelocity.Set(-1.940618455410004e-01f, -4.077156186103821e-01f);
  bd.angularVelocity = -4.895157217979431e-01f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[747] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.000000000000000e+00f, -4.999999701976776e-01f);
    vs[1].Set(1.000000000000000e+00f, 5.000000596046448e-01f);
    vs[2].Set(-1.000000000000000e+00f, 4.999999701976776e-01f);
    vs[3].Set(-1.000000000000000e+00f, -5.000000596046448e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[747]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.749266052246094e+02f, 9.700433349609375e+01f);
  bd.angle = 2.765452146530151e+00f;
  bd.linearVelocity.Set(-8.517215266401479e-10f, 3.363827827396193e-10f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[748] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[748]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.685329132080078e+02f, 6.196885681152344e+01f);
  bd.angle = -9.186918258666992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[749] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[749]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.365959930419922e+01f, -2.349564361572266e+01f);
  bd.angle = 2.815937995910645e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[750] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[750]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.449996337890625e+02f, -9.228545379638672e+01f);
  bd.angle = 3.393199682235718e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[751] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[751]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.878730773925781e+01f, -1.766520881652832e+01f);
  bd.angle = 6.062249660491943e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[752] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[752]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.487511444091797e+01f, -1.883507728576660e+01f);
  bd.angle = 2.426034450531006e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[753] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[753]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.775731658935547e+01f, -8.727209091186523e+00f);
  bd.angle = 2.293200194835663e-01f;
  bd.linearVelocity.Set(2.039866924285889e+00f, 3.876399993896484e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[754] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[754]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.834048767089844e+02f, 2.737337112426758e+01f);
  bd.angle = -3.944443941116333e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[755] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[755]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.751220245361328e+02f, 3.148593521118164e+01f);
  bd.angle = 4.633476734161377e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[756] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[756]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.817114715576172e+02f, 3.674158477783203e+01f);
  bd.angle = 3.120718479156494e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[757] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[757]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.623731842041016e+02f, -6.772248840332031e+01f);
  bd.angle = 2.226022243499756e+00f;
  bd.linearVelocity.Set(-1.331557989120483e+00f, 1.593396663665771e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[758] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[758]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.077978515625000e+01f, -1.937372436523438e+02f);
  bd.angle = 5.876214027404785e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[759] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[759]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.080961799621582e+01f, 3.309405517578125e+01f);
  bd.angle = -2.643643140792847e+00f;
  bd.linearVelocity.Set(-8.083813618497970e-10f, -4.394709041122269e-10f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[760] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[760]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.963741683959961e+01f, -1.931753349304199e+01f);
  bd.angle = 2.574111461639404e+00f;
  bd.linearVelocity.Set(-8.052927255630493e-02f, 5.133114755153656e-02f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[761] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[761]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.203054046630859e+01f, 2.892476272583008e+01f);
  bd.angle = -1.766184926033020e+00f;
  bd.linearVelocity.Set(-1.287267098403172e-15f, -6.504189395596270e-15f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[762] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[762]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.499461517333984e+02f, 4.268624877929688e+01f);
  bd.angle = 5.155039310455322e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[763] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[763]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.479731903076172e+02f, 5.188664245605469e+01f);
  bd.angle = 5.451601028442383e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[764] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[764]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.970810394287109e+02f, 1.854123687744141e+01f);
  bd.angle = 4.767961025238037e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[765] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[765]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.647911071777344e+02f, 4.077130508422852e+01f);
  bd.angle = -1.110125660896301e+00f;
  bd.linearVelocity.Set(2.961063494483977e-15f, -5.966461116943718e-15f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[766] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[766]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.765452117919922e+02f, 8.699304199218750e+01f);
  bd.angle = 5.076645851135254e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[767] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[767]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.682914886474609e+02f, 1.029444046020508e+02f);
  bd.angle = 4.227093696594238e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[768] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[768]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.808400115966797e+02f, 9.056874847412109e+01f);
  bd.angle = 1.343534350395203e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[769] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[769]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.127992439270020e+01f, 1.991561508178711e+01f);
  bd.angle = 5.449469566345215e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[770] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[770]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.602405548095703e+01f, -1.065908336639404e+01f);
  bd.angle = 1.947463631629944e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[771] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[771]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.246962928771973e+01f, -2.473987388610840e+01f);
  bd.angle = 2.737960100173950e+00f;
  bd.linearVelocity.Set(-7.183105149303668e-16f, 3.067772016964804e-16f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[772] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[772]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.009870529174805e+01f, 4.792572021484375e+01f);
  bd.angle = 5.099732428789139e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[773] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[773]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.044006042480469e+02f, -1.230269470214844e+02f);
  bd.angle = 4.176896810531616e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[774] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[774]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.279986572265625e+01f, 4.148820114135742e+01f);
  bd.angle = 1.658323168754578e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[775] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[775]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.190530090332031e+02f, -1.359219360351562e+02f);
  bd.angle = 1.131797552108765e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[776] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[776]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.162308883666992e+01f, -3.571308517456055e+01f);
  bd.angle = 5.983289241790771e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[777] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[777]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.300706481933594e+01f, -3.944334411621094e+01f);
  bd.angle = 1.827294707298279e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[778] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[778]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-9.359391021728516e+01f, -2.435513610839844e+02f);
  bd.angle = -6.981320679187775e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[779] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[779]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.145334930419922e+02f, -2.775086784362793e+01f);
  bd.angle = 2.803778171539307e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[780] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[780]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.731906433105469e+02f, 9.589968109130859e+01f);
  bd.angle = 4.156223773956299e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[781] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[781]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.759009857177734e+02f, 1.005157165527344e+02f);
  bd.angle = 4.004899024963379e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[782] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[782]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.509567260742188e+01f, 4.625778579711914e+01f);
  bd.angle = 1.549545407295227e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[783] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[783]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-8.980771636962891e+01f, -2.550621414184570e+01f);
  bd.angle = -1.326450228691101e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[784] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[784]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.990461730957031e+02f, 3.438246154785156e+01f);
  bd.angle = -2.684129476547241e+00f;
  bd.linearVelocity.Set(-5.396478854891029e-07f, -2.656650792687287e-07f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[785] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[785]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.751986694335938e+01f, -2.013783264160156e+02f);
  bd.angle = 5.379283905029297e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[786] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[786]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.430110931396484e+02f, -9.143578338623047e+01f);
  bd.angle = 1.708536028862000e+00f;
  bd.linearVelocity.Set(-1.118182763457298e-01f, 8.066679835319519e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[787] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[787]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.433699035644531e+02f, -8.670045471191406e+01f);
  bd.angle = 2.749002218246460e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[788] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[788]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.540670013427734e+01f, -7.083317565917969e+01f);
  bd.angle = 1.524251222610474e+00f;
  bd.linearVelocity.Set(1.041935291141272e-02f, 2.076346158981323e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[789] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[789]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.171334838867188e+02f, -1.215167846679688e+02f);
  bd.angle = 1.480735301971436e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[790] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[790]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.476514434814453e+01f, 3.337829208374023e+01f);
  bd.angle = -8.963907957077026e-01f;
  bd.linearVelocity.Set(2.106072954921601e-10f, -2.630689832638922e-10f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[791] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[791]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.290029144287109e+01f, -5.173777008056641e+01f);
  bd.angle = -2.057893753051758e+00f;
  bd.linearVelocity.Set(-5.272242017961837e-11f, -9.953939755780183e-11f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[792] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[792]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(2.018516731262207e+01f, -5.121493911743164e+01f);
  bd.angle = -1.186823844909668e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[793] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[793]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.794339294433594e+02f, 3.009334373474121e+01f);
  bd.angle = 4.497549057006836e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[794] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[794]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.271962165832520e+01f, 9.185594558715820e+00f);
  bd.angle = 4.536800384521484e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[795] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[795]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.816234588623047e+01f, -3.541965246200562e+00f);
  bd.angle = -4.886922538280487e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[796] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[796]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.789917373657227e+01f, -5.678626060485840e+00f);
  bd.angle = -3.124139308929443e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[797] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[797]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-4.177997589111328e+01f, -5.852618408203125e+01f);
  bd.angle = -2.338741302490234e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[798] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[798]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.808320007324219e+02f, 9.773244476318359e+01f);
  bd.angle = 4.225229322910309e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[799] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[799]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.776344146728516e+02f, 3.493604660034180e+01f);
  bd.angle = 2.954508543014526e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[800] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[800]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.981446838378906e+01f, 2.075674819946289e+01f);
  bd.angle = 1.014189243316650e+00f;
  bd.linearVelocity.Set(7.400664282786185e-13f, 1.189371517940074e-12f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[801] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[801]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.834360809326172e+02f, 3.893368530273438e+01f);
  bd.angle = -1.658062815666199e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[802] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[802]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.896112823486328e+02f, 3.815898132324219e+01f);
  bd.angle = 1.256636977195740e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[803] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[803]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.895747680664062e+02f, 3.927583694458008e+01f);
  bd.angle = 1.151917338371277e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[804] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[804]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.641935424804688e+02f, 2.066294860839844e+02f);
  bd.angle = 1.101508140563965e+00f;
  bd.linearVelocity.Set(1.015114903450012e+00f, 1.811315298080444e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[805] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[805]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.872152557373047e+02f, 4.041432571411133e+01f);
  bd.angle = -3.002643346786499e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[806] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[806]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.883446655273438e+02f, 4.038246154785156e+01f);
  bd.angle = -2.880149602890015e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[807] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[807]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.895989227294922e+02f, 4.033871078491211e+01f);
  bd.angle = -2.879793167114258e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[808] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[808]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.920781097412109e+02f, 4.022937393188477e+01f);
  bd.angle = -2.862339973449707e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[809] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[809]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.938409423828125e+02f, 5.035282897949219e+01f);
  bd.angle = -2.617994248867035e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[810] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[810]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.246973571777344e+02f, 1.129146728515625e+02f);
  bd.angle = -2.123847484588623e+00f;
  bd.linearVelocity.Set(-1.016448259353638e+00f, -1.810580492019653e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[811] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[811]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.680748443603516e+02f, -1.422736816406250e+02f);
  bd.angle = 4.104701042175293e+00f;
  bd.linearVelocity.Set(-1.113757848739624e+00f, -1.752388358116150e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[812] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[812]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.193471374511719e+02f, -2.385053443908691e+01f);
  bd.angle = 5.354344367980957e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[813] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[813]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.412413787841797e+02f, 1.921844100952148e+01f);
  bd.angle = 5.722636222839355e+00f;
  bd.linearVelocity.Set(1.802923560142517e+00f, -1.029945611953735e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[814] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[814]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.104986572265625e+02f, -2.472598724365234e+02f);
  bd.angle = -2.725437641143799e+00f;
  bd.linearVelocity.Set(-1.862670660018921e+00f, -9.174858927726746e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[815] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[815]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.752040405273438e+02f, 8.922642517089844e+01f);
  bd.angle = 2.290512561798096e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[816] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[816]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.502657890319824e+01f, 3.696808624267578e+01f);
  bd.angle = -2.234021425247192e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[817] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[817]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.987615203857422e+01f, 2.336189651489258e+01f);
  bd.angle = -4.450589656829834e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[818] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[818]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.982433891296387e+01f, 2.464072799682617e+01f);
  bd.angle = -6.283109188079834e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[819] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[819]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.026594924926758e+01f, 2.559987258911133e+01f);
  bd.angle = -2.425966978073120e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[820] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[820]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.997851753234863e+01f, 2.799349403381348e+01f);
  bd.angle = -2.600540637969971e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[821] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[821]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.652010955810547e+02f, 6.678684234619141e+01f);
  bd.angle = 2.950824737548828e+00f;
  bd.linearVelocity.Set(-2.020602226257324e+00f, 4.780043959617615e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[822] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[822]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.712828063964844e+01f, 2.503569793701172e+01f);
  bd.angle = -5.235989391803741e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[823] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[823]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.626320266723633e+01f, 2.591275596618652e+01f);
  bd.angle = 1.065600514411926e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[824] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[824]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.230968475341797e+01f, -3.545279312133789e+01f);
  bd.angle = -1.352712988853455e+00f;
  bd.linearVelocity.Set(3.145635128021240e-05f, -1.419460750184953e-04f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[825] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[825]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.617996215820312e+00f, -8.202302932739258e+00f);
  bd.angle = -3.095665872097015e-01f;
  bd.linearVelocity.Set(2.749613425834241e-09f, -8.794623918007005e-10f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[826] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[826]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.642008781433105e+00f, 2.085827484130859e+02f);
  bd.angle = 4.684589505195618e-01f;
  bd.linearVelocity.Set(1.812156438827515e+00f, 1.013612508773804e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[827] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[827]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.871568679809570e+01f, 2.879804801940918e+01f);
  bd.angle = 4.809188842773438e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[828] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[828]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.006418228149414e+01f, -4.353337478637695e+01f);
  bd.angle = 3.949112594127655e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[829] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[829]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.663254165649414e+01f, -4.206656265258789e+01f);
  bd.angle = 2.478732585906982e+00f;
  bd.linearVelocity.Set(-6.807686414589398e-09f, 5.314760187502543e-09f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[830] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[830]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.757476043701172e+02f, -1.523701629638672e+02f);
  bd.angle = -4.846244812011719e+00f;
  bd.linearVelocity.Set(1.914666742086411e-01f, 2.067532777786255e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[831] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[831]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.352327048778534e-01f, -1.043857727050781e+02f);
  bd.angle = 9.409893035888672e+00f;
  bd.linearVelocity.Set(-2.073069334030151e+00f, 1.170698627829552e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[832] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[832]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.411021804809570e+01f, 2.740568923950195e+01f);
  bd.angle = 3.839724361896515e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[833] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[833]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.518348693847656e+01f, 2.732613182067871e+01f);
  bd.angle = 6.632251143455505e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[834] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[834]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.795054626464844e+01f, 2.919637298583984e+01f);
  bd.angle = -1.640609741210938e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[835] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[835]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.656467437744141e+02f, 2.132930145263672e+02f);
  bd.angle = 1.582538843154907e+00f;
  bd.linearVelocity.Set(2.780826203525066e-02f, 2.076834201812744e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[836] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[836]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.204634857177734e+01f, 2.916656494140625e+02f);
  bd.angle = -2.665659427642822e+00f;
  bd.linearVelocity.Set(-1.804530143737793e+00f, -1.027128219604492e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[837] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[837]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-5.013250732421875e+01f, 2.694495582580566e+01f);
  bd.angle = -1.134464025497437e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[838] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[838]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-7.195577239990234e+01f, 1.578076171875000e+01f);
  bd.angle = -1.082104086875916e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[839] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[839]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.578753967285156e+02f, 1.915933074951172e+02f);
  bd.angle = -2.181661605834961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[840] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[840]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-4.711239242553711e+01f, 2.797610473632812e+01f);
  bd.angle = -1.361356854438782e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[841] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[841]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.972125530242920e+00f, 5.770624160766602e+01f);
  bd.angle = 1.686774373054504e+00f;
  bd.linearVelocity.Set(-1.274497359991074e-01f, 1.093978881835938e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[842] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[842]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.565502471923828e+02f, 6.527620697021484e+01f);
  bd.angle = -6.975446939468384e-01f;
  bd.linearVelocity.Set(1.645375013351440e+00f, -1.266516089439392e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[843] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[843]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.644894409179688e+01f, -1.767179298400879e+01f);
  bd.angle = 1.203087568283081e+00f;
  bd.linearVelocity.Set(3.104702051004438e-09f, 8.059287459616371e-09f);
  bd.angularVelocity = 8.860623738100818e-25f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[844] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[844]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.664915657043457e+01f, 4.172926712036133e+01f);
  bd.angle = 2.360205352306366e-01f;
  bd.linearVelocity.Set(1.095170898413045e-10f, 2.633938206431097e-11f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[845] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[845]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.710402679443359e+01f, -9.548471069335938e+01f);
  bd.angle = -4.577444553375244e+00f;
  bd.linearVelocity.Set(-3.645213246345520e-01f, 2.044124841690063e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[846] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[846]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.024573087692261e-01f, -2.224084014892578e+02f);
  bd.angle = -3.064191579818726e+00f;
  bd.linearVelocity.Set(-2.061705589294434e+00f, -2.463570684194565e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[847] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[847]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.860285949707031e+01f, 3.200551605224609e+01f);
  bd.angle = -4.032453060150146e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[848] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[848]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.860998535156250e+02f, 3.322340011596680e+01f);
  bd.angle = 2.034684658050537e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[849] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[849]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.864519882202148e+01f, 3.524425125122070e+01f);
  bd.angle = -5.235989391803741e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[850] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[850]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.653053855895996e+01f, 3.529373168945312e+01f);
  bd.angle = 3.839724361896515e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[851] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[851]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.835051116943359e+02f, 3.665653610229492e+01f);
  bd.angle = 1.274090409278870e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[852] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[852]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.758915863037109e+02f, 4.013204956054688e+01f);
  bd.angle = -1.431169986724854e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[853] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[853]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.875146026611328e+02f, 5.047504425048828e+01f);
  bd.angle = -1.012295007705688e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[854] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[854]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.727169342041016e+02f, 9.767637634277344e+01f);
  bd.angle = 1.428837537765503e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[855] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[855]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.937277069091797e+02f, 5.143591308593750e+01f);
  bd.angle = -4.241149902343750e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[856] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[856]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.836685791015625e+02f, 3.262668609619141e+01f);
  bd.angle = 3.491127729415894e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[857] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[857]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.503347015380859e+01f, 1.847596168518066e+01f);
  bd.angle = 5.905904769897461e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[858] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[858]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.090762233734131e+01f, 1.881985855102539e+01f);
  bd.angle = 2.083150863647461e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[859] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[859]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.810694274902344e+02f, -2.329517974853516e+02f);
  bd.angle = -7.780931949615479e+00f;
  bd.linearVelocity.Set(2.373834848403931e-01f, -2.062757968902588e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[860] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[860]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.401952362060547e+01f, -1.547373199462891e+02f);
  bd.angle = -9.602415561676025e-02f;
  bd.linearVelocity.Set(2.056760549545288e+00f, -2.847077250480652e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[861] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[861]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.227673435211182e+01f, 2.963644218444824e+01f);
  bd.angle = -1.605702877044678e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[862] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[862]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.693014068603516e+02f, 2.285252990722656e+02f);
  bd.angle = -2.136621236801147e+00f;
  bd.linearVelocity.Set(-1.184974789619446e+00f, -1.705038785934448e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[863] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[863]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.375191497802734e+01f, -6.851332092285156e+01f);
  bd.angle = -1.731672048568726e+00f;
  bd.linearVelocity.Set(-2.472240328788757e-01f, -2.061601638793945e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[864] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[864]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.410555877685547e+02f, -9.367121887207031e+01f);
  bd.angle = 4.702015876770020e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[865] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[865]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.422480773925781e+02f, -8.070633697509766e+01f);
  bd.angle = 2.746701240539551e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[866] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[866]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.111084747314453e+02f, 2.539101562500000e+02f);
  bd.angle = -4.365971565246582e+00f;
  bd.linearVelocity.Set(-6.233035326004028e-01f, 1.980609416961670e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[867] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[867]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.876074066162109e+02f, 5.165383148193359e+01f);
  bd.angle = -1.221730262041092e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[868] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[868]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.874075927734375e+02f, 5.277210617065430e+01f);
  bd.angle = -7.504915595054626e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[869] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[869]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.860521545410156e+02f, 5.274951553344727e+01f);
  bd.angle = -1.099557399749756e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[870] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[870]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.835166549682617e+01f, 5.030807971954346e+00f);
  bd.angle = 2.521634578704834e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[871] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[871]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.012411956787109e+02f, 4.980891799926758e+01f);
  bd.angle = 1.220610588788986e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[872] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[872]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.001893920898438e+02f, 5.032603836059570e+01f);
  bd.angle = 4.363323748111725e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[873] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[873]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(3.426625061035156e+01f, 9.718255996704102e+00f);
  bd.angle = 6.168922901153564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[874] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[874]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.995120086669922e+02f, 5.118406295776367e+01f);
  bd.angle = 4.371138828673793e-08f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[875] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[875]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.983127593994141e+02f, 5.136421585083008e+01f);
  bd.angle = 4.371138828673793e-08f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[876] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[876]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.972900543212891e+02f, 5.173064422607422e+01f);
  bd.angle = -4.538440406322479e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[877] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[877]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.961719055175781e+02f, 5.200338363647461e+01f);
  bd.angle = 8.726701140403748e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[878] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[878]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.951851196289062e+02f, 5.234421157836914e+01f);
  bd.angle = 8.023578524589539e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[879] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[879]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.195676574707031e+02f, -7.404460906982422e+01f);
  bd.angle = 5.168773174285889e+00f;
  bd.linearVelocity.Set(8.369011878967285e-01f, -1.900241613388062e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[880] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[880]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.938521270751953e+02f, 5.267240524291992e+01f);
  bd.angle = 3.665191233158112e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[881] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[881]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.851458282470703e+02f, 5.222022628784180e+01f);
  bd.angle = -2.094394713640213e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[882] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[882]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.838987274169922e+02f, 5.207722091674805e+01f);
  bd.angle = -1.239183783531189e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[883] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[883]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.498931121826172e+02f, 9.027212524414062e+01f);
  bd.angle = -2.637746334075928e+00f;
  bd.linearVelocity.Set(-2.704666852951050e+00f, -1.526882886886597e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[884] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[884]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.828607482910156e+02f, 5.143038940429688e+01f);
  bd.angle = 4.371138828673793e-08f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[885] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[885]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.817394256591797e+02f, 5.122582244873047e+01f);
  bd.angle = -6.632259488105774e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[886] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[886]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.806803283691406e+02f, 5.050561904907227e+01f);
  bd.angle = -6.981189548969269e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[887] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[887]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.092141418457031e+02f, -1.288898620605469e+02f);
  bd.angle = 1.438979059457779e-01f;
  bd.linearVelocity.Set(3.672412363812327e-03f, 5.321304197423160e-04f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[888] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[888]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.795199432373047e+02f, 4.959241104125977e+01f);
  bd.angle = -1.570796519517899e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[889] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[889]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.782417602539062e+02f, 4.889166259765625e+01f);
  bd.angle = -2.617994248867035e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[890] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[890]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.774690093994141e+02f, 4.757292175292969e+01f);
  bd.angle = -1.012290954589844e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[891] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[891]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.420594024658203e+02f, -9.792952728271484e+01f);
  bd.angle = 4.885431289672852e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[892] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[892]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.415635375976562e+02f, -1.060062103271484e+02f);
  bd.angle = 2.774011373519897e+00f;
  bd.linearVelocity.Set(-2.641753196716309e+00f, 1.017294406890869e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[893] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[893]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.850387420654297e+02f, 3.584782028198242e+01f);
  bd.angle = 5.244180679321289e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[894] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[894]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.769384765625000e+02f, 9.791194915771484e+01f);
  bd.angle = 3.034800291061401e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[895] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[895]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.080982208251953e+01f, 1.254256134033203e+02f);
  bd.angle = 1.529295086860657e+00f;
  bd.linearVelocity.Set(5.708140879869461e-02f, 2.075995445251465e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[896] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[896]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.886743164062500e+02f, 3.596487426757812e+01f);
  bd.angle = 3.516992092132568e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[897] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[897]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.664075851440430e+00f, 4.999392700195312e+01f);
  bd.angle = -1.968184590339661e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[898] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[898]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.517089080810547e+02f, -8.220286560058594e+01f);
  bd.angle = 4.982679843902588e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[899] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[899]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.990732955932617e+01f, -4.751245021820068e+00f);
  bd.angle = -1.817165374755859e+00f;
  bd.linearVelocity.Set(-7.432748853742213e-18f, -2.955616913814454e-17f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[900] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[900]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.181058502197266e+01f, 3.918030929565430e+01f);
  bd.angle = 3.557713031768799e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[901] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[901]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.355922317504883e+01f, -2.332407379150391e+01f);
  bd.angle = -5.843405053019524e-02f;
  bd.linearVelocity.Set(1.836554884910583e+00f, -1.074405536055565e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[902] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[902]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.765422210693359e+02f, 4.656731033325195e+01f);
  bd.angle = -2.618465125560760e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[903] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[903]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.597206115722656e+01f, -2.618363952636719e+02f);
  bd.angle = -7.396610975265503e-01f;
  bd.linearVelocity.Set(1.589859366416931e+00f, -1.335779428482056e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[904] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[904]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.758064727783203e+02f, 4.562542724609375e+01f);
  bd.angle = -4.014256894588470e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[905] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[905]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.746285095214844e+02f, 4.451422500610352e+01f);
  bd.angle = -1.012290954589844e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[906] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[906]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.738058471679688e+02f, 4.329524993896484e+01f);
  bd.angle = -7.679448723793030e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[907] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[907]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.891660690307617e+01f, 7.730453491210938e+01f);
  bd.angle = -5.866025447845459e+00f;
  bd.linearVelocity.Set(1.861747503280640e+00f, 9.193574190139771e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[908] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[908]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.730639190673828e+02f, 4.220123672485352e+01f);
  bd.angle = -1.954768776893616e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[909] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[909]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.881542053222656e+02f, -1.124651031494141e+02f);
  bd.angle = 8.645279884338379e+00f;
  bd.linearVelocity.Set(-1.414988279342651e+00f, 1.519582152366638e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[910] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[910]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.276845397949219e+02f, -8.886570739746094e+01f);
  bd.angle = -2.757620096206665e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[911] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[911]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.284938507080078e+02f, -8.968073272705078e+01f);
  bd.angle = -4.293509960174561e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[912] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[912]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.266100540161133e+02f, -8.903205871582031e+01f);
  bd.angle = -1.326450228691101e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[913] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[913]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.073356857299805e+02f, 1.823470764160156e+02f);
  bd.angle = 8.929132461547852e+00f;
  bd.linearVelocity.Set(-1.865927696228027e+00f, 9.108430147171021e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[914] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[914]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.256213760375977e+02f, -8.854957580566406e+01f);
  bd.angle = -1.221730470657349e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[915] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[915]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.532855224609375e+01f, -1.688888854980469e+02f);
  bd.angle = 1.501437306404114e+00f;
  bd.linearVelocity.Set(2.231443375349045e-01f, 2.064785003662109e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[916] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[916]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.649960937500000e+02f, -9.597593688964844e+01f);
  bd.angle = -4.162977635860443e-01f;
  bd.linearVelocity.Set(1.871764063835144e+00f, -9.002940654754639e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[917] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[917]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.803119659423828e+01f, -1.501831665039062e+02f);
  bd.angle = 3.118988573551178e-01f;
  bd.linearVelocity.Set(2.000941276550293e+00f, 5.545775294303894e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[918] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[918]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.185781383514404e+01f, 3.345864772796631e+00f);
  bd.angle = 3.155025959014893e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[919] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[919]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.174227905273438e+02f, -1.046663360595703e+02f);
  bd.angle = -4.136430263519287e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[920] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[920]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.166388473510742e+02f, -1.053538131713867e+02f);
  bd.angle = -3.926990747451782e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[921] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[921]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.269085693359375e+01f, 3.444089412689209e+00f);
  bd.angle = 5.452816963195801e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[922] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[922]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.126823120117188e+02f, -2.286352348327637e+01f);
  bd.angle = 6.022708415985107e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[923] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[923]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.833892822265625e+02f, 3.773236465454102e+01f);
  bd.angle = -2.408554315567017e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[924] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[924]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.021349182128906e+02f, 4.907847595214844e+01f);
  bd.angle = 8.807031810283661e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[925] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[925]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.030645904541016e+02f, 4.851569366455078e+01f);
  bd.angle = 1.045747250318527e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[926] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[926]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.039760589599609e+02f, 4.758122253417969e+01f);
  bd.angle = 5.403131842613220e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[927] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[927]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.048161315917969e+02f, 4.661426544189453e+01f);
  bd.angle = 5.061454176902771e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[928] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[928]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.054902191162109e+02f, 4.567417907714844e+01f);
  bd.angle = 4.192751944065094e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[929] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[929]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.061061096191406e+02f, 4.488445663452148e+01f);
  bd.angle = 6.981317400932312e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[930] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[930]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.067698211669922e+02f, 4.396597290039062e+01f);
  bd.angle = 8.726646304130554e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[931] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[931]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.439470062255859e+02f, 1.875473632812500e+02f);
  bd.angle = 3.749312162399292e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[932] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[932]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.073176574707031e+02f, 4.287770843505859e+01f);
  bd.angle = 1.012290835380554e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[933] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[933]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.079163818359375e+02f, 4.172040939331055e+01f);
  bd.angle = 1.134463906288147e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[934] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[934]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.082908782958984e+02f, 4.054675292968750e+01f);
  bd.angle = -4.310963153839111e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[935] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[935]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.086655120849609e+02f, 3.948619461059570e+01f);
  bd.angle = -3.996803998947144e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[936] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[936]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.089907226562500e+02f, 3.842711639404297e+01f);
  bd.angle = -3.246312379837036e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[937] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[937]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.069229888916016e+02f, 3.893255233764648e+01f);
  bd.angle = -3.089232683181763e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[938] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[938]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.080059661865234e+02f, -2.738672256469727e+01f);
  bd.angle = 4.960618495941162e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[939] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[939]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.346189117431641e+02f, 1.248638153076172e+02f);
  bd.angle = -1.613214313983917e-01f;
  bd.linearVelocity.Set(2.061491489410400e+00f, -2.481431961059570e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[940] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[940]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.536019897460938e+02f, 5.666681671142578e+01f);
  bd.angle = 4.280725955963135e+00f;
  bd.linearVelocity.Set(-7.901017665863037e-01f, -1.920243620872498e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[941] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[941]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.801849212646484e+02f, 9.379362487792969e+01f);
  bd.angle = 4.898840904235840e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[942] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[942]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.373403167724609e+01f, 2.670198669433594e+02f);
  bd.angle = -1.915552496910095e+00f;
  bd.linearVelocity.Set(-6.200118064880371e-01f, -1.981642484664917e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[943] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[943]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.792996978759766e+01f, -2.079037933349609e+02f);
  bd.angle = -5.120587944984436e-01f;
  bd.linearVelocity.Set(1.850727438926697e+00f, -9.413444995880127e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[944] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[944]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.094549865722656e+02f, 3.731179809570312e+01f);
  bd.angle = -7.334445118904114e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[945] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[945]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.092947235107422e+02f, 3.601976394653320e+01f);
  bd.angle = 1.396263092756271e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[946] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[946]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.082450103759766e+02f, 3.552742767333984e+01f);
  bd.angle = 1.047198027372360e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[947] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[947]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.071744842529297e+02f, 3.553805541992188e+01f);
  bd.angle = 5.161826312541962e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[948] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[948]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.045035858154297e+02f, 3.555107498168945e+01f);
  bd.angle = 5.235986411571503e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[949] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[949]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.043027038574219e+02f, 3.058686447143555e+01f);
  bd.angle = 1.047233790159225e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[950] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[950]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.054362640380859e+02f, 3.059612655639648e+01f);
  bd.angle = -3.490658104419708e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[951] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[951]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.067099609375000e+02f, 3.059612655639648e+01f);
  bd.angle = -3.490658104419708e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[952] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[952]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.156544723510742e+02f, -1.057515258789062e+02f);
  bd.angle = -3.543015956878662e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[953] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[953]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.144984512329102e+02f, -1.058464202880859e+02f);
  bd.angle = -3.682644605636597e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[954] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[954]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.133815231323242e+02f, -1.057878341674805e+02f);
  bd.angle = -2.495730638504028e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[955] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[955]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.078181457519531e+02f, 3.054779243469238e+01f);
  bd.angle = 3.141593039035797e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[956] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[956]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.129623184204102e+02f, -1.048021850585938e+02f);
  bd.angle = -1.867502331733704e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[957] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[957]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.088890533447266e+02f, 3.038474655151367e+01f);
  bd.angle = 6.632251143455505e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[958] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[958]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.092550201416016e+02f, 2.940592575073242e+01f);
  bd.angle = -4.520402908325195e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[959] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[959]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.979989318847656e+02f, 1.999002647399902e+01f);
  bd.angle = -3.665191411972046e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[960] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[960]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.705332336425781e+02f, 9.564810180664062e+01f);
  bd.angle = 3.818600654602051e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[961] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[961]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.132173995971680e+02f, -1.036967926025391e+02f);
  bd.angle = -7.853981256484985e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[962] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[962]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.137185516357422e+02f, -1.027759170532227e+02f);
  bd.angle = -9.773843884468079e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[963] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[963]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.144059219360352e+02f, -1.020274276733398e+02f);
  bd.angle = -7.330382466316223e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[964] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[964]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.152799224853516e+02f, -1.014864044189453e+02f);
  bd.angle = -3.839724957942963e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[965] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[965]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.162761611938477e+02f, -1.015776748657227e+02f);
  bd.angle = 5.934118628501892e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[966] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[966]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.171720428466797e+02f, -1.020811233520508e+02f);
  bd.angle = 1.239183783531189e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[967] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[967]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.700611419677734e+02f, 1.865614929199219e+02f);
  bd.angle = 4.283473491668701e+00f;
  bd.linearVelocity.Set(-7.843947410583496e-01f, -1.922510504722595e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[968] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[968]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.465189208984375e+02f, 2.156250381469727e+01f);
  bd.angle = 1.883918762207031e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[969] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[969]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.931431579589844e+01f, 2.532894706726074e+01f);
  bd.angle = 4.291854381561279e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[970] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[970]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.087376098632812e+02f, 2.836516571044922e+01f);
  bd.angle = 1.274090409278870e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[971] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[971]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.082740173339844e+02f, 2.719551277160645e+01f);
  bd.angle = 1.483557105064392e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[972] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[972]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.077961273193359e+02f, 2.589551353454590e+01f);
  bd.angle = 1.466076493263245e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[973] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[973]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.072010498046875e+02f, 2.482555770874023e+01f);
  bd.angle = 1.535889744758606e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[974] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[974]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.066650238037109e+02f, 2.377658081054688e+01f);
  bd.angle = 1.535896658897400e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[975] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[975]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.060630187988281e+02f, 2.266565322875977e+01f);
  bd.angle = -4.537317276000977e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[976] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[976]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.050611267089844e+02f, 2.183821296691895e+01f);
  bd.angle = -4.537096500396729e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[977] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[977]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.058413848876953e+02f, -3.369514083862305e+01f);
  bd.angle = 5.299356937408447e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[978] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[978]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.042964630126953e+02f, 2.101655769348145e+01f);
  bd.angle = -4.537562370300293e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[979] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[979]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.034871215820312e+02f, 2.019923210144043e+01f);
  bd.angle = -4.555735111236572e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[980] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[980]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.026800231933594e+02f, 1.937679481506348e+01f);
  bd.angle = -4.223696708679199e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[981] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[981]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.019802398681641e+02f, 1.865863227844238e+01f);
  bd.angle = -3.246312379837036e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[982] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[982]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.415378265380859e+02f, -1.661230773925781e+02f);
  bd.angle = 2.195125102996826e+00f;
  bd.linearVelocity.Set(-1.282642126083374e+00f, 1.632835268974304e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[983] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[983]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.584331512451172e+01f, 2.448621177673340e+01f);
  bd.angle = 1.613099098205566e+01f;
  bd.linearVelocity.Set(-1.856318473815918e+00f, -9.302701950073242e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[984] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[984]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.935040855407715e+01f, 2.739879150390625e+02f);
  bd.angle = 9.774230718612671e-01f;
  bd.linearVelocity.Set(1.231490969657898e+00f, 1.671751022338867e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[985] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[985]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.623040008544922e+02f, 1.777574462890625e+02f);
  bd.angle = 9.063245058059692e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[986] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[986]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.630913085937500e+02f, -1.160216674804688e+02f);
  bd.angle = -1.723049354553223e+01f;
  bd.linearVelocity.Set(-1.861816942691803e-01f, 2.068012237548828e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[987] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[987]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.588752365112305e+01f, 2.445871734619141e+01f);
  bd.angle = 7.130039334297180e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[988] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[988]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.831172180175781e+01f, -2.490043182373047e+02f);
  bd.angle = 5.672098636627197e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[989] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[989]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(4.911553192138672e+01f, 2.704633712768555e+01f);
  bd.angle = 3.981428384780884e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[990] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[990]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.381155242919922e+02f, -2.972911834716797e+01f);
  bd.angle = -1.456499934196472e+00f;
  bd.linearVelocity.Set(1.510138809680939e-01f, -2.070884466171265e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[991] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[991]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.137198448181152e+01f, -3.331872558593750e+01f);
  bd.angle = -5.344938635826111e-01f;
  bd.linearVelocity.Set(4.414876396321293e-13f, -2.613468523624679e-13f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[992] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[992]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.623225250244141e+02f, 1.932120208740234e+02f);
  bd.angle = -7.330382466316223e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[993] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[993]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.640210723876953e+02f, 1.914467773437500e+02f);
  bd.angle = -1.413716673851013e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[994] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[994]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.629516754150391e+02f, 1.923106689453125e+02f);
  bd.angle = -8.028514385223389e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[995] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[995]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.089610519409180e+02f, -1.709338989257812e+02f);
  bd.angle = 4.911027908325195e+00f;
  bd.linearVelocity.Set(4.938936233520508e-01f, -2.016777038574219e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[996] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[996]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.940534973144531e+01f, -2.540177345275879e+01f);
  bd.angle = 4.989583969116211e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[997] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[997]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.461953582763672e+02f, 1.803184509277344e+02f);
  bd.angle = 5.826896667480469e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[998] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[998]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.011695251464844e+02f, 1.782528114318848e+01f);
  bd.angle = -3.926990747451782e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[999] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[999]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-2.002522888183594e+02f, 1.707890701293945e+01f);
  bd.angle = -2.268928050994873e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1000] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1000]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.432488250732422e+01f, -2.041140365600586e+01f);
  bd.angle = 1.800269722938538e+00f;
  bd.linearVelocity.Set(-4.313146462209261e-07f, 1.846485588430369e-06f);
  bd.angularVelocity = 8.860438355788091e-25f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1001] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1001]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.991347808837891e+02f, 1.658543205261230e+01f);
  bd.angle = -1.902408838272095e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1002] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1002]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.981942291259766e+02f, 1.603644180297852e+01f);
  bd.angle = -2.635447263717651e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1003] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1003]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.970612030029297e+02f, 1.562969493865967e+01f);
  bd.angle = 1.186623454093933e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1004] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1004]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.959234008789062e+02f, 1.629431343078613e+01f);
  bd.angle = 7.155849337577820e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1005] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1005]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.951397247314453e+02f, 1.720222091674805e+01f);
  bd.angle = 7.155849337577820e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1006] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1006]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.942910919189453e+02f, 1.821094894409180e+01f);
  bd.angle = -3.560471773147583e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1007] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1007]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.732295532226562e+02f, 3.127830505371094e+01f);
  bd.angle = -4.188790023326874e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1008] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1008]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(1.572508697509766e+02f, 1.906882324218750e+02f);
  bd.angle = 8.901178240776062e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1009] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1009]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.573511199951172e+02f, 1.820113372802734e+02f);
  bd.angle = 1.880437850952148e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1010] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1010]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.860093688964844e+01f, -4.175262451171875e+01f);
  bd.angle = 2.475389003753662e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1011] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1011]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.859280700683594e+02f, 1.829997634887695e+01f);
  bd.angle = -2.269864827394485e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1012] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1012]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.851703338623047e+02f, 1.714076805114746e+01f);
  bd.angle = -1.221563369035721e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1013] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1013]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.832282104492188e+02f, 1.551905822753906e+01f);
  bd.angle = -2.426007747650146e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1014] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1014]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.822311096191406e+02f, 1.614162063598633e+01f);
  bd.angle = -2.635447263717651e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1015] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1015]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.812551879882812e+02f, 1.680241012573242e+01f);
  bd.angle = -2.844886779785156e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1016] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1016]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.802812500000000e+02f, 1.734108161926270e+01f);
  bd.angle = -2.757620096206665e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1017] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1017]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.794714965820312e+02f, 1.815436172485352e+01f);
  bd.angle = -3.228859186172485e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1018] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1018]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.784388122558594e+02f, 1.882500457763672e+01f);
  bd.angle = -1.902408838272095e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1019] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1019]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.776864471435547e+02f, 1.968389892578125e+01f);
  bd.angle = -1.937315464019775e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1020] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1020]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.766675720214844e+02f, 2.037077522277832e+01f);
  bd.angle = -1.692969322204590e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1021] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1021]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.761144714355469e+02f, 2.123387145996094e+01f);
  bd.angle = -1.623156189918518e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1022] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1022]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.161168212890625e+02f, -3.001760292053223e+01f);
  bd.angle = 4.712409973144531e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1023] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1023]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.121081542968750e+02f, -3.400551223754883e+01f);
  bd.angle = 3.527033090591431e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1024] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1024]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.754795837402344e+02f, 2.226362609863281e+01f);
  bd.angle = -1.710422635078430e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1025] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1025]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.748452758789062e+02f, 2.325354194641113e+01f);
  bd.angle = -2.286375045776367e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1026] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1026]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.745788879394531e+02f, 2.435143280029297e+01f);
  bd.angle = -1.867502331733704e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1027] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1027]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.736685028076172e+02f, 2.517434501647949e+01f);
  bd.angle = -1.011558532714844e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1028] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1028]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.733179931640625e+02f, 2.622630882263184e+01f);
  bd.angle = 6.806799769401550e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1029] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1029]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.250485992431641e+01f, -3.446709060668945e+01f);
  bd.angle = 1.301552534103394e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1030] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1030]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.729716491699219e+02f, 2.718225097656250e+01f);
  bd.angle = -1.745329648256302e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1031] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1031]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.725350952148438e+02f, 2.824502372741699e+01f);
  bd.angle = -6.981320679187775e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1032] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1032]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.722628326416016e+02f, 2.946104240417480e+01f);
  bd.angle = -3.490658700466156e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1033] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1033]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.718842163085938e+02f, 3.049673652648926e+01f);
  bd.angle = 4.371138828673793e-08f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1034] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1034]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.716478271484375e+02f, 3.166128921508789e+01f);
  bd.angle = -8.726651966571808e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1035] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1035]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.713969726562500e+02f, 3.271373748779297e+01f);
  bd.angle = -5.235989391803741e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1036] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1036]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.713447875976562e+02f, 3.372874069213867e+01f);
  bd.angle = -1.047197133302689e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1037] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1037]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.832772827148438e+01f, 2.250696563720703e+01f);
  bd.angle = 1.216986536979675e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1038] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1038]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.265251159667969e+01f, -2.535098419189453e+02f);
  bd.angle = 4.250517368316650e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1039] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1039]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.997069168090820e+01f, -2.551177825927734e+02f);
  bd.angle = 4.684248924255371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1040] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1040]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-7.705223846435547e+01f, 4.774697875976562e+01f);
  bd.angle = 1.186823964118958e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1041] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1041]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-7.669933319091797e+01f, 4.869588851928711e+01f);
  bd.angle = 9.773845076560974e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1042] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1042]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.747856750488281e+02f, 4.060007095336914e+01f);
  bd.angle = -8.203047513961792e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1043] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1043]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.749706268310547e+02f, 3.536761093139648e+01f);
  bd.angle = -2.548180818557739e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1044] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1044]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.737793579101562e+02f, 3.551464843750000e+01f);
  bd.angle = -2.321287870407104e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1045] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1045]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.727520904541016e+02f, 3.532202911376953e+01f);
  bd.angle = -2.635447263717651e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1046] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1046]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.711938629150391e+02f, 3.492711639404297e+01f);
  bd.angle = -2.530727386474609e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1047] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1047]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.737800598144531e+02f, 4.073883819580078e+01f);
  bd.angle = -9.599310755729675e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1048] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1048]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.726280212402344e+02f, 4.121525955200195e+01f);
  bd.angle = -1.186823844909668e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1049] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1049]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.161660003662109e+02f, -1.282799682617188e+02f);
  bd.angle = 2.296798944473267e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1050] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1050]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.794380645751953e+02f, 8.674692535400391e+01f);
  bd.angle = 1.449324488639832e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1051] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1051]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-7.996739196777344e+01f, -2.438712463378906e+02f);
  bd.angle = -4.537856280803680e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1052] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1052]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.077523422241211e+01f, 1.046835250854492e+02f);
  bd.angle = 6.586892008781433e-01f;
  bd.linearVelocity.Set(1.693331599235535e+00f, 1.201644420623779e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1053] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1053]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.821187896728516e+02f, -1.235196018218994e+01f);
  bd.angle = 2.917281627655029e+00f;
  bd.linearVelocity.Set(-2.003434896469116e+00f, 5.455001592636108e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1054] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1054]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.154344787597656e+02f, -9.461293029785156e+01f);
  bd.angle = 9.516984224319458e-01f;
  bd.linearVelocity.Set(1.133679151535034e+00f, 1.739566802978516e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1055] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1055]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.483240966796875e+02f, -9.085652160644531e+01f);
  bd.angle = 4.921586990356445e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1056] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1056]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.453845062255859e+02f, -9.748844909667969e+01f);
  bd.angle = 2.300043582916260e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1057] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1057]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.611484069824219e+02f, 6.375758743286133e+01f);
  bd.angle = -3.976122379302979e+00f;
  bd.linearVelocity.Set(-1.456981062889099e+00f, 1.479383230209351e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1058] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1058]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.186469879150391e+02f, -1.754877929687500e+02f);
  bd.angle = -4.168912887573242e+00f;
  bd.linearVelocity.Set(-1.146576642990112e+00f, 1.731093168258667e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1059] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1059]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.505806884765625e+02f, 1.833705596923828e+02f);
  bd.angle = 2.995795726776123e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1060] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1060]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.984241867065430e+01f, -2.345079803466797e+02f);
  bd.angle = 1.447615146636963e+00f;
  bd.linearVelocity.Set(1.693557202816010e-01f, 2.069454193115234e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1061] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1061]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.728376770019531e+02f, -6.039742279052734e+01f);
  bd.angle = -1.117794394493103e+00f;
  bd.linearVelocity.Set(8.304687738418579e-01f, -1.903061389923096e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1062] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1062]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.612657165527344e+02f, 4.628515625000000e+01f);
  bd.angle = 5.913881778717041e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1063] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1063]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.237331390380859e+01f, 8.177678680419922e+01f);
  bd.angle = 1.345502376556396e+00f;
  bd.linearVelocity.Set(5.474696159362793e-01f, 2.002897739410400e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1064] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1064]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.484459686279297e+01f, 1.278708724975586e+02f);
  bd.angle = 2.140538215637207e+00f;
  bd.linearVelocity.Set(-1.046475887298584e+00f, 1.793379545211792e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1065] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1065]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.623856353759766e+01f, -1.073444366455078e+02f);
  bd.angle = -3.279711818322539e-03f;
  bd.linearVelocity.Set(2.074296474456787e+00f, -9.297573566436768e-02f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1066] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1066]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.617210388183594e+02f, 8.128232002258301e+00f);
  bd.angle = 7.743535041809082e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1067] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1067]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-5.984309387207031e+01f, 1.821397857666016e+02f);
  bd.angle = -2.967059612274170e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1068] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1068]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.577744140625000e+02f, 1.382023525238037e+01f);
  bd.angle = 2.043187618255615e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1069] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1069]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.847993316650391e+02f, 9.262957000732422e+01f);
  bd.angle = 8.967260718345642e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1070] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1070]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.118813629150391e+02f, -1.273975296020508e+02f);
  bd.angle = 9.248666167259216e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1071] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1071]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.590089416503906e+02f, 1.754262924194336e+01f);
  bd.angle = 4.515134811401367e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1072] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1072]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.697232055664062e+02f, 4.429714584350586e+01f);
  bd.angle = 1.863311290740967e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1073] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1073]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.774286651611328e+01f, 4.709970951080322e+00f);
  bd.angle = 3.316124975681305e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1074] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1074]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.660173416137695e+01f, 4.780588150024414e+00f);
  bd.angle = 1.919860094785690e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1075] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1075]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.560188674926758e+01f, 4.386678695678711e+00f);
  bd.angle = -9.424777626991272e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1076] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1076]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.543653488159180e+01f, 3.319254636764526e+00f);
  bd.angle = -1.797689080238342e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1077] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1077]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.568858337402344e+01f, 2.260390996932983e+00f);
  bd.angle = -1.692969322204590e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1078] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1078]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.637210845947266e+01f, 1.431205153465271e+00f);
  bd.angle = -2.827429056167603e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1079] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1079]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-3.738485717773438e+01f, 1.674164295196533e+00f);
  bd.angle = -3.926990747451782e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1080] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1080]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(2.677105712890625e+02f, 9.759629249572754e+00f);
  bd.angle = 1.151917338371277e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1081] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1081]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.544632873535156e+02f, 1.798670501708984e+02f);
  bd.angle = 7.708958387374878e-01f;
  bd.linearVelocity.Set(1.780559614306356e-31f, 1.729651775158684e-31f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1082] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1082]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.058413391113281e+02f, -1.274468917846680e+02f);
  bd.angle = 2.007782161235809e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1083] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1083]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.106608428955078e+02f, -1.323324737548828e+02f);
  bd.angle = 4.738026142120361e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1084] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1084]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.285872192382812e+02f, 1.545398406982422e+02f);
  bd.angle = -3.665209770202637e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1085] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1085]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.277125701904297e+02f, 1.540286712646484e+02f);
  bd.angle = -3.228859186172485e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1086] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1086]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.298401947021484e+02f, 1.565321197509766e+02f);
  bd.angle = 1.919849365949631e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1087] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1087]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.296836090087891e+02f, 1.575635681152344e+02f);
  bd.angle = 3.490655124187469e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1088] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1088]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.289944152832031e+02f, 1.583231201171875e+02f);
  bd.angle = -1.064650893211365e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1089] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1089]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.279918594360352e+02f, 1.586911621093750e+02f);
  bd.angle = -1.640609502792358e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1090] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1090]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.269648971557617e+02f, 1.586911621093750e+02f);
  bd.angle = -1.640609502792358e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1091] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1091]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.259435272216797e+02f, 1.587774658203125e+02f);
  bd.angle = -1.553343653678894e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1092] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1092]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.922715301513672e+02f, 3.629528045654297e+01f);
  bd.angle = 3.287962436676025e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1093] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1093]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.868324432373047e+02f, 7.785800933837891e+01f);
  bd.angle = -2.775073528289795e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1094] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1094]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.099912357330322e+01f, 3.287720489501953e+01f);
  bd.angle = -4.171337127685547e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1095] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1095]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.550056762695312e+02f, 5.086888885498047e+01f);
  bd.angle = 4.262723445892334e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1096] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1096]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.655187683105469e+02f, 4.405229568481445e+01f);
  bd.angle = 4.815883636474609e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1097] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1097]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.259118652343750e+01f, -8.143501281738281e+01f);
  bd.angle = -3.289995670318604e+00f;
  bd.linearVelocity.Set(-2.039033889770508e+00f, 3.919981420040131e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1098] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1098]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.985729980468750e+02f, -1.613810896873474e+00f);
  bd.angle = -5.204763889312744e+00f;
  bd.linearVelocity.Set(9.047359228134155e-01f, 1.868896842002869e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1099] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1099]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.858033180236816e+01f, 1.628861846923828e+02f);
  bd.angle = 2.623969554901123e+00f;
  bd.linearVelocity.Set(-1.760154128074646e+00f, 1.101444482803345e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1100] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1100]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.632875061035156e+01f, 2.593768310546875e+02f);
  bd.angle = 2.643832683563232e+00f;
  bd.linearVelocity.Set(-1.863956928253174e+00f, 9.149330854415894e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1101] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1101]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.174407501220703e+02f, 2.635150718688965e+01f);
  bd.angle = -7.226573944091797e+00f;
  bd.linearVelocity.Set(1.148095846176147e+00f, -1.730086088180542e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1102] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1102]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.447598266601562e+01f, -8.205165863037109e+01f);
  bd.angle = -3.840114116668701e+00f;
  bd.linearVelocity.Set(-1.644136428833008e+00f, 1.268123149871826e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1103] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1103]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.390247802734375e+02f, -1.278887081146240e+01f);
  bd.angle = -2.946467876434326e+00f;
  bd.linearVelocity.Set(-2.051927089691162e+00f, -3.176737725734711e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1104] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1104]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.791891479492188e+01f, 1.892357482910156e+02f);
  bd.angle = 1.748612403869629e+01f;
  bd.linearVelocity.Set(3.427595794200897e-01f, -2.047885894775391e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1105] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1105]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.752721786499023e+01f, 1.358990936279297e+02f);
  bd.angle = -1.387426853179932e+00f;
  bd.linearVelocity.Set(4.630427360534668e-01f, -2.024083375930786e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1106] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1106]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.507239074707031e+02f, 6.410480499267578e+01f);
  bd.angle = -5.747314691543579e-01f;
  bd.linearVelocity.Set(1.694416403770447e+00f, -1.200114250183105e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1107] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1107]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.757120666503906e+02f, 9.753003692626953e+01f);
  bd.angle = -1.718517094850540e-01f;
  bd.linearVelocity.Set(2.029282093048096e+00f, -4.396995306015015e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1108] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1108]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.040267372131348e+01f, -2.787106018066406e+02f);
  bd.angle = 7.895999550819397e-01f;
  bd.linearVelocity.Set(1.521983385086060e+00f, 1.412405252456665e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1109] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1109]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.712189674377441e+01f, -2.365608825683594e+02f);
  bd.angle = -2.170956134796143e+00f;
  bd.linearVelocity.Set(-1.242773652076721e+00f, -1.663394808769226e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1110] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1110]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.647090911865234e+01f, -1.915535888671875e+02f);
  bd.angle = -2.707946896553040e-01f;
  bd.linearVelocity.Set(2.022039413452148e+00f, -4.719371199607849e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1111] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1111]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.169891357421875e+02f, 3.785367488861084e+00f);
  bd.angle = 1.069786787033081e+00f;
  bd.linearVelocity.Set(1.072052001953125e+00f, 1.778208732604980e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1112] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1112]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.474109802246094e+02f, 2.048104705810547e+02f);
  bd.angle = 3.149152755737305e+00f;
  bd.linearVelocity.Set(-2.073871135711670e+00f, -1.018819808959961e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1113] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1113]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.335724067687988e+01f, -2.387922973632812e+02f);
  bd.angle = 1.187411189079285e+00f;
  bd.linearVelocity.Set(6.960791349411011e-01f, 1.956219553947449e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1114] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1114]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.935166320800781e+02f, 1.430724487304688e+02f);
  bd.angle = -4.969334602355957e+00f;
  bd.linearVelocity.Set(6.105792522430420e-01f, 1.984569072723389e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1115] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1115]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.912474060058594e+02f, 2.341797447204590e+01f);
  bd.angle = -4.320745468139648e-01f;
  bd.linearVelocity.Set(1.920022964477539e+00f, -7.904638648033142e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1116] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1116]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.156417846679688e+01f, 9.780957794189453e+01f);
  bd.angle = 6.574231147766113e+00f;
  bd.linearVelocity.Set(2.012069702148438e+00f, 5.127348303794861e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1117] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1117]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.051173248291016e+02f, -1.014243850708008e+02f);
  bd.angle = -1.543076133728027e+01f;
  bd.linearVelocity.Set(-1.971794843673706e+00f, -6.506513357162476e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1118] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1118]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.735964965820312e+02f, 1.605337829589844e+02f);
  bd.angle = 3.791532039642334e+00f;
  bd.linearVelocity.Set(-1.703780531883240e+00f, -1.186782717704773e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1119] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1119]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.154224395751953e+02f, -8.960034370422363e+00f);
  bd.angle = -3.753296375274658e+00f;
  bd.linearVelocity.Set(-1.747901678085327e+00f, 1.120786070823669e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1120] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1120]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.882247009277344e+02f, -1.467943267822266e+02f);
  bd.angle = -1.113700675964355e+01f;
  bd.linearVelocity.Set(3.777282238006592e-01f, 2.041737079620361e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1121] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1121]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.129013061523438e+01f, -1.808391571044922e+02f);
  bd.angle = 9.282699584960938e+00f;
  bd.linearVelocity.Set(-2.065890550613403e+00f, 2.084820717573166e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1122] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1122]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.003831100463867e+01f, -1.939249420166016e+02f);
  bd.angle = -8.408644676208496e+00f;
  bd.linearVelocity.Set(-1.165870189666748e+00f, -1.718158483505249e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1123] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1123]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.218323364257812e+02f, 2.689494514465332e+01f);
  bd.angle = -1.762212038040161e+00f;
  bd.linearVelocity.Set(-4.793137907981873e-01f, -2.020292043685913e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1124] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1124]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.686884155273438e+02f, -7.057796478271484e+01f);
  bd.angle = -4.452453136444092e+00f;
  bd.linearVelocity.Set(-4.499012827873230e-01f, 2.027044773101807e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1125] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1125]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.223409194946289e+02f, 3.394826126098633e+01f);
  bd.angle = -2.610310554504395e+00f;
  bd.linearVelocity.Set(-1.832276701927185e+00f, -9.767958521842957e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1126] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1126]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.371629333496094e+02f, 4.022750091552734e+01f);
  bd.angle = -6.137953281402588e+00f;
  bd.linearVelocity.Set(2.040266513824463e+00f, 3.855307698249817e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1127] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1127]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.199731903076172e+02f, 1.862224578857422e+02f);
  bd.angle = -6.332050323486328e+00f;
  bd.linearVelocity.Set(2.076327323913574e+00f, -1.528715528547764e-02f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1128] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1128]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.006703186035156e+01f, 9.428520965576172e+01f);
  bd.angle = 1.338984012603760e+00f;
  bd.linearVelocity.Set(5.605134963989258e-01f, 1.999286413192749e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1129] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1129]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.269546890258789e+02f, -1.592973632812500e+02f);
  bd.angle = -5.006203651428223e+00f;
  bd.linearVelocity.Set(5.183038711547852e-01f, 2.010642290115356e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1130] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1130]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.631404113769531e+01f, -1.029206008911133e+02f);
  bd.angle = 1.118270754814148e+00f;
  bd.linearVelocity.Set(8.296472430229187e-01f, 1.903438925743103e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1131] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1131]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.118247222900391e+01f, 3.960759353637695e+01f);
  bd.angle = -3.813485145568848e+00f;
  bd.linearVelocity.Set(-1.677318453788757e+00f, 1.223897099494934e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1132] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1132]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.174954376220703e+02f, -7.278181457519531e+01f);
  bd.angle = -6.762063503265381e+00f;
  bd.linearVelocity.Set(1.880937337875366e+00f, -8.794298171997070e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1133] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1133]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.144542694091797e+01f, 1.578781585693359e+02f);
  bd.angle = -5.593735218048096e+00f;
  bd.linearVelocity.Set(1.545905828475952e+00f, 1.386180639266968e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1134] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1134]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.201212615966797e+02f, 9.674315452575684e+00f);
  bd.angle = 3.009692430496216e-01f;
  bd.linearVelocity.Set(2.006882905960083e+00f, 5.326753854751587e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1135] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1135]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.127438545227051e+01f, 2.971058349609375e+02f);
  bd.angle = -1.763670682907104e+00f;
  bd.linearVelocity.Set(-3.131340146064758e-01f, -2.052247524261475e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1136] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1136]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.252140998840332e+00f, -1.887891540527344e+02f);
  bd.angle = -1.574729084968567e+00f;
  bd.linearVelocity.Set(7.804168015718460e-02f, -2.074904918670654e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1137] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1137]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.367126464843750e+01f, 5.402426910400391e+01f);
  bd.angle = 2.121778964996338e+00f;
  bd.linearVelocity.Set(-1.012651205062866e+00f, 1.812693953514099e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1138] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1138]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.762023925781250e+02f, 1.046673278808594e+02f);
  bd.angle = -7.142835617065430e+00f;
  bd.linearVelocity.Set(1.419391512870789e+00f, -1.515469908714294e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1139] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1139]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.144596557617188e+02f, 3.377486038208008e+01f);
  bd.angle = -7.117104530334473e+00f;
  bd.linearVelocity.Set(1.457912206649780e+00f, -1.478449821472168e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1140] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1140]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.033870162963867e+02f, 2.396100921630859e+02f);
  bd.angle = 1.057250976562500e+01f;
  bd.linearVelocity.Set(-7.731329202651978e-01f, -1.927066802978516e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1141] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1141]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.837307739257812e+02f, 1.943654785156250e+02f);
  bd.angle = 1.435625791549683e+00f;
  bd.linearVelocity.Set(3.649840950965881e-01f, 2.044042110443115e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1142] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1142]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.574142265319824e+01f, 2.298859100341797e+02f);
  bd.angle = 8.575862050056458e-01f;
  bd.linearVelocity.Set(1.422517180442810e+00f, 1.512536406517029e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1143] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1143]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.331922760009766e+02f, -1.123915100097656e+02f);
  bd.angle = -2.597440719604492e+00f;
  bd.linearVelocity.Set(-1.819568634033203e+00f, -1.000245809555054e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1144] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1144]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.106618499755859e+01f, -4.783357620239258e+01f);
  bd.angle = -1.113069653511047e+00f;
  bd.linearVelocity.Set(8.394508361816406e-01f, -1.899116516113281e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1145] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1145]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.740959167480469e+01f, -1.473201599121094e+02f);
  bd.angle = -5.577210426330566e+00f;
  bd.linearVelocity.Set(1.522832155227661e+00f, 1.411506533622742e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1146] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1146]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.265265350341797e+02f, 1.217735519409180e+02f);
  bd.angle = 3.140043735504150e+00f;
  bd.linearVelocity.Set(-2.074446201324463e+00f, 8.941381424665451e-02f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1147] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1147]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.352067565917969e+02f, 1.199347610473633e+02f);
  bd.angle = -5.388545036315918e+00f;
  bd.linearVelocity.Set(1.231037259101868e+00f, 1.672085165977478e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1148] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1148]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.616027374267578e+02f, 1.257563095092773e+02f);
  bd.angle = -4.122617721557617e+00f;
  bd.linearVelocity.Set(-1.082232832908630e+00f, 1.772044181823730e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1149] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1149]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.981780242919922e+01f, 2.173742370605469e+02f);
  bd.angle = -3.818112850189209e+00f;
  bd.linearVelocity.Set(-1.563699245452881e+00f, 1.366076827049255e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1150] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1150]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.072417907714844e+02f, 1.200409393310547e+02f);
  bd.angle = -3.579609155654907e+00f;
  bd.linearVelocity.Set(-1.915292024612427e+00f, 8.018589019775391e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1151] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1151]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.285910644531250e+02f, -1.936569671630859e+02f);
  bd.angle = -8.155629158020020e+00f;
  bd.linearVelocity.Set(-6.986100077629089e-01f, -1.955329179763794e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1152] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1152]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.365840911865234e+02f, 1.073735275268555e+02f);
  bd.angle = 1.382036447525024e+00f;
  bd.linearVelocity.Set(4.739465117454529e-01f, 2.021557807922363e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1153] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1153]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.548214626312256e+01f, 2.437552795410156e+02f);
  bd.angle = -1.843661117553711e+01f;
  bd.linearVelocity.Set(1.865636229515076e+00f, 9.114654064178467e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1154] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1154]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.244457702636719e+02f, -3.297183990478516e+01f);
  bd.angle = 1.724153280258179e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1155] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1155]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.184094238281250e+02f, -3.143356132507324e+01f);
  bd.angle = 5.757492542266846e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1156] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1156]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.182242279052734e+02f, -3.760515594482422e+01f);
  bd.angle = 1.141137123107910e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1157] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1157]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.180570220947266e+02f, -4.260972595214844e+01f);
  bd.angle = 1.406589746475220e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1158] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1158]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.208537292480469e+02f, -3.537058258056641e+01f);
  bd.angle = 8.726737499237061e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1159] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1159]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.232983551025391e+02f, -3.073497581481934e+01f);
  bd.angle = 3.949901103973389e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1160] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1160]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.720169219970703e+02f, 9.217432403564453e+01f);
  bd.angle = 8.340188264846802e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1161] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1161]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.756639709472656e+02f, 9.262870788574219e+01f);
  bd.angle = 5.802347660064697e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1162] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1162]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.101730804443359e+02f, -1.295555419921875e+02f);
  bd.angle = 2.585495948791504e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1163] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1163]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.079278564453125e+02f, -1.348898468017578e+02f);
  bd.angle = 6.195017337799072e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1164] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1164]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.027624206542969e+02f, -1.301116180419922e+02f);
  bd.angle = 2.900303602218628e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1165] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1165]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.482155151367188e+02f, -9.389318084716797e+01f);
  bd.angle = 5.229006290435791e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1166] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1166]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.365146636962891e+02f, -9.888092803955078e+01f);
  bd.angle = 5.187453746795654e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1167] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1167]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.373958892822266e+02f, -1.018535614013672e+02f);
  bd.angle = 2.102714061737061e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1168] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1168]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.434199066162109e+02f, -9.563538360595703e+01f);
  bd.angle = 1.492051601409912e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1169] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1169]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.566144409179688e+02f, 1.780858001708984e+02f);
  bd.angle = 6.029942631721497e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1170] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1170]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.523825225830078e+02f, 1.806439208984375e+02f);
  bd.angle = 2.262542247772217e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1171] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1171]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.520927886962891e+02f, 1.776740417480469e+02f);
  bd.angle = 3.897287130355835e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1172] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1172]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.522238445281982e+01f, 1.578179836273193e+01f);
  bd.angle = 5.624548912048340e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1173] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1173]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.774751281738281e+01f, -1.063490200042725e+01f);
  bd.angle = 5.446329116821289e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1174] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1174]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.459759235382080e+01f, 2.208690643310547e+01f);
  bd.angle = 2.458921670913696e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1175] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1175]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.283131504058838e+01f, 7.482317924499512e+00f);
  bd.angle = 3.797552585601807e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1176] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1176]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-4.513474273681641e+01f, 2.368548011779785e+01f);
  bd.angle = 3.720310330390930e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1177] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1177]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.500000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1178] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1024);
    fd.filter.maskBits = uint16(4);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(5.000032782554626e-01f, -7.500000000000000e+01f);
    vs[1].Set(4.999967217445374e-01f, 7.500000000000000e+01f);
    vs[2].Set(-5.000032782554626e-01f, 7.500000000000000e+01f);
    vs[3].Set(-4.999967217445374e-01f, -7.500000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1178]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.500000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1179] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1024);
    fd.filter.maskBits = uint16(4);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(5.000032782554626e-01f, -7.500000000000000e+01f);
    vs[1].Set(4.999967217445374e-01f, 7.500000000000000e+01f);
    vs[2].Set(-5.000032782554626e-01f, 7.500000000000000e+01f);
    vs[3].Set(-4.999967217445374e-01f, -7.500000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1179]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1180] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2048);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(7.000003337860107e+00f, -7.750000000000000e+01f);
    vs[1].Set(6.999996662139893e+00f, 7.750000000000000e+01f);
    vs[2].Set(-7.000003337860107e+00f, 7.750000000000000e+01f);
    vs[3].Set(-6.999996662139893e+00f, -7.750000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1180]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-6.006740188598633e+01f, 1.753447418212891e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1181] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.342747497558594e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1181]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.550943298339844e+02f, 1.386261444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1182] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.303153991699219e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1182]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.912165069580078e+01f, -2.479356231689453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1183] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.235737895965576e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1183]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.567203521728516e+01f, -2.407344970703125e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1184] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.482034683227539e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1184]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.496918334960938e+02f, 2.428731727600098e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1185] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.206946086883545e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1185]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.606859283447266e+02f, -1.650097351074219e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1186] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.060206031799316e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1186]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.627242279052734e+02f, -3.226569366455078e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1187] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.730708122253418e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1187]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.630631256103516e+01f, -1.933203887939453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1188] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.178622245788574e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1188]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.616893005371094e+02f, 1.345806026458740e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1189] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.292151165008545e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1189]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.595272827148438e+01f, -2.494852447509766e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1190] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.387961292266846e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1190]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.235678100585938e+01f, -2.561200256347656e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1191] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.080622100830078e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1191]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.269055366516113e+01f, -1.791886444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1192] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.097749519348145e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1192]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.171111202239990e+01f, -2.031019897460938e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1193] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.345048332214355e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1193]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.231988601684570e+02f, 1.527272949218750e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1194] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.252936935424805e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1194]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.539339904785156e+02f, -2.316838531494141e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1195] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.008975028991699e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1195]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.013562774658203e+01f, 4.464557266235352e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1196] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.172460079193115e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1196]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.208606109619141e+02f, -3.535921096801758e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1197] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.156902313232422e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1197]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.208606109619141e+02f, -3.535921096801758e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1198] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.215690231323242e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1198]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.576066436767578e+02f, 3.955086517333984e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1199] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.828186988830566e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1199]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.576066436767578e+02f, 3.955086517333984e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1200] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.282818603515625e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1200]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.764017791748047e+02f, 9.181266784667969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1201] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.956974029541016e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1201]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.764017791748047e+02f, 9.181266784667969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1202] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.195697402954102e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1202]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.139118881225586e+02f, -1.131521072387695e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1203] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.662004470825195e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1203]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.139118881225586e+02f, -1.131521072387695e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1204] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.966200447082520e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1204]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.079012451171875e+02f, -1.302250671386719e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1205] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.044806003570557e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1205]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.079012451171875e+02f, -1.302250671386719e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1206] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.004480552673340e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1206]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.427084808349609e+02f, -9.709397888183594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1207] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.404340744018555e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1207]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.427084808349609e+02f, -9.709397888183594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1208] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.340434074401855e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1208]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.904835510253906e+02f, 3.376055526733398e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1209] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.670727729797363e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1209]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.904835510253906e+02f, 3.376055526733398e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1210] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.367072677612305e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1210]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.533123321533203e+02f, 1.813738250732422e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1211] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.065876007080078e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1211]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.533123321533203e+02f, 1.813738250732422e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1212] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.906587600708008e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1212]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1213] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.500000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1213]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1214] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.900000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1214]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-6.006740188598633e+01f, 1.753447418212891e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1215] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.427474975585938e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1215]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.550943298339844e+02f, 1.386261444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1216] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.303154468536377e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1216]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.912165069580078e+01f, -2.479356231689453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1217] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.357378959655762e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1217]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.567203521728516e+01f, -2.407344970703125e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1218] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.082034683227539e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1218]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.496918334960938e+02f, 2.428731727600098e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1219] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.069460868835449e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1219]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.606859283447266e+02f, -1.650097351074219e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1220] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.602059841156006e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1220]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.627242279052734e+02f, -3.226569366455078e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1221] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.730708122253418e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1221]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.630631256103516e+01f, -1.933203887939453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1222] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.786222457885742e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1222]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.616893005371094e+02f, 1.345806026458740e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1223] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.921511650085449e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1223]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.595272827148438e+01f, -2.494852447509766e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1224] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.879612922668457e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1224]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.235678100585938e+01f, -2.561200256347656e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1225] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.806221485137939e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1225]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.269055366516113e+01f, -1.791886444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1226] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.977495193481445e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1226]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.171111202239990e+01f, -2.031019897460938e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1227] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.450483322143555e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1227]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.231988601684570e+02f, 1.527272949218750e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1228] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.529369354248047e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1228]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.539339904785156e+02f, -2.316838531494141e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1229] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.089749813079834e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1229]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.013562774658203e+01f, 4.464557266235352e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1230] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.724600315093994e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1230]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.208606109619141e+02f, -3.535921096801758e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1231] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.815690231323242e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1231]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.576066436767578e+02f, 3.955086517333984e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1232] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.882818603515625e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1232]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.764017791748047e+02f, 9.181266784667969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1233] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.795697402954102e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1233]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.139118881225586e+02f, -1.131521072387695e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1234] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.566200447082520e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1234]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.079012451171875e+02f, -1.302250671386719e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1235] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.604480552673340e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1235]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.427084808349609e+02f, -9.709397888183594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1236] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.940434074401855e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1236]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.904835510253906e+02f, 3.376055526733398e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1237] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.967072677612305e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1237]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.533123321533203e+02f, 1.813738250732422e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1238] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.506587600708008e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1238]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1239] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.500000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1239]->CreateFixture(&fd);
  }
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[27];
  jd.bodyB = bodies[16];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(5.679945600000000e+07f, -2.142136200000000e+07f);
  jd.localAnchorB.Set(5.679945600000000e+07f, -2.142136200000000e+07f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[0] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[90];
  jd.bodyB = bodies[62];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-2.999999523162842e+00f, -3.576278686523438e-06f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[1] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[294];
  jd.bodyB = bodies[72];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(1.847743988037109e-06f, 3.000000238418579e+00f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[2] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[186];
  jd.bodyB = bodies[111];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.760887145996094e-03f, -3.007760763168335e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[3] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[288];
  jd.bodyB = bodies[274];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.999998569488525e+00f, 1.072883605957031e-06f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[4] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[312];
  jd.bodyB = bodies[310];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.997811317443848e+00f, -6.891936063766479e-04f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[5] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[317];
  jd.bodyB = bodies[315];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-5.130577087402344e-02f, -2.982118129730225e+00f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[6] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[749];
  jd.bodyB = bodies[326];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.999987602233887e+00f, -2.467632293701172e-05f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[7] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[462];
  jd.bodyB = bodies[326];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-2.503395080566406e-06f, -3.000005245208740e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[8] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[686];
  jd.bodyB = bodies[462];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(3.000000715255737e+00f, 1.072883605957031e-06f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[9] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[749];
  jd.bodyB = bodies[686];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(4.291534423828125e-06f, 2.999995708465576e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[10] = m_world->CreateJoint(&jd);
}
b2Free(joints);
b2Free(bodies);
joints = NULL;
bodies = NULL;
