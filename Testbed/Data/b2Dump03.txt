b2Vec2 g(0.000000000000000e+00f, 0.000000000000000e+00f);
m_world->SetGravity(g);
b2Body** bodies = (b2Body**)b2Alloc(1242 * sizeof(b2Body*));
b2Joint** joints = (b2Joint**)b2Alloc(11 * sizeof(b2Joint*));
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.861781311035156e+01f, -9.278968811035156e+01f);
  bd.angle = 2.790054321289062e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[0] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[0]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.674081726074219e+02f, 6.482912445068359e+01f);
  bd.angle = 5.999287605285645e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.280820846557617e+01f, 2.564370422363281e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[2] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[2]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.525881652832031e+02f, 1.465525970458984e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[3] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[3]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.376191253662109e+02f, 1.670578918457031e+02f);
  bd.angle = 5.689139366149902e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[4] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[4]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.780329513549805e+01f, 1.596771545410156e+02f);
  bd.angle = 6.102741718292236e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[5] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[5]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.520299530029297e+01f, -1.287703552246094e+02f);
  bd.angle = 1.388985037803650e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[6] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[6]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.318329925537109e+02f, 1.705714721679688e+02f);
  bd.angle = 1.538099944591522e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[7] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[7]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.763606262207031e+01f, -1.067292175292969e+02f);
  bd.angle = 3.556270837783813e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[8] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[8]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.906163406372070e+01f, 1.542313232421875e+02f);
  bd.angle = 3.834291696548462e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[9] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[9]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.662054138183594e+02f, 4.271868896484375e+01f);
  bd.angle = 2.866155624389648e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[10] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[10]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.182293701171875e+01f, 5.850585556030273e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[11] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[11]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.279064178466797e+01f, 2.735052795410156e+02f);
  bd.angle = 3.772855758666992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[12] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[12]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.780933532714844e+02f, 8.608228302001953e+01f);
  bd.angle = 8.515589237213135e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[13] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[13]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.667985839843750e+02f, 6.882419586181641e+01f);
  bd.angle = 7.838100939989090e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[14] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[14]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.375691986083984e+01f, -1.171907653808594e+02f);
  bd.angle = 1.696033120155334e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[15] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[15]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.540851135253906e+02f, 4.574048995971680e+01f);
  bd.angle = 1.892637014389038e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[16] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[16]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.582243347167969e+02f, -5.031682205200195e+01f);
  bd.angle = 3.307855844497681e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[17] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[17]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.533351440429688e+02f, 2.638452529907227e+01f);
  bd.angle = 4.376882076263428e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[18] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[18]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.684055023193359e+02f, 6.716857910156250e+01f);
  bd.angle = 9.254131913185120e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[19] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[19]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.470589752197266e+02f, -9.293798065185547e+01f);
  bd.angle = 3.601947307586670e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[20] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[20]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.489124603271484e+02f, 2.143920326232910e+01f);
  bd.angle = 3.430641651153564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[21] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[21]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.453074951171875e+02f, 4.158960342407227e+01f);
  bd.angle = 6.003967285156250e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[22] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[22]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.719232177734375e+02f, -5.448957061767578e+01f);
  bd.angle = 3.876379966735840e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[23] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[23]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.203617248535156e+02f, -2.495534515380859e+01f);
  bd.angle = 5.397439479827881e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[24] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[24]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.305815277099609e+02f, 1.746700592041016e+02f);
  bd.angle = 3.271683454513550e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[25] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[25]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.558737487792969e+02f, 8.715484619140625e+01f);
  bd.angle = 9.426788240671158e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[26] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[26]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.049737548828125e+01f, -9.854760742187500e+01f);
  bd.angle = 5.413794040679932e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[27] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[27]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.808773803710938e+01f, -1.020350189208984e+02f);
  bd.angle = 6.014038085937500e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[28] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[28]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.114694976806641e+01f, 2.675769958496094e+02f);
  bd.angle = -2.286381244659424e+00f;
  bd.linearVelocity.Set(1.513968348503113e+00f, 1.741658568382263e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[29] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 5.000000000000000e+01f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(16);
    fd.filter.maskBits = uint16(8);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.000000029802322e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[29]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.379542846679688e+02f, 9.398616790771484e+00f);
  bd.angle = 4.013583660125732e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[30] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[30]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.377508163452148e+01f, -3.526492691040039e+01f);
  bd.angle = 1.517377376556396e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[31] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[31]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.453668518066406e+02f, 1.870635833740234e+02f);
  bd.angle = 2.393217325210571e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[32] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[32]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.451263275146484e+02f, 1.593084106445312e+02f);
  bd.angle = 4.954440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[33] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[33]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.839584350585938e+01f, 1.549075012207031e+02f);
  bd.angle = 2.638218700885773e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[34] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[34]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.239226531982422e+01f, -1.419946289062500e+02f);
  bd.angle = 2.890100717544556e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[35] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[35]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.090063018798828e+02f, -1.304981994628906e+02f);
  bd.angle = 5.180225372314453e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[36] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[36]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.792444000244141e+02f, 6.712353515625000e+01f);
  bd.angle = 3.533930540084839e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[37] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[37]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.343319702148438e+01f, -1.321619415283203e+02f);
  bd.angle = 9.951143860816956e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[38] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[38]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.242159271240234e+01f, 5.394033813476562e+01f);
  bd.angle = 2.733741104602814e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[39] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[39]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(-nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[40] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4768);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[40]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.807269287109375e+01f, -1.061717128753662e+01f);
  bd.angle = 2.828813552856445e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[41] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[41]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.646613464355469e+02f, 3.954127502441406e+01f);
  bd.angle = 3.468137502670288e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[42] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[42]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.434035186767578e+02f, 1.621568298339844e+02f);
  bd.angle = 1.934215188026428e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[43] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[43]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.812595214843750e+02f, 6.580801391601562e+01f);
  bd.angle = 4.708208560943604e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[44] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[44]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.028463172912598e+01f, 1.879338836669922e+01f);
  bd.angle = 5.539624691009521e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[45] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[45]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.836319427490234e+02f, 9.357147979736328e+01f);
  bd.angle = 5.534741878509521e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[46] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[46]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.492044067382812e+01f, 1.619542083740234e+02f);
  bd.angle = 1.953896403312683e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[47] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[47]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.081228866577148e+02f, -1.293172454833984e+02f);
  bd.angle = 4.157683372497559e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[48] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[48]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.420240783691406e+01f, -1.180482635498047e+02f);
  bd.angle = 3.663679838180542e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[49] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[49]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[50] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[50]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[51] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4768);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[51]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.168190917968750e+02f, -4.684279632568359e+01f);
  bd.angle = 3.293135166168213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[52] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[52]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.378835601806641e+02f, 8.417317962646484e+01f);
  bd.angle = 2.169465303421021e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[53] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[53]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.309267425537109e+01f, -2.327315979003906e+02f);
  bd.angle = 2.909826755523682e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[54] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[54]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.012299346923828e+02f, -1.297416687011719e+02f);
  bd.angle = -3.316125571727753e-01f;
  bd.linearVelocity.Set(-2.454036951065063e+00f, 8.450014591217041e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[55] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 5.000000000000000e+01f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(16);
    fd.filter.maskBits = uint16(8);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.000000029802322e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[55]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.142274475097656e+01f, -1.136686859130859e+02f);
  bd.angle = 2.473255157470703e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[56] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[56]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.532387084960938e+02f, -4.982601547241211e+01f);
  bd.angle = 1.979259133338928e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[57] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[57]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.486023712158203e+02f, 4.639879608154297e+01f);
  bd.angle = 2.043507337570190e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[58] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[58]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.583423614501953e+01f, 6.277245712280273e+01f);
  bd.angle = 4.445086479187012e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[59] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[59]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.807411956787109e+01f, 2.683977355957031e+02f);
  bd.angle = 2.528687238693237e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[60] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[60]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.516325759887695e+01f, 1.644087371826172e+02f);
  bd.angle = 1.764289617538452e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[61] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[61]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.048258209228516e+01f, 5.543522262573242e+01f);
  bd.angle = 3.442489862442017e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[62] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[62]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.498236083984375e+01f, 7.111109924316406e+01f);
  bd.angle = 1.162959814071655e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[63] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[63]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.646893310546875e+01f, 2.700596923828125e+02f);
  bd.angle = 4.349536895751953e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[64] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[64]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[65] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[65]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.392661285400391e+01f, -1.281498336791992e+01f);
  bd.angle = 3.529072284698486e+00f;
  bd.linearVelocity.Set(-1.479235012084246e-02f, -5.093412939459085e-03f);
  bd.angularVelocity = 2.038421807810664e-03f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[66] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4767);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[66]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.360392913818359e+02f, 5.662034988403320e+00f);
  bd.angle = 2.786664009094238e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[67] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[67]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.130174827575684e+01f, 1.485915374755859e+02f);
  bd.angle = 4.214688777923584e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[68] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[68]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.366788177490234e+02f, 1.280034160614014e+01f);
  bd.angle = 2.492094039916992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[69] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[69]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.127856826782227e+01f, 3.949499607086182e+00f);
  bd.angle = 2.592738151550293e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[70] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[70]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.453120727539062e+02f, 9.429609680175781e+01f);
  bd.angle = 5.238858222961426e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[71] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[71]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.337855148315430e+01f, 8.509128570556641e+00f);
  bd.angle = 1.742835521697998e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[72] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[72]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.644038391113281e+02f, 5.625925445556641e+01f);
  bd.angle = 3.245283603668213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[73] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[73]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.353367614746094e+01f, 1.850082206726074e+01f);
  bd.angle = 3.859464824199677e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[74] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[74]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.743666992187500e+02f, 3.278188705444336e+01f);
  bd.angle = 5.717203140258789e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[75] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[75]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.941624450683594e+01f, 2.723959350585938e+02f);
  bd.angle = 4.478305339813232e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[76] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[76]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.663210906982422e+02f, 5.553606414794922e+01f);
  bd.angle = 3.748915910720825e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[77] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[77]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.624318542480469e+02f, -4.481998443603516e+01f);
  bd.angle = 2.982086181640625e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[78] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[78]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.135051269531250e+02f, -1.192185211181641e+02f);
  bd.angle = 2.625538587570190e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[79] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[79]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.731761169433594e+02f, 6.405635833740234e+01f);
  bd.angle = 4.509888172149658e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[80] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[80]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.087139129638672e+01f, 1.617832336425781e+02f);
  bd.angle = 1.243984937667847e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[81] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[81]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.587630081176758e+01f, 1.464897460937500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[82] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[82]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.213690185546875e+01f, -1.141994094848633e+02f);
  bd.angle = 6.023104190826416e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[83] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[83]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.460988159179688e+02f, 2.012253379821777e+01f);
  bd.angle = 4.960218966007233e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[84] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[84]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.168144989013672e+01f, -1.254483871459961e+02f);
  bd.angle = 5.629123687744141e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[85] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4763);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[85]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.720969390869141e+01f, -1.005566406250000e+02f);
  bd.angle = 2.593888521194458e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[86] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[86]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.344601898193359e+02f, 1.690616912841797e+02f);
  bd.angle = 5.635330200195312e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[87] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[87]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.462049713134766e+02f, 1.631702728271484e+02f);
  bd.angle = 3.115251779556274e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[88] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[88]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.348341369628906e+02f, -1.000580825805664e+02f);
  bd.angle = 6.138781070709229e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[89] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[89]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.519106750488281e+02f, 1.570701293945312e+02f);
  bd.angle = 1.629077196121216e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[90] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[90]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.856962432861328e+02f, 3.177871894836426e+01f);
  bd.angle = 2.919157743453979e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[91] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[91]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.513836669921875e+02f, 2.483044624328613e+01f);
  bd.angle = 4.016537189483643e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[92] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[92]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.055956268310547e+02f, -1.259671554565430e+02f);
  bd.angle = 2.404681921005249e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[93] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[93]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.052576751708984e+02f, -1.080285491943359e+02f);
  bd.angle = 4.370728492736816e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[94] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[94]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.130849838256836e+01f, 1.550255279541016e+02f);
  bd.angle = 4.579440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[95] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4743);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[95]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.499916076660156e+01f, 1.493586578369141e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[96] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[96]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.484523162841797e+02f, 1.620277252197266e+02f);
  bd.angle = 4.757214546203613e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[97] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[97]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.552550659179688e+02f, 1.718894004821777e+01f);
  bd.angle = 3.783319473266602e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[98] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[98]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.054011077880859e+02f, -1.219093627929688e+02f);
  bd.angle = 1.086357831954956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[99] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[99]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.460900115966797e+01f, 2.824139404296875e+02f);
  bd.angle = 2.797159671783447e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[100] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[100]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.724686889648438e+02f, -5.289154052734375e+01f);
  bd.angle = 5.845924854278564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[101] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[101]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.032991333007812e+02f, -9.599006652832031e+01f);
  bd.angle = 2.324633359909058e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[102] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[102]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.699515075683594e+02f, -5.227493667602539e+01f);
  bd.angle = 4.528053760528564e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[103] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[103]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.842407989501953e+01f, -1.111391448974609e+02f);
  bd.angle = 1.530671596527100e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[104] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[104]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[105] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[105]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.413229675292969e+02f, 8.359025573730469e+01f);
  bd.angle = 3.129315853118896e+00f;
  bd.linearVelocity.Set(1.067597139626741e-02f, 8.597658947110176e-03f);
  bd.angularVelocity = 1.960744336247444e-02f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[106] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4764);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[106]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-1.639693789184093e-02f, -2.853307127952576e-02f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[107] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[107]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.269145393371582e+01f, 1.660251617431641e+02f);
  bd.angle = 4.594952583312988e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[108] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[108]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.732250213623047e+01f, 2.855084228515625e+02f);
  bd.angle = 2.416291475296021e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[109] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[109]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.538729095458984e+01f, 2.726713562011719e+02f);
  bd.angle = 6.562970876693726e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[110] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[110]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.326921691894531e+02f, 1.674822540283203e+02f);
  bd.angle = 1.091759443283081e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[111] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[111]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[112] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[112]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.406230926513672e+01f, -1.272736282348633e+02f);
  bd.angle = 5.629123687744141e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[113] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4763);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[113]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.992298126220703e+01f, 6.378163528442383e+01f);
  bd.angle = 5.478219509124756e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[114] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[114]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.050405502319336e+02f, -1.076729354858398e+02f);
  bd.angle = 2.030150592327118e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[115] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[115]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.481875152587891e+02f, -8.371225738525391e+01f);
  bd.angle = 2.148756742477417e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[116] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[116]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.451358947753906e+02f, 1.573052825927734e+02f);
  bd.angle = 5.367353916168213e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[117] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[117]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.279471206665039e+01f, 6.906017303466797e+01f);
  bd.angle = 1.216071963310242e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[118] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[118]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.444011077880859e+02f, 1.089085102081299e+01f);
  bd.angle = 6.495641469955444e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[119] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[119]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.590780639648438e+01f, 6.355587005615234e+01f);
  bd.angle = 3.440976619720459e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[120] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[120]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.115954589843750e+01f, -1.013644943237305e+02f);
  bd.angle = 6.091252565383911e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[121] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[121]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.772127838134766e+02f, 8.833630371093750e+01f);
  bd.angle = 3.450633525848389e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[122] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[122]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.702929840087891e+02f, 5.278057098388672e+01f);
  bd.angle = 5.528706073760986e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[123] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[123]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.396966857910156e+02f, 1.659022674560547e+02f);
  bd.angle = 6.259330749511719e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[124] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[124]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.891122436523438e+02f, 4.173036193847656e+01f);
  bd.angle = 5.539152145385742e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[125] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[125]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.233141937255859e+02f, -3.223489379882812e+01f);
  bd.angle = 5.350377559661865e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[126] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[126]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.357102203369141e+01f, 1.543819274902344e+02f);
  bd.angle = 3.738255023956299e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[127] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[127]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.438868560791016e+02f, -9.757226562500000e+01f);
  bd.angle = 2.045793533325195e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[128] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[128]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.058274078369141e+01f, 2.452825927734375e+01f);
  bd.angle = 5.707085132598877e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[129] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[129]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.699927062988281e+02f, -1.635392303466797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[130] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[130]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.208773803710938e+01f, 2.837569885253906e+02f);
  bd.angle = 2.291670799255371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[131] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[131]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.393270416259766e+02f, 2.065027236938477e+00f);
  bd.angle = 2.704521894454956e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[132] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[132]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.344684982299805e+01f, 6.443508911132812e+01f);
  bd.angle = 1.566421747207642e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[133] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[133]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.133778381347656e+01f, 2.778689575195312e+02f);
  bd.angle = 1.038591384887695e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[134] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4761);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[134]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.362575988769531e+02f, 1.669117889404297e+02f);
  bd.angle = 6.060469627380371e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[135] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[135]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.447046356201172e+02f, 1.861198997497559e+01f);
  bd.angle = 2.912232160568237e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[136] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[136]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.296080684661865e+01f, -2.040869598388672e+02f);
  bd.angle = 5.091501235961914e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[137] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[137]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.515998840332031e+01f, 2.837593994140625e+02f);
  bd.angle = 1.232102215290070e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[138] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[138]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.516397857666016e+01f, 2.753664855957031e+02f);
  bd.angle = 2.733269929885864e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[139] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[139]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.936065368652344e+02f, 3.697919464111328e+01f);
  bd.angle = 4.331675529479980e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[140] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[140]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.778363037109375e+02f, -5.606998062133789e+01f);
  bd.angle = 2.557946443557739e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[141] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[141]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.396989440917969e+02f, -9.303126525878906e+01f);
  bd.angle = 6.256739616394043e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[142] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[142]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.755332946777344e+01f, 1.562883148193359e+02f);
  bd.angle = 3.755620956420898e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[143] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[143]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.444030456542969e+02f, 1.457978129386902e+00f);
  bd.angle = 3.819842338562012e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[144] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[144]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.592882537841797e+01f, 5.621904754638672e+01f);
  bd.angle = 3.113061666488647e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[145] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[145]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.582450866699219e+02f, -6.259232330322266e+01f);
  bd.angle = 3.771668195724487e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[146] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[146]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.630324707031250e+02f, 7.400101184844971e+00f);
  bd.angle = 2.001740455627441e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[147] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[147]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.930998229980469e+01f, -1.046253738403320e+02f);
  bd.angle = 2.079165935516357e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[148] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[148]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.117236633300781e+02f, -1.288892211914062e+02f);
  bd.angle = 2.442714214324951e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[149] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[149]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.452089691162109e+01f, -2.396989288330078e+02f);
  bd.angle = 6.151968836784363e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[150] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[150]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.203865661621094e+02f, -2.786472702026367e+01f);
  bd.angle = 4.812769889831543e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[151] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[151]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.285029602050781e+01f, 5.078170776367188e+01f);
  bd.angle = 4.746119022369385e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[152] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[152]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.752276229858398e+01f, -1.059679317474365e+01f);
  bd.angle = 1.735719561576843e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[153] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[153]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.057128906250000e+02f, -1.427162170410156e+02f);
  bd.angle = 1.768083095550537e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[154] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[154]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.576616516113281e+02f, 1.531599044799805e+01f);
  bd.angle = 8.690982311964035e-02f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[155] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[155]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.487045288085938e+01f, 2.747348632812500e+02f);
  bd.angle = 3.479317426681519e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[156] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[156]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.420177001953125e+02f, 7.622023105621338e+00f);
  bd.angle = 2.176643610000610e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[157] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[157]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.918683624267578e+01f, 2.769282836914062e+02f);
  bd.angle = 1.829222440719604e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[158] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[158]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.701828002929688e+02f, -4.997066497802734e+01f);
  bd.angle = 1.657744884490967e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[159] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[159]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.701612396240234e+02f, 3.148959922790527e+01f);
  bd.angle = 5.176353454589844e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[160] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[160]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.580138244628906e+02f, -5.145070648193359e+01f);
  bd.angle = 4.082066416740417e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[161] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[161]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.646124114990234e+02f, 3.386193084716797e+01f);
  bd.angle = 3.039560317993164e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[162] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[162]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.665481567382812e+01f, 5.816020202636719e+01f);
  bd.angle = 1.419553875923157e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[163] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[163]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.637377777099609e+02f, 9.962342071533203e+01f);
  bd.angle = 5.925274372100830e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[164] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[164]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.269944305419922e+02f, 1.513090057373047e+02f);
  bd.angle = 1.937041282653809e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[165] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[165]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.414873504638672e+02f, 1.553401489257812e+02f);
  bd.angle = 1.269026994705200e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[166] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[166]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.564313888549805e+01f, 2.692788696289062e+01f);
  bd.angle = 5.249121189117432e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[167] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[167]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.280159912109375e+02f, -9.539730072021484e+01f);
  bd.angle = 3.457974433898926e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[168] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[168]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.332909851074219e+02f, 1.699022674560547e+02f);
  bd.angle = 3.269759893417358e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[169] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[169]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.781394348144531e+02f, -4.939722442626953e+01f);
  bd.angle = 5.179194927215576e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[170] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[170]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.979094696044922e+01f, 5.146620941162109e+01f);
  bd.angle = 3.719912767410278e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[171] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[171]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.717268524169922e+02f, 9.655654907226562e+01f);
  bd.angle = 3.106859207153320e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[172] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[172]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.443820495605469e+02f, 1.558842773437500e+02f);
  bd.angle = 1.781192183494568e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[173] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[173]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.583814086914062e+02f, -5.246439743041992e+01f);
  bd.angle = 8.678414225578308e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[174] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[174]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.938437805175781e+02f, 4.837842559814453e+01f);
  bd.angle = 5.816813945770264e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[175] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[175]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.528043823242188e+02f, 1.478590545654297e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[176] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[176]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.483860626220703e+02f, 1.587151489257812e+02f);
  bd.angle = 3.853093862533569e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[177] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[177]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.579120483398438e+02f, 1.569628601074219e+02f);
  bd.angle = 4.835237979888916e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[178] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[178]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.659663696289062e+02f, -5.726892852783203e+01f);
  bd.angle = 2.537303447723389e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[179] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[179]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.833540344238281e+01f, -2.352845916748047e+02f);
  bd.angle = 3.858727216720581e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[180] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[180]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.600953674316406e+02f, -1.678614807128906e+02f);
  bd.angle = 9.858317971229553e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[181] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[181]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.685045051574707e+01f, 2.276706504821777e+01f);
  bd.angle = 3.258355379104614e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[182] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[182]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.587815704345703e+02f, 1.243797206878662e+01f);
  bd.angle = 3.645632266998291e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[183] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[183]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.698519134521484e+01f, 1.390468978881836e+01f);
  bd.angle = 3.690265893936157e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[184] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[184]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.739747619628906e+01f, -1.039472122192383e+02f);
  bd.angle = 2.537108182907104e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[185] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[185]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.180609436035156e+02f, -3.909624099731445e+01f);
  bd.angle = 5.381544113159180e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[186] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[186]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.244263458251953e+01f, 2.607734680175781e+02f);
  bd.angle = 6.742876768112183e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[187] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[187]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.472895355224609e+02f, 5.322179031372070e+01f);
  bd.angle = 1.449412941932678e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[188] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[188]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.416920471191406e+02f, 1.612955169677734e+02f);
  bd.angle = 4.632501125335693e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[189] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[189]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.629195556640625e+02f, 6.124165344238281e+01f);
  bd.angle = 5.531469821929932e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[190] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[190]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.844193267822266e+01f, 2.710205688476562e+02f);
  bd.angle = 5.476076126098633e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[191] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[191]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.502644958496094e+02f, 6.551354885101318e+00f);
  bd.angle = 3.831653296947479e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[192] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[192]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.689398803710938e+02f, 4.557635879516602e+01f);
  bd.angle = 3.032016038894653e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[193] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[193]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.356497039794922e+02f, 2.121397209167480e+01f);
  bd.angle = 3.808577060699463e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[194] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[194]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.575191040039062e+02f, -4.393905258178711e+01f);
  bd.angle = 4.320577621459961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[195] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[195]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.436271667480469e+01f, 2.864525756835938e+02f);
  bd.angle = 2.009779930114746e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[196] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[196]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.232954406738281e+01f, -9.447433471679688e+01f);
  bd.angle = 3.669390678405762e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[197] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[197]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.413105106353760e+01f, -2.098372039794922e+02f);
  bd.angle = 2.109172821044922e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[198] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[198]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.926497459411621e+01f, 1.706806945800781e+02f);
  bd.angle = 2.220236539840698e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[199] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[199]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.145073127746582e+01f, 1.608282012939453e+02f);
  bd.angle = 2.594018220901489e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[200] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[200]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.778781433105469e+02f, 3.641611480712891e+01f);
  bd.angle = 6.036226749420166e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[201] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[201]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.626944885253906e+02f, 1.360874938964844e+02f);
  bd.angle = 1.052941799163818e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[202] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[202]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.561030883789062e+02f, 8.518076896667480e+00f);
  bd.angle = 2.281517237424850e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[203] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[203]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.475414581298828e+02f, -1.005373229980469e+02f);
  bd.angle = 6.822140216827393e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[204] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[204]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.793125915527344e+01f, -2.512419891357422e+01f);
  bd.angle = 1.958849430084229e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[205] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[205]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.695490417480469e+02f, 6.291244888305664e+01f);
  bd.angle = 7.158485054969788e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[206] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[206]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.270857810974121e+00f, 2.509316444396973e+01f);
  bd.angle = 3.427245378494263e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[207] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[207]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(2.230769723483404e-35f, 2.071859302847169e-35f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[208] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[208]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.393094635009766e+01f, 2.793928222656250e+02f);
  bd.angle = 1.038591384887695e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[209] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4761);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[209]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.613748474121094e+02f, -6.171490859985352e+01f);
  bd.angle = 7.749146223068237e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[210] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[210]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.339699363708496e+01f, 2.703468627929688e+02f);
  bd.angle = 5.839902400970459e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[211] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[211]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.812901306152344e+01f, 1.661769866943359e+02f);
  bd.angle = 2.994908094406128e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[212] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[212]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.642974700927734e+02f, 5.894735336303711e+01f);
  bd.angle = 4.030077934265137e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[213] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[213]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.425722808837891e+02f, 1.630291748046875e+02f);
  bd.angle = 4.453478813171387e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[214] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[214]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.458185729980469e+02f, 1.576506347656250e+02f);
  bd.angle = 2.991176128387451e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[215] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[215]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.502359466552734e+02f, 1.716670989990234e+02f);
  bd.angle = 1.701080679893494e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[216] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[216]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.625026702880859e+02f, 5.860139083862305e+01f);
  bd.angle = 6.127237796783447e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[217] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[217]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.198823242187500e+02f, -3.171737861633301e+01f);
  bd.angle = 5.240964889526367e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[218] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[218]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.457346916198730e+01f, 2.648038024902344e+02f);
  bd.angle = 1.450448036193848e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[219] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[219]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.941044616699219e+01f, 2.594641723632812e+02f);
  bd.angle = 2.765635728836060e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[220] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[220]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.383200225830078e+02f, -1.030350723266602e+02f);
  bd.angle = 5.377557277679443e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[221] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[221]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.356060638427734e+02f, 7.199491024017334e+00f);
  bd.angle = 3.625009298324585e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[222] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[222]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.863470458984375e+01f, -9.845642852783203e+01f);
  bd.angle = 9.148628711700439e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[223] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[223]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.498465728759766e+01f, -1.091784515380859e+02f);
  bd.angle = 7.839265465736389e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[224] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[224]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.381142578125000e+02f, 1.687853698730469e+02f);
  bd.angle = 2.009960412979126e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[225] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[225]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.389024353027344e+02f, 1.681986999511719e+02f);
  bd.angle = 3.094610452651978e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[226] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[226]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.313125457763672e+02f, 1.717749938964844e+02f);
  bd.angle = 1.659162044525146e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[227] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[227]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.214305114746094e+01f, -1.943629608154297e+02f);
  bd.angle = 5.301311492919922e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[228] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[228]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.396791687011719e+02f, 1.675782928466797e+02f);
  bd.angle = 4.679597854614258e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[229] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[229]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.956927490234375e+01f, 6.477143859863281e+01f);
  bd.angle = 3.682517290115356e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[230] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[230]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.313013305664062e+02f, 1.631035003662109e+02f);
  bd.angle = 4.832111358642578e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[231] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[231]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.150363159179688e+01f, 6.356062698364258e+01f);
  bd.angle = 9.890024065971375e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[232] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[232]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.310166168212891e+01f, 4.820822143554688e+01f);
  bd.angle = 5.708123683929443e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[233] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[233]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.434904022216797e+02f, 1.586765747070312e+02f);
  bd.angle = 5.531320095062256e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[234] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[234]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.384989776611328e+02f, 2.271899032592773e+01f);
  bd.angle = 3.871481180191040e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[235] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[235]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.332370758056641e+01f, -9.361296653747559e+00f);
  bd.angle = 6.177963733673096e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[236] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[236]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.980720214843750e+02f, 3.467490005493164e+01f);
  bd.angle = 9.715170860290527e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[237] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[237]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.163771057128906e+01f, 5.659664535522461e+01f);
  bd.angle = 3.202256202697754e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[238] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[238]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.617945098876953e+02f, 5.030207824707031e+01f);
  bd.angle = 1.855468153953552e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[239] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[239]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.448867034912109e+01f, -2.430343322753906e+02f);
  bd.angle = 5.494610786437988e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[240] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[240]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.226493377685547e+02f, -1.065680389404297e+02f);
  bd.angle = 9.612500071525574e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[241] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[241]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.432023468017578e+02f, 1.400187587738037e+01f);
  bd.angle = 2.502136230468750e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[242] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[242]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.528961944580078e+01f, 1.564614105224609e+02f);
  bd.angle = 6.021197319030762e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[243] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[243]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.054874610900879e+01f, 2.617358703613281e+02f);
  bd.angle = 5.482686996459961e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[244] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[244]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.787143325805664e+01f, 1.514906463623047e+02f);
  bd.angle = 1.997112989425659e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[245] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[245]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.057043075561523e+01f, 1.668129577636719e+02f);
  bd.angle = 4.278439998626709e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[246] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -2.500000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 2.500000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 2.500000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -2.500000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[246]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.004788589477539e+01f, 1.546418151855469e+02f);
  bd.angle = 2.052059173583984e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[247] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[247]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.846951103210449e+01f, 2.565117187500000e+02f);
  bd.angle = 4.262144565582275e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[248] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[248]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.210041809082031e+01f, -2.354635314941406e+02f);
  bd.angle = 5.571950078010559e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[249] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[249]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.034737396240234e+01f, 1.761057128906250e+02f);
  bd.angle = 5.441279411315918e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[250] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[250]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.195678710937500e+01f, 5.106141662597656e+01f);
  bd.angle = 3.172819614410400e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[251] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[251]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.414137878417969e+02f, 1.433654632568359e+02f);
  bd.angle = 2.759681046009064e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[252] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[252]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.161346588134766e+02f, -2.851770973205566e+01f);
  bd.angle = 8.519960641860962e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[253] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[253]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.609400177001953e+02f, 4.774936676025391e+01f);
  bd.angle = 3.696902692317963e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[254] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[254]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.359395217895508e+01f, 1.337102813720703e+02f);
  bd.angle = 6.216498374938965e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[255] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[255]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.547711944580078e+01f, -1.916949920654297e+02f);
  bd.angle = 3.666596651077271e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[256] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000059604645e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[256]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.371523742675781e+02f, 1.588012218475342e+01f);
  bd.angle = 3.324856519699097e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[257] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000059604645e-01f, -1.500000059604645e-01f);
    vs[1].Set(1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[2].Set(-1.500000059604645e-01f, 1.500000059604645e-01f);
    vs[3].Set(-1.500000059604645e-01f, -1.500000059604645e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[257]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.764904022216797e+02f, 6.290297317504883e+01f);
  bd.angle = 2.648458480834961e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[258] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000208616257e-01f, -5.000000000000000e-01f);
    vs[1].Set(1.499999910593033e-01f, 5.000000000000000e-01f);
    vs[2].Set(-1.500000208616257e-01f, 5.000000000000000e-01f);
    vs[3].Set(-1.499999910593033e-01f, -5.000000000000000e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[258]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.100127563476562e+02f, 4.131334304809570e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[259] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[259]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.105879516601562e+02f, 3.839853286743164e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[260] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[260]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.716725311279297e+02f, -1.646134185791016e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[261] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[261]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[262] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[262]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.000648498535156e+01f, -1.571656341552734e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[263] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[263]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.246529388427734e+01f, -1.588844299316406e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[264] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[264]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.930377197265625e+01f, -6.859349060058594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[265] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[265]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.035972595214844e+01f, -7.140151214599609e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[266] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[266]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.119572830200195e+02f, 4.428492736816406e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[267] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[267]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.337476501464844e+02f, -2.328276672363281e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[268] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[268]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.388512573242188e+02f, -1.700830383300781e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[269] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[269]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.363143615722656e+02f, -1.716843261718750e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[270] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[270]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.887599945068359e+01f, -1.396772613525391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[271] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[271]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.156419754028320e+01f, -9.254257965087891e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[272] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[272]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.863872528076172e+01f, -1.366995239257812e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[273] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[273]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.953778839111328e+01f, -9.475481414794922e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[274] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[274]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.767731857299805e+01f, 2.589995117187500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[275] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[275]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.978174781799316e+01f, 1.889946441650391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[276] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[276]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.768138122558594e+01f, 1.868528900146484e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[277] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[277]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(4.832330322265625e+01f, -6.964775085449219e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[278] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[278]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.286737823486328e+01f, -6.255076980590820e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[279] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[279]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.319010162353516e+01f, -1.064916610717773e+02f);
  bd.angle = -1.416675448417664e+00f;
  bd.linearVelocity.Set(1.000821813941002e-01f, 1.230888888239861e-01f);
  bd.angularVelocity = -5.292003508657217e-03f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[280] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4744);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[280]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.052990150451660e+01f, 1.885827789306641e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[281] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[281]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.950004577636719e+01f, -5.515893554687500e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[282] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[282]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.171571016311646e+00f, 2.401020507812500e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[283] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[283]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.233713073730469e+02f, 1.369282073974609e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[284] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[284]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.942007751464844e+02f, -1.479029388427734e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[285] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[285]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.201362228393555e+02f, 1.750399589538574e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[286] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[286]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.620478057861328e+02f, 1.161416015625000e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[287] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[287]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.285404663085938e+02f, -9.388100433349609e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[288] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[288]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.838875732421875e+02f, 1.932585601806641e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[289] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[289]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.813962097167969e+02f, 1.915872955322266e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[290] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[290]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.149894104003906e+02f, 9.361590576171875e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[291] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[291]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.672308349609375e+01f, 1.310661315917969e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[292] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[292]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(1.194241344928741e-01f, 1.365087628364563e-01f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[293] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[293]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.272956848144531e+01f, -1.035272293090820e+02f);
  bd.angle = -1.416675448417664e+00f;
  bd.linearVelocity.Set(1.157693564891815e-01f, 1.255301982164383e-01f);
  bd.angularVelocity = -5.292003508657217e-03f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[294] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4744);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[294]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.013298034667969e+01f, 5.281830215454102e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[295] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[295]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.834698486328125e+01f, -5.487471771240234e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[296] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[296]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.711675720214844e+02f, 1.366998291015625e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[297] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[297]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.255992507934570e+02f, -2.173942260742188e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[298] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[298]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[299] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[299]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.428202438354492e+01f, 1.554232025146484e+02f);
  bd.angle = 4.579440116882324e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[300] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4743);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[300]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[301] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[301]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.664569702148438e+02f, -5.162621688842773e+01f);
  bd.angle = 1.602621555328369e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[302] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4741);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[302]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.294333953857422e+02f, -9.455098724365234e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[303] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[303]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.824299621582031e+02f, 1.904859008789062e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[304] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[304]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.720816955566406e+02f, -8.749137878417969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[305] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[305]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.323568115234375e+02f, 1.008561630249023e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[306] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[306]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.705903320312500e+02f, -9.009442901611328e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[307] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[307]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.193974304199219e+02f, -7.180329895019531e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[308] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[308]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.305039215087891e+01f, 7.282922363281250e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[309] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[309]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.542349548339844e+02f, -1.114536285400391e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[310] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[310]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.889218139648438e+01f, 1.521104583740234e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(0);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[311] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(8);
    fd.filter.maskBits = uint16(16);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[311]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[312] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[312]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[313] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4705);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[313]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[314] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4705);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[314]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[315] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[315]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.458126983642578e+02f, 1.310201072692871e+01f);
  bd.angle = 5.938431739807129e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[316] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4574);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[316]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[317] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4557);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[317]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[318] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[318]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[319] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-4557);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[319]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[320] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[320]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[321] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[321]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[322] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[322]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[323] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[323]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[324] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[324]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[325] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[325]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[326] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[326]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[327] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[327]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.714484405517578e+02f, 6.126200485229492e+01f);
  bd.angle = -9.186920166015625e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[328] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[328]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[329] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[329]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[330] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[330]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[331] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[331]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[332] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[332]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[333] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[333]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[334] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[334]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[335] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[335]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[336] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[336]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.129614257812500e+01f, -3.085793685913086e+01f);
  bd.angle = 4.333819746971130e-01f;
  bd.linearVelocity.Set(1.918987989425659e+00f, 7.929734587669373e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[337] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[337]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[338] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[338]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[339] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[339]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[340] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[340]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[341] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[341]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[342] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[342]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[343] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[343]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[344] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[344]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[345] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[345]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[346] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[346]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[347] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[347]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[348] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[348]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[349] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[349]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[350] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[350]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[351] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[351]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[352] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[352]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[353] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[353]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.674847245216370e-01f, 2.394230804443359e+02f);
  bd.angle = -9.097011566162109e+00f;
  bd.linearVelocity.Set(-1.991889834403992e+00f, -5.862568616867065e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[354] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[354]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[355] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[355]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.210132446289062e+02f, -1.015757675170898e+02f);
  bd.angle = -7.831767082214355e+00f;
  bd.linearVelocity.Set(-4.009716957807541e-02f, -2.075985193252563e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[356] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[356]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[357] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[357]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[358] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[358]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[359] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[359]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[360] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[360]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[361] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[361]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[362] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[362]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[363] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[363]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[364] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[364]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[365] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[365]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[366] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[366]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[367] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[367]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.836349105834961e+01f, 2.433875274658203e+02f);
  bd.angle = -2.692604303359985e+00f;
  bd.linearVelocity.Set(-1.906379103660583e+00f, -8.228244781494141e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[368] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[368]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.357406005859375e+02f, 3.392528533935547e+01f);
  bd.angle = 6.608311176300049e+00f;
  bd.linearVelocity.Set(1.938360929489136e+00f, 7.443642616271973e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[369] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[369]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[370] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[370]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[371] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[371]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[372] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[372]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[373] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[373]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[374] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[374]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.629893493652344e+01f, 6.268812179565430e+00f);
  bd.angle = 3.250533580780029e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[375] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[375]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[376] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[376]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[377] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[377]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[378] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[378]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[379] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[379]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[380] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[380]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[381] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[381]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[382] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[382]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[383] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[383]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[384] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[384]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[385] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[385]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[386] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[386]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[387] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[387]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[388] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[388]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[389] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[389]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[390] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[390]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[391] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[391]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[392] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[392]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[393] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[393]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.868173217773438e+01f, 2.615591430664062e+02f);
  bd.angle = 1.242155313491821e+00f;
  bd.linearVelocity.Set(5.879981517791748e-01f, 1.991376280784607e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[394] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[394]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.682906494140625e+02f, -1.072465057373047e+02f);
  bd.angle = 1.321590065956116e+00f;
  bd.linearVelocity.Set(4.281259179115295e-01f, 2.031755208969116e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[395] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[395]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[396] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[396]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[397] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[397]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[398] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[398]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[399] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[399]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[400] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.000000000000000e+00f, -4.999999701976776e-01f);
    vs[1].Set(1.000000000000000e+00f, 5.000000596046448e-01f);
    vs[2].Set(-1.000000000000000e+00f, 4.999999701976776e-01f);
    vs[3].Set(-1.000000000000000e+00f, -5.000000596046448e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[400]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[401] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[401]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[402] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[402]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[403] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[403]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[404] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[404]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[405] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[405]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[406] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[406]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[407] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[407]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.113763427734375e+01f, 2.085305480957031e+02f);
  bd.angle = 1.062447309494019e+00f;
  bd.linearVelocity.Set(1.085074186325073e+00f, 1.770292639732361e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[408] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[408]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[409] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[409]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[410] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[410]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.421855621337891e+02f, -1.475029144287109e+02f);
  bd.angle = 1.044058613479137e-02f;
  bd.linearVelocity.Set(2.075368881225586e+00f, -6.453690677881241e-02f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[411] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[411]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[412] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[412]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.350247344970703e+02f, 3.000282287597656e+01f);
  bd.angle = -8.558025360107422e+00f;
  bd.linearVelocity.Set(-1.277183055877686e+00f, -1.637108683586121e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[413] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[413]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[414] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[414]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[415] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[415]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[416] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[416]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[417] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[417]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[418] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[418]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[419] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[419]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[420] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[420]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[421] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[421]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[422] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[422]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[423] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[423]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[424] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[424]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[425] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[425]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[426] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[426]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[427] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[427]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[428] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[428]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[429] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[429]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[430] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[430]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[431] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[431]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.549205780029297e+00f, 8.221052551269531e+01f);
  bd.angle = -1.035219430923462e+00f;
  bd.linearVelocity.Set(9.947767257690430e-01f, -1.823187232017517e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[432] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[432]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.194473743438721e+00f, 1.081128997802734e+02f);
  bd.angle = 2.270037829875946e-01f;
  bd.linearVelocity.Set(2.001958608627319e+00f, 5.508933067321777e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[433] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[433]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.989067077636719e+01f, -5.183407211303711e+01f);
  bd.angle = 1.770206928253174e+00f;
  bd.linearVelocity.Set(-3.264644145965576e-01f, 2.050546646118164e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[434] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[434]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.594946441650391e+02f, 3.670087432861328e+01f);
  bd.angle = -7.741104811429977e-02f;
  bd.linearVelocity.Set(2.061704397201538e+00f, -2.463750094175339e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[435] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[435]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.672319602966309e+01f, 4.092034149169922e+01f);
  bd.angle = 5.874237060546875e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[436] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[436]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[437] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[437]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.825871734619141e+02f, -4.474509811401367e+01f);
  bd.angle = -3.165958881378174e+00f;
  bd.linearVelocity.Set(-2.071866273880005e+00f, 1.367197036743164e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[438] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[438]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[439] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[439]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.235599899291992e+02f, -5.283342742919922e+01f);
  bd.angle = -5.673737525939941e+00f;
  bd.linearVelocity.Set(1.651740789413452e+00f, 1.258202791213989e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[440] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[440]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[441] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[441]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[442] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[442]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[443] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[443]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[444] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[444]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.002218704223633e+02f, -1.907215576171875e+02f);
  bd.angle = -1.413896560668945e+01f;
  bd.linearVelocity.Set(8.246833086013794e-02f, -2.074734210968018e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[445] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[445]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[446] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[446]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[447] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[447]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[448] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[448]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[449] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[449]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[450] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[450]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[451] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[451]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[452] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[452]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[453] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[453]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[454] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[454]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[455] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[455]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[456] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[456]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[457] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[457]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[458] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[458]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[459] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[459]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[460] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[460]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[461] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[461]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[462] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[462]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.924392395019531e+02f, 2.962445259094238e+01f);
  bd.angle = 5.215346813201904e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[463] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[463]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.707415771484375e+02f, 5.834646224975586e+01f);
  bd.angle = -9.186920166015625e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[464] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[464]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[465] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[465]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[466] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[466]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[467] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[467]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[468] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[468]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[469] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[469]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.962438964843750e+02f, 9.646509552001953e+01f);
  bd.angle = -1.614552688598633e+01f;
  bd.linearVelocity.Set(-1.842600584030151e+00f, 9.571541547775269e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[470] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[470]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[471] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[471]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[472] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[472]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[473] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[473]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.710532379150391e+02f, 1.389366302490234e+02f);
  bd.angle = -2.136577218770981e-01f;
  bd.linearVelocity.Set(2.045687675476074e+00f, -3.556447923183441e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[474] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[474]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[475] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[475]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[476] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[476]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.774064788818359e+02f, 1.908157653808594e+02f);
  bd.angle = -2.426622390747070e+00f;
  bd.linearVelocity.Set(-1.510030746459961e+00f, -1.425176858901978e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[477] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[477]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[478] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[478]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[479] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[479]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(7.310961151123047e+01f, -1.003027343750000e+02f);
  bd.angle = 1.172786235809326e+01f;
  bd.linearVelocity.Set(1.322907686233521e+00f, -1.600386977195740e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[480] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[480]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[481] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[481]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[482] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[482]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.996997070312500e+01f, 2.079231872558594e+02f);
  bd.angle = -3.606913089752197e-01f;
  bd.linearVelocity.Set(1.910666823387146e+00f, -8.128181695938110e-01f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[483] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[483]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[484] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[484]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[485] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[485]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[486] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[486]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[487] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[487]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[488] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[488]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[489] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[489]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.625765991210938e+02f, -2.196922302246094e+02f);
  bd.angle = -3.199779272079468e+00f;
  bd.linearVelocity.Set(-2.066074609756470e+00f, 2.066502869129181e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[490] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[490]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-3.998892211914062e+01f, 1.344463157653809e+01f);
  bd.angle = 5.397629261016846e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[491] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[491]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.015047454833984e+02f, 2.762278938293457e+01f);
  bd.angle = 1.994063496589661e+00f;
  bd.linearVelocity.Set(-7.735228538513184e-01f, 1.926910400390625e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[492] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[492]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[493] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[493]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[494] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[494]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.690371704101562e+01f, 8.215550994873047e+01f);
  bd.angle = 2.187500000000000e+01f;
  bd.linearVelocity.Set(-2.059212446212769e+00f, 2.695541381835938e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[495] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[495]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[496] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[496]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.584416656494141e+02f, 4.296952438354492e+01f);
  bd.angle = 2.778887510299683e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[497] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[497]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[498] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[498]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[499] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[499]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[500] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[500]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[501] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[501]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[502] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[502]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[503] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[503]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[504] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[504]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[505] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[505]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[506] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[506]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[507] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[507]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[508] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[508]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[509] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[509]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[510] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[510]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[511] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[511]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[512] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[512]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[513] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[513]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[514] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[514]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[515] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[515]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[516] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[516]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[517] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[517]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[518] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[518]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[519] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[519]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[520] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[520]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[521] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[521]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[522] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[522]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[523] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[523]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[524] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[524]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[525] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[525]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[526] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[526]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[527] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[527]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[528] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[528]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[529] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[529]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[530] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[530]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[531] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[531]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[532] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[532]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[533] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[533]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[534] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[534]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[535] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[535]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[536] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[536]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[537] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[537]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[538] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[538]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[539] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[539]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[540] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[540]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[541] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[541]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[542] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[542]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[543] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[543]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[544] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[544]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[545] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[545]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[546] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[546]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[547] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[547]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[548] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[548]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[549] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[549]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[550] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[550]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[551] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[551]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[552] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[552]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[553] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[553]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[554] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[554]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[555] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[555]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[556] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[556]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[557] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[557]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[558] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[558]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[559] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[559]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[560] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[560]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[561] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[561]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[562] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[562]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[563] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[563]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[564] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[564]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[565] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[565]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[566] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[566]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[567] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[567]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[568] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[568]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[569] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[569]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[570] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[570]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[571] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[571]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[572] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[572]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[573] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[573]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[574] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[574]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[575] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[575]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[576] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[576]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[577] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[577]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[578] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[578]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[579] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[579]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[580] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[580]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[581] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[581]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[582] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[582]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[583] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[583]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[584] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[584]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[585] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[585]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[586] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[586]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[587] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[587]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[588] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[588]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[589] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[589]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[590] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[590]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[591] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[591]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[592] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[592]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[593] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[593]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[594] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[594]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[595] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[595]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[596] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[596]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[597] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[597]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[598] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[598]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[599] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[599]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[600] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[600]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[601] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[601]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[602] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[602]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[603] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[603]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[604] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[604]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[605] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[605]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[606] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[606]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[607] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[607]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[608] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[608]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[609] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[609]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[610] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[610]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[611] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[611]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[612] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[612]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[613] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[613]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[614] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[614]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[615] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[615]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[616] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[616]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[617] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[617]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[618] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[618]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[619] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[619]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[620] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[620]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[621] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[621]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[622] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[622]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[623] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[623]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[624] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[624]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[625] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[625]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[626] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[626]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[627] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[627]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[628] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[628]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[629] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[629]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[630] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 3.000000119209290e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[630]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[631] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[631]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[632] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[632]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[633] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[633]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[634] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[634]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[635] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[635]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[636] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[636]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[637] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[637]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[638] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[638]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-1.584633935181046e-08f, -1.462908301164134e-07f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[639] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[639]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[640] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[640]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.051172027587891e+02f, -1.330498352050781e+02f);
  bd.angle = 2.062103748321533e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[641] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[641]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[642] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[642]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[643] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[643]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[644] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[644]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[645] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[645]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[646] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[646]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[647] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[647]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[648] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[648]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.140968475341797e+02f, -1.126800842285156e+02f);
  bd.angle = 1.245644807815552e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[649] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[649]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[650] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[650]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[651] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[651]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[652] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[652]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[653] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[653]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[654] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[654]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[655] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[655]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[656] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[656]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[657] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[657]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[658] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[658]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[659] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[659]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[660] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[660]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[661] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[661]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[662] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[662]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[663] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[663]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-9.553115069866180e-02f, 5.918254852294922e-01f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[664] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[664]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(2.931351065635681e-01f, 8.250128030776978e-01f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[665] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[665]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[666] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[666]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[667] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[667]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[668] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[668]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[669] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[669]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[670] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[670]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[671] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[671]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[672] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[672]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[673] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[673]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[674] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[674]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[675] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[675]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[676] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[676]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[677] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[677]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[678] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[678]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[679] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[679]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[680] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[680]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[681] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[681]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[682] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[682]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[683] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[683]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[684] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[684]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[685] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[685]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[686] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[686]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[687] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[687]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.678260498046875e+02f, 5.905332946777344e+01f);
  bd.angle = -9.186918258666992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[688] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[688]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[689] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[689]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[690] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[690]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[691] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[691]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[692] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[692]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[693] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[693]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[694] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[694]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(9.109466552734375e+00f, -1.068964958190918e+01f);
  bd.angle = 4.811484336853027e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[695] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[695]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[696] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[696]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[697] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[697]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[698] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[698]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[699] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[699]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[700] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[700]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[701] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[701]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[702] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[702]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[703] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[703]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.043156204223633e+02f, 2.210369110107422e+01f);
  bd.angle = 2.487318754196167e+00f;
  bd.linearVelocity.Set(-1.593768000602722e+00f, 1.330901026725769e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[704] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[704]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[705] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[705]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[706] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[706]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[707] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[707]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[708] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[708]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[709] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[709]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.598040466308594e+02f, 6.725348663330078e+01f);
  bd.angle = -1.920034408569336e+00f;
  bd.linearVelocity.Set(-6.288871169090271e-01f, -1.978843688964844e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[710] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[710]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.168492279052734e+02f, -2.395270538330078e+02f);
  bd.angle = 5.327949523925781e+00f;
  bd.linearVelocity.Set(1.268272399902344e+00f, -1.644023656845093e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[711] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[711]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[712] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[712]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[713] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[713]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[714] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[714]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[715] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[715]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[716] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[716]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[717] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[717]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[718] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[718]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[719] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[719]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[720] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[720]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[721] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[721]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[722] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[722]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[723] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[723]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[724] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[724]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[725] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[725]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[726] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[726]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.411428070068359e+01f, 7.967768907546997e-01f);
  bd.angle = 3.727199792861938e+00f;
  bd.linearVelocity.Set(-1.776551961898804e+00f, -1.074795246124268e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[727] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[727]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[728] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[728]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.846100921630859e+02f, 1.711851501464844e+02f);
  bd.angle = 2.938817739486694e-01f;
  bd.linearVelocity.Set(1.960667967796326e+00f, 6.834489703178406e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[729] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[729]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.420133972167969e+02f, -4.298645782470703e+01f);
  bd.angle = -1.355133414268494e+00f;
  bd.linearVelocity.Set(3.597459793090820e-01f, -2.044970512390137e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[730] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[730]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[731] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[731]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[732] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[732]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[733] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[733]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.116393432617188e+02f, -1.983116760253906e+02f);
  bd.angle = -7.197052001953125e+00f;
  bd.linearVelocity.Set(1.335183024406433e+00f, -1.590159654617310e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[734] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[734]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[735] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[735]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[736] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[736]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[737] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[737]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[738] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[738]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[739] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[739]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[740] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[740]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[741] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[741]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[742] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[742]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[743] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[743]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[744] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[744]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[745] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[745]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[746] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[746]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.415546264648438e+02f, -1.017191009521484e+02f);
  bd.angle = 4.045852184295654e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[747] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[747]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[748] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[748]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-1.940618455410004e-01f, -4.077156186103821e-01f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[749] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.000000000000000e+00f, -4.999999701976776e-01f);
    vs[1].Set(1.000000000000000e+00f, 5.000000596046448e-01f);
    vs[2].Set(-1.000000000000000e+00f, 4.999999701976776e-01f);
    vs[3].Set(-1.000000000000000e+00f, -5.000000596046448e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[749]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[750] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[750]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.685329132080078e+02f, 6.196885681152344e+01f);
  bd.angle = -9.186918258666992e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 2.000000000000000e+00f;
  bd.angularDamping = 2.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[751] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(4);
    fd.filter.maskBits = uint16(3847);
    fd.filter.groupIndex = int16(-3101);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(1.500000119209290e+00f, -1.499999880790710e+00f);
    vs[1].Set(1.499999880790710e+00f, 1.500000119209290e+00f);
    vs[2].Set(-1.500000119209290e+00f, 1.499999880790710e+00f);
    vs[3].Set(-1.499999880790710e+00f, -1.500000119209290e+00f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[751]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[752] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[752]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[753] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[753]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[754] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[754]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[755] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[755]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.758417510986328e+01f, -9.130118370056152e+00f);
  bd.angle = -2.649892568588257e+00f;
  bd.linearVelocity.Set(-2.724994182586670e+00f, -1.457782149314880e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[756] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[756]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.834048767089844e+02f, 2.737337112426758e+01f);
  bd.angle = -3.944443941116333e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[757] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[757]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[758] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[758]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[759] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[759]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.635373840332031e+02f, -6.575928497314453e+01f);
  bd.angle = 1.911864042282104e+00f;
  bd.linearVelocity.Set(-7.751699686050415e-01f, 1.926248431205750e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[760] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[760]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[761] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[761]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[762] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[762]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[763] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[763]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[764] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[764]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[765] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[765]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[766] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[766]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[767] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[767]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[768] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[768]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[769] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[769]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[770] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[770]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[771] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[771]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[772] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[772]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[773] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[773]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[774] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[774]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[775] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[775]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[776] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[776]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[777] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.250000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[777]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[778] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[778]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[779] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[779]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.300706481933594e+01f, -3.944334411621094e+01f);
  bd.angle = 1.827294707298279e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[780] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[780]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[781] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[781]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[782] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[782]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.731906433105469e+02f, 9.589968109130859e+01f);
  bd.angle = 4.156223773956299e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[783] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[783]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[784] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[784]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[785] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[785]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[786] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[786]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[787] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[787]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[788] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[788]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[789] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[789]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[790] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[790]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.578483581542969e+01f, -6.858233642578125e+01f);
  bd.angle = 1.210091590881348e+00f;
  bd.linearVelocity.Set(6.515359878540039e-01f, 1.971502542495728e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[791] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[791]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[792] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[792]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[793] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[793]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[794] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[794]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[795] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[795]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[796] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[796]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[797] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[797]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[798] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[798]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[799] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[799]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[800] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[800]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[801] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[801]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[802] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[802]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[803] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[803]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[804] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[804]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[805] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[805]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[806] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[806]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.634122619628906e+02f, 2.087739715576172e+02f);
  bd.angle = 1.415667772293091e+00f;
  bd.linearVelocity.Set(4.057037234306335e-01f, 2.036351203918457e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[807] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[807]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[808] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[808]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[809] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[809]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[810] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[810]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[811] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[811]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[812] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[812]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.261199951171875e+02f, 1.111298522949219e+02f);
  bd.angle = -2.438004970550537e+00f;
  bd.linearVelocity.Set(-1.526154875755310e+00f, -1.407896757125854e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[813] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[813]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.665603942871094e+02f, -1.439822845458984e+02f);
  bd.angle = 3.895262718200684e+00f;
  bd.linearVelocity.Set(-1.549764633178711e+00f, -1.382838606834412e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[814] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[814]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[815] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[815]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.430155029296875e+02f, 1.778248214721680e+01f);
  bd.angle = 5.408478736877441e+00f;
  bd.linearVelocity.Set(1.396414160728455e+00f, -1.536668062210083e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[816] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[816]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.083156738281250e+02f, -2.479262390136719e+02f);
  bd.angle = -3.039595127105713e+00f;
  bd.linearVelocity.Set(-2.055022954940796e+00f, -2.969880998134613e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[817] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[817]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[818] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[818]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-1.502657890319824e+01f, 3.696808624267578e+01f);
  bd.angle = -2.234021425247192e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[819] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[819]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[820] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[820]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[821] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[821]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[822] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[822]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[823] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[823]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.674777832031250e+02f, 6.694844055175781e+01f);
  bd.angle = 3.230075836181641e+00f;
  bd.linearVelocity.Set(-2.069418668746948e+00f, -1.697875261306763e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[824] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[824]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[825] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[825]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[826] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[826]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[827] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[827]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[828] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[828]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.496859312057495e+00f, 2.093622741699219e+02f);
  bd.angle = 1.542997658252716e-01f;
  bd.linearVelocity.Set(2.036686658859253e+00f, 4.040157794952393e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[829] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[829]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[830] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[830]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[831] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[831]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[832] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[832]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.751746368408203e+02f, -1.501608886718750e+02f);
  bd.angle = -5.160402297973633e+00f;
  bd.linearVelocity.Set(8.209654092788696e-01f, 1.907180547714233e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[833] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[833]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.954603672027588e+00f, -1.044028625488281e+02f);
  bd.angle = 9.305173873901367e+00f;
  bd.linearVelocity.Set(-2.070070028305054e+00f, 1.622140109539032e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[834] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[834]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[835] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[835]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[836] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[836]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[837] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[837]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.653437347412109e+02f, 2.155558319091797e+02f);
  bd.angle = 1.896698474884033e+00f;
  bd.linearVelocity.Set(-5.825439095497131e-01f, 1.992979407310486e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[838] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[838]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.990708923339844e+01f, 2.908701477050781e+02f);
  bd.angle = -2.979816913604736e+00f;
  bd.linearVelocity.Set(-2.033609628677368e+00f, -4.192300736904144e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[839] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[839]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[840] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[840]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[841] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[841]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[842] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[842]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[843] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[843]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[844] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[844]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.549889221191406e+02f, 6.361142730712891e+01f);
  bd.angle = -1.011704325675964e+00f;
  bd.linearVelocity.Set(1.173468947410583e+00f, -1.712977647781372e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[845] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[845]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[846] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[846]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[847] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[847]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.728285980224609e+01f, -9.320188140869141e+01f);
  bd.angle = -4.542538166046143e+00f;
  bd.linearVelocity.Set(-2.664879560470581e-01f, 2.059303522109985e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[848] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[848]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.577880144119263e+00f, -2.223113861083984e+02f);
  bd.angle = -3.378349065780640e+00f;
  bd.linearVelocity.Set(-2.036927938461304e+00f, 4.027988910675049e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[849] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[849]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[850] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[850]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[851] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[851]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[852] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[852]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[853] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[853]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[854] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[854]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[855] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[855]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[856] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[856]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[857] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[857]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[858] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[858]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[859] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[859]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[860] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[860]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.090762233734131e+01f, 1.881985855102539e+01f);
  bd.angle = 2.083150863647461e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[861] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[861]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.811854858398438e+02f, -2.352387847900391e+02f);
  bd.angle = -7.676212787628174e+00f;
  bd.linearVelocity.Set(2.822769284248352e-01f, -2.057139873504639e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[862] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[862]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.630125427246094e+01f, -1.546828308105469e+02f);
  bd.angle = 2.181351333856583e-01f;
  bd.linearVelocity.Set(2.044075012207031e+00f, 3.648005723953247e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[863] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[863]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[864] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[864]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.702857666015625e+02f, 2.264661102294922e+02f);
  bd.angle = -1.822462439537048e+00f;
  bd.linearVelocity.Set(-6.000938415527344e-01f, -1.987764716148376e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[865] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[865]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[866] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[866]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[867] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[867]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[868] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[868]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.120367355346680e+02f, 2.560028076171875e+02f);
  bd.angle = -4.365971565246582e+00f;
  bd.linearVelocity.Set(-7.842992544174194e-01f, 1.922715187072754e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[869] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[869]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[870] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[870]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[871] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[871]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[872] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[872]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[873] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[873]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[874] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[874]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[875] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[875]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[876] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[876]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[877] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[877]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[878] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[878]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[879] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[879]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[880] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[880]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[881] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[881]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.208113708496094e+02f, -7.595838165283203e+01f);
  bd.angle = 5.482930660247803e+00f;
  bd.linearVelocity.Set(1.383144617080688e+00f, -1.548622846603394e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[882] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[882]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[883] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[883]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[884] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[884]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[885] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[885]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.469418029785156e+02f, 8.850904083251953e+01f);
  bd.angle = -2.582585334777832e+00f;
  bd.linearVelocity.Set(-2.642909526824951e+00f, -1.650816679000854e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[886] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[886]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[887] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[887]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[888] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[888]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[889] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[889]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[890] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[890]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[891] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[891]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[892] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[892]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[893] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[893]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[894] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[894]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[895] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[895]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[896] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[896]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[897] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[897]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.118231964111328e+01f, 1.276782989501953e+02f);
  bd.angle = 1.215135455131531e+00f;
  bd.linearVelocity.Set(6.415871381759644e-01f, 1.974763751029968e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[898] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[898]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[899] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[899]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[900] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[900]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[901] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[901]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[902] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[902]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[903] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[903]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[904] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.000000238418579e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[904]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[905] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[905]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.448224639892578e+01f, -2.635655822753906e+02f);
  bd.angle = -1.053820729255676e+00f;
  bd.linearVelocity.Set(1.100305080413818e+00f, -1.760866403579712e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[906] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[906]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[907] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[907]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[908] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[908]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[909] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[909]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.109890365600586e+01f, 7.797305297851562e+01f);
  bd.angle = -6.180182933807373e+00f;
  bd.linearVelocity.Set(2.054723501205444e+00f, 2.990529239177704e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[910] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[910]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[911] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[911]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.899578247070312e+02f, -1.110664672851562e+02f);
  bd.angle = 8.959437370300293e+00f;
  bd.linearVelocity.Set(-1.815308809280396e+00f, 1.007956266403198e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[912] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[912]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[913] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[913]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[914] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[914]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[915] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[915]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.054722137451172e+02f, 1.836649322509766e+02f);
  bd.angle = 8.614974975585938e+00f;
  bd.linearVelocity.Set(-1.493139266967773e+00f, 1.442863821983337e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[916] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[916]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[917] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[917]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.521257781982422e+01f, -1.666092681884766e+02f);
  bd.angle = 1.815596938133240e+00f;
  bd.linearVelocity.Set(-4.191709458827972e-01f, 2.033621788024902e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[918] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[918]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.671799316406250e+02f, -9.664080047607422e+01f);
  bd.angle = -1.021385490894318e-01f;
  bd.linearVelocity.Set(2.054981708526611e+00f, -2.972773313522339e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[919] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[919]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-5.654821395874023e+01f, -1.484177246093750e+02f);
  bd.angle = 1.568174719810486e+00f;
  bd.linearVelocity.Set(9.416718780994415e-02f, 2.665078639984131e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[920] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[920]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.185781383514404e+01f, 3.345864772796631e+00f);
  bd.angle = 3.155025959014893e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[921] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[921]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[922] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[922]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[923] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[923]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[924] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[924]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[925] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[925]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[926] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[926]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[927] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[927]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[928] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[928]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[929] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[929]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[930] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[930]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[931] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[931]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[932] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[932]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[933] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[933]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[934] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[934]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[935] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[935]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[936] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[936]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[937] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[937]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[938] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[938]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[939] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[939]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[940] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[940]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[941] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[941]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.368116149902344e+02f, 1.242303466796875e+02f);
  bd.angle = -4.754806160926819e-01f;
  bd.linearVelocity.Set(1.883914709091187e+00f, -8.730337023735046e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[942] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[942]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.547980346679688e+02f, 5.472289657592773e+01f);
  bd.angle = 3.966568470001221e+00f;
  bd.linearVelocity.Set(-1.344442129135132e+00f, -1.582339167594910e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[943] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[943]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[944] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[944]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.271125411987305e+01f, 2.649794311523438e+02f);
  bd.angle = -2.229710578918457e+00f;
  bd.linearVelocity.Set(-1.202025890350342e+00f, -1.693060874938965e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[945] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[945]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-7.608835601806641e+01f, -2.092521057128906e+02f);
  bd.angle = -8.262184262275696e-01f;
  bd.linearVelocity.Set(1.469254374504089e+00f, -1.467178583145142e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[946] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[946]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[947] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[947]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[948] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[948]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[949] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[949]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[950] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[950]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[951] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[951]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[952] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[952]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[953] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[953]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[954] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[954]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[955] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[955]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[956] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[956]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[957] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[957]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[958] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[958]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[959] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[959]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[960] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[960]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[961] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[961]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[962] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[962]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[963] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[963]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[964] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[964]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[965] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[965]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[966] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[966]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[967] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[967]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[968] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[968]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[969] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[969]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.712034606933594e+02f, 1.845796966552734e+02f);
  bd.angle = 4.213660717010498e+00f;
  bd.linearVelocity.Set(-1.064819693565369e+00f, -1.782919168472290e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[970] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[970]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[971] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[971]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[972] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[972]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[973] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[973]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[974] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[974]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[975] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[975]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[976] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[976]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[977] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[977]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[978] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[978]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[979] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[979]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[980] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[980]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[981] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[981]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[982] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[982]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[983] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[983]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[984] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[984]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.426423187255859e+02f, -1.641254577636719e+02f);
  bd.angle = 1.950780034065247e+00f;
  bd.linearVelocity.Set(-7.431894540786743e-01f, 1.939248442649841e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[985] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[985]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.366499328613281e+01f, 2.380491065979004e+01f);
  bd.angle = 1.581682682037354e+01f;
  bd.linearVelocity.Set(-2.052935361862183e+00f, -3.110908269882202e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[986] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[986]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.830968666076660e+01f, 2.760192565917969e+02f);
  bd.angle = 1.291582703590393e+00f;
  bd.linearVelocity.Set(6.546171903610229e-01f, 1.970481634140015e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[987] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[987]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[988] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[988]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.629279174804688e+02f, -1.137451248168945e+02f);
  bd.angle = -1.754466819763184e+01f;
  bd.linearVelocity.Set(4.619956612586975e-01f, 2.024322509765625e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[989] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[989]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[990] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[990]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[991] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[991]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(4.911553192138672e+01f, 2.704633712768555e+01f);
  bd.angle = 3.981428384780884e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[992] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[992]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.386451416015625e+02f, -3.194921493530273e+01f);
  bd.angle = -1.142340302467346e+00f;
  bd.linearVelocity.Set(7.835108637809753e-01f, -1.922870993614197e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[993] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[993]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[994] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[994]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[995] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[995]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[996] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[996]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[997] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[997]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.091405792236328e+02f, -1.732092285156250e+02f);
  bd.angle = 4.596870422363281e+00f;
  bd.linearVelocity.Set(-1.534940302371979e-01f, -2.070690870285034e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[998] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[998]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[999] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[999]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1000] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1000]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1001] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1001]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1002] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1002]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1003] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1003]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1004] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1004]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1005] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1005]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1006] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1006]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1007] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1007]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1008] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1008]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1009] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1009]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1010] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(8.999999761581421e-01f, -4.499999582767487e-01f);
    vs[1].Set(8.999999761581421e-01f, 4.500000178813934e-01f);
    vs[2].Set(-8.999999761581421e-01f, 4.499999582767487e-01f);
    vs[3].Set(-8.999999761581421e-01f, -4.500000178813934e-01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1010]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1011] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1011]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1012] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1012]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1013] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1013]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1014] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1014]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1015] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1015]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1016] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1016]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1017] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1017]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1018] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1018]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1019] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1019]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1020] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1020]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1021] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1021]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1022] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1022]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1023] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1023]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1024] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1024]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1025] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1025]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1026] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1026]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1027] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1027]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1028] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1028]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1029] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1029]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1030] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1030]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1031] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1031]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1032] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1032]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1033] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1033]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1034] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1034]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1035] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1035]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1036] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1036]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1037] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1037]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1038] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1038]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1039] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1039]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1040] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1040]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1041] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1041]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1042] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1042]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1043] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1043]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1044] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1044]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1045] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1045]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1046] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1046]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1047] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1047]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1048] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1048]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1049] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1049]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1050] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1050]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1051] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1051]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1052] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1052]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1053] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1053]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-7.996739196777344e+01f, -2.438712463378906e+02f);
  bd.angle = -4.537856280803680e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1054] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1054]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.267661666870117e+01f, 1.059537734985352e+02f);
  bd.angle = 4.143429696559906e-01f;
  bd.linearVelocity.Set(1.864348769187927e+00f, 9.140867590904236e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1055] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1055]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.798488311767578e+02f, -1.211408710479736e+01f);
  bd.angle = 3.231439113616943e+00f;
  bd.linearVelocity.Set(-2.073948860168457e+00f, -1.002902984619141e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1056] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1056]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.169717712402344e+02f, -9.292590332031250e+01f);
  bd.angle = 6.375387907028198e-01f;
  bd.linearVelocity.Set(1.615749120712280e+00f, 1.304099798202515e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1057] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1057]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1058] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1058]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1059] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1059]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.598289794921875e+02f, 6.561999511718750e+01f);
  bd.angle = -4.290279865264893e+00f;
  bd.linearVelocity.Set(-9.285604357719421e-01f, 1.857174396514893e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1060] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1060]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.177088623046875e+02f, -1.734071044921875e+02f);
  bd.angle = -4.483070373535156e+00f;
  bd.linearVelocity.Set(-5.555255413055420e-01f, 2.000678300857544e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1061] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1061]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1062] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1062]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.028436851501465e+01f, -2.322617492675781e+02f);
  bd.angle = 1.447615146636963e+00f;
  bd.linearVelocity.Set(3.391747474670410e-01f, 2.048638820648193e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1063] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1063]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.716004791259766e+02f, -6.231539916992188e+01f);
  bd.angle = -8.036347627639771e-01f;
  bd.linearVelocity.Set(1.377901554107666e+00f, -1.553289651870728e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1064] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1064]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1065] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1065]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-8.213320922851562e+01f, 8.404651641845703e+01f);
  bd.angle = 1.659662008285522e+00f;
  bd.linearVelocity.Set(-9.825559705495834e-02f, 2.074046134948730e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1066] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1066]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.339240264892578e+01f, 1.296316528320312e+02f);
  bd.angle = 2.454695701599121e+00f;
  bd.linearVelocity.Set(-1.549439907073975e+00f, 1.382229208946228e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1067] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1067]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.397166442871094e+01f, -1.070788421630859e+02f);
  bd.angle = 3.108795583248138e-01f;
  bd.linearVelocity.Set(2.001505374908447e+00f, 5.525376796722412e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1068] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1068]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1069] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1069]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-5.984309387207031e+01f, 1.821397857666016e+02f);
  bd.angle = -2.967059612274170e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1070] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1070]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1071] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1071]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1072] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1072]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1073] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1073]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1074] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1074]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1075] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1075]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1076] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1076]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1077] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1077]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1078] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1078]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1079] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1079]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1080] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1080]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1081] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1081]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1082] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1082]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(2.677105712890625e+02f, 9.759629249572754e+00f);
  bd.angle = 1.151917338371277e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1083] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1083]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(-nanf, -nanf);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(0);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1084] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.500000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1084]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1085] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1085]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1086] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1086]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1087] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1087]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1088] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1088]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1089] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1089]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1090] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1090]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1091] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1091]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1092] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1092]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1093] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1093]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1094] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1094]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1095] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1095]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1096] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1096]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(1);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1097] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1097]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1098] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1098]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1099] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1099]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.487266540527344e+01f, -8.136995697021484e+01f);
  bd.angle = -2.975838184356689e+00f;
  bd.linearVelocity.Set(-2.060371160507202e+00f, -2.572796940803528e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1100] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1100]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.998847961425781e+02f, 2.539715766906738e-01f);
  bd.angle = -5.518921375274658e+00f;
  bd.linearVelocity.Set(1.437972784042358e+00f, 1.497850418090820e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1101] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1101]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.068457794189453e+01f, 1.637701873779297e+02f);
  bd.angle = 2.938127040863037e+00f;
  bd.linearVelocity.Set(-2.014369964599609e+00f, 5.036221742630005e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1102] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1102]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.818944168090820e+01f, 2.606986389160156e+02f);
  bd.angle = 2.329675197601318e+00f;
  bd.linearVelocity.Set(-1.490085363388062e+00f, 1.446017980575562e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1103] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1103]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.189920349121094e+02f, 2.467732048034668e+01f);
  bd.angle = -6.947322845458984e+00f;
  bd.linearVelocity.Set(1.626527547836304e+00f, -1.290631532669067e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1104] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1104]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.632527923583984e+01f, -8.070670318603516e+01f);
  bd.angle = -3.595769405364990e+00f;
  bd.linearVelocity.Set(-1.826468229293823e+00f, 9.876056909561157e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1105] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1105]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.411948547363281e+02f, -1.349605083465576e+01f);
  bd.angle = -2.632310390472412e+00f;
  bd.linearVelocity.Set(-1.853333830833435e+00f, -9.362028837203979e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1106] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1106]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.718520927429199e+01f, 1.870744934082031e+02f);
  bd.angle = 1.780029869079590e+01f;
  bd.linearVelocity.Set(9.588436484336853e-01f, -1.841722011566162e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1107] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1107]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.767739868164062e+01f, 1.336208953857422e+02f);
  bd.angle = -1.596866607666016e+00f;
  bd.linearVelocity.Set(-1.063005775213242e-01f, -2.074298381805420e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1108] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1108]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.486735382080078e+02f, 6.310213470458984e+01f);
  bd.angle = -2.605722546577454e-01f;
  bd.linearVelocity.Set(1.982341527938843e+00f, -6.177729964256287e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1109] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1109]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.734554443359375e+02f, 9.714353179931641e+01f);
  bd.angle = -3.114780485630035e-01f;
  bd.linearVelocity.Set(2.001161336898804e+00f, -5.538871288299561e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1110] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1110]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.180438423156738e+01f, -2.769093017578125e+02f);
  bd.angle = 1.103759527206421e+00f;
  bd.linearVelocity.Set(1.011034369468689e+00f, 1.813596129417419e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1111] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1111]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.817638015747070e+01f, -2.385850830078125e+02f);
  bd.angle = -1.856797575950623e+00f;
  bd.linearVelocity.Set(-6.679769754409790e-01f, -1.965992927551270e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1112] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1112]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-6.436049652099609e+01f, -1.924228057861328e+02f);
  bd.angle = -5.849539041519165e-01f;
  bd.linearVelocity.Set(1.777253866195679e+00f, -1.073634147644043e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1113] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1113]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.156461639404297e+02f, 5.633472919464111e+00f);
  bd.angle = 7.556271553039551e-01f;
  bd.linearVelocity.Set(1.450864195823669e+00f, 1.485370635986328e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1114] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1114]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.496789703369141e+02f, 2.050662536621094e+02f);
  bd.angle = 2.834995269775391e+00f;
  bd.linearVelocity.Set(-2.003852844238281e+00f, 5.439623594284058e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1115] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1115]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.445805931091309e+01f, -2.367928924560547e+02f);
  bd.angle = 8.732515573501587e-01f;
  bd.linearVelocity.Set(1.266516208648682e+00f, 1.645374774932861e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1116] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1116]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.932048187255859e+02f, 1.453334655761719e+02f);
  bd.angle = -4.655177116394043e+00f;
  bd.linearVelocity.Set(-3.256644308567047e-02f, 2.076117038726807e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1117] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1117]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.931907958984375e+02f, 2.222115135192871e+01f);
  bd.angle = -7.462340593338013e-01f;
  bd.linearVelocity.Set(1.581783294677734e+00f, -1.345095872879028e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1118] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1118]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.365939331054688e+01f, 9.871672058105469e+01f);
  bd.angle = 6.783669471740723e+00f;
  bd.linearVelocity.Set(1.796654462814331e+00f, 1.042135477066040e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1119] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1119]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.073715667724609e+02f, -1.017819213867188e+02f);
  bd.angle = -1.574491882324219e+01f;
  bd.linearVelocity.Set(-2.076350688934326e+00f, -9.491825476288795e-03f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1120] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1120]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.719577026367188e+02f, 1.589451751708984e+02f);
  bd.angle = 4.105689525604248e+00f;
  bd.linearVelocity.Set(-1.253658533096313e+00f, -1.655192375183105e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1121] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1121]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.137241058349609e+02f, -7.435245513916016e+00f);
  bd.angle = -4.067453861236572e+00f;
  bd.linearVelocity.Set(-1.316014170646667e+00f, 1.606059789657593e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1122] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1122]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.882738494873047e+02f, -1.445124664306641e+02f);
  bd.angle = -1.082284927368164e+01f;
  bd.linearVelocity.Set(-2.716352343559265e-01f, 2.058527469635010e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1123] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1123]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.048577880859375e+01f, -1.796244659423828e+02f);
  bd.angle = 1.080778121948242e+00f;
  bd.linearVelocity.Set(8.885734081268311e-01f, 1.864175796508789e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1124] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1124]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(3.859816741943359e+01f, -1.956983337402344e+02f);
  bd.angle = -8.722802162170410e+00f;
  bd.linearVelocity.Set(-1.528430819511414e+00f, -1.405429601669312e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1125] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1125]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.216638183593750e+02f, 2.461799812316895e+01f);
  bd.angle = -1.552772283554077e+00f;
  bd.linearVelocity.Set(8.960702270269394e-02f, -2.075086593627930e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1126] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1126]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.695299072265625e+02f, -6.845552825927734e+01f);
  bd.angle = -4.243014812469482e+00f;
  bd.linearVelocity.Set(-9.857463836669922e-01f, 1.828200578689575e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1127] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1127]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.241562652587891e+02f, 3.256483459472656e+01f);
  bd.angle = -2.296153068542480e+00f;
  bd.linearVelocity.Set(-1.440783381462097e+00f, -1.495146989822388e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1128] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1128]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-2.348812561035156e+02f, 4.028532028198242e+01f);
  bd.angle = -6.452110767364502e+00f;
  bd.linearVelocity.Set(2.059544801712036e+00f, -2.638117969036102e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1129] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1129]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.222231445312500e+02f, 1.858391113281250e+02f);
  bd.angle = -6.646207809448242e+00f;
  bd.linearVelocity.Set(1.969986915588379e+00f, -6.561042666435242e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1130] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1130]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.032193756103516e+01f, 9.655335235595703e+01f);
  bd.angle = 1.653143644332886e+00f;
  bd.linearVelocity.Set(-8.473420143127441e-02f, 2.074642658233643e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1131] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1131]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.278676147460938e+02f, -1.572046356201172e+02f);
  bd.angle = -5.215641975402832e+00f;
  bd.linearVelocity.Set(1.047106146812439e+00f, 1.793761968612671e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1132] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1132]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(6.755034637451172e+01f, -1.010020523071289e+02f);
  bd.angle = 8.041111230850220e-01f;
  bd.linearVelocity.Set(1.377161502838135e+00f, 1.553945779800415e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1133] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1133]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.957770538330078e+01f, 4.123091506958008e+01f);
  bd.angle = -4.057829856872559e+00f;
  bd.linearVelocity.Set(-1.241154551506042e+00f, 1.665097713470459e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1134] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1134]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.193807525634766e+02f, -7.406826019287109e+01f);
  bd.angle = -7.076220989227295e+00f;
  bd.linearVelocity.Set(1.517121315002441e+00f, -1.417626380920410e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1135] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1135]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.305889892578125e+01f, 1.594969329833984e+02f);
  bd.angle = -5.314484119415283e+00f;
  bd.linearVelocity.Set(1.246013522148132e+00f, 1.660960555076599e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1136] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1136]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.222053070068359e+02f, 1.060556125640869e+01f);
  bd.angle = 5.453152656555176e-01f;
  bd.linearVelocity.Set(1.760303854942322e+00f, 1.101973414421082e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1137] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1137]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-3.197669219970703e+01f, 2.949342346191406e+02f);
  bd.angle = -2.077829837799072e+00f;
  bd.linearVelocity.Set(-9.320325851440430e-01f, -1.855434179306030e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1138] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1138]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-4.785906791687012e+00f, -1.890838775634766e+02f);
  bd.angle = 9.496603012084961e-01f;
  bd.linearVelocity.Set(1.132515549659729e+00f, 1.719149351119995e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1139] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1139]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1140] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1140]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.774745788574219e+02f, 1.027723617553711e+02f);
  bd.angle = -7.456993103027344e+00f;
  bd.linearVelocity.Set(8.816189765930176e-01f, -1.879912137985229e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1141] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1141]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(5.157814941406250e+02f, 3.191391944885254e+01f);
  bd.angle = -7.361449241638184e+00f;
  bd.linearVelocity.Set(9.562868475914001e-01f, -1.843510389328003e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1142] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1142]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.026561660766602e+02f, 2.374445495605469e+02f);
  bd.angle = 1.085176086425781e+01f;
  bd.linearVelocity.Set(-3.826205134391785e-01f, -2.040818929672241e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1143] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1143]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.837656250000000e+02f, 1.966475982666016e+02f);
  bd.angle = 1.749785423278809e+00f;
  bd.linearVelocity.Set(-2.845240235328674e-01f, 2.056785821914673e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1144] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1144]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.701887130737305e+01f, 2.317775878906250e+02f);
  bd.angle = 1.101932525634766e+00f;
  bd.linearVelocity.Set(9.123896360397339e-01f, 1.865626096725464e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1145] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1145]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.313948974609375e+02f, -1.137981796264648e+02f);
  bd.angle = -2.283283233642578e+00f;
  bd.linearVelocity.Set(-1.421422362327576e+00f, -1.513565301895142e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1146] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1146]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(9.231246185302734e+01f, -4.974567794799805e+01f);
  bd.angle = -7.989100217819214e-01f;
  bd.linearVelocity.Set(1.385225057601929e+00f, -1.546762228012085e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1147] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1147]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-9.550807952880859e+01f, -1.460578155517578e+02f);
  bd.angle = -5.891367912292480e+00f;
  bd.linearVelocity.Set(1.884445905685425e+00f, 8.718859553337097e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1148] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1148]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.242586975097656e+02f, 1.215093002319336e+02f);
  bd.angle = 3.349482059478760e+00f;
  bd.linearVelocity.Set(-2.020885229110718e+00f, -4.796205461025238e-01f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1149] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1149]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.368377380371094e+02f, 1.215313796997070e+02f);
  bd.angle = -5.702702522277832e+00f;
  bd.linearVelocity.Set(1.687486410140991e+00f, 1.209839105606079e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1150] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1150]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(1.601155548095703e+02f, 1.274876785278320e+02f);
  bd.angle = -3.808460235595703e+00f;
  bd.linearVelocity.Set(-1.576812505722046e+00f, 1.350919723510742e+00f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1151] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1151]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(8.787994384765625e+01f, 2.185801239013672e+02f);
  bd.angle = -3.503955364227295e+00f;
  bd.linearVelocity.Set(-1.909305930137634e+00f, 8.160101175308228e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1152] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1152]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.091780776977539e+02f, 1.212492828369141e+02f);
  bd.angle = -3.893766641616821e+00f;
  bd.linearVelocity.Set(-1.573765277862549e+00f, 1.354468107223511e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1153] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1153]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(2.277945861816406e+02f, -1.949567108154297e+02f);
  bd.angle = -3.953144550323486e+00f;
  bd.linearVelocity.Set(-1.437678098678589e+00f, 1.315167903900146e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1154] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1154]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.358738250732422e+02f, 1.095448303222656e+02f);
  bd.angle = 1.067876815795898e+00f;
  bd.linearVelocity.Set(9.244011640548706e-01f, 1.859251379966736e+00f);
  bd.angularVelocity = 2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1155] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1155]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(2);
  bd.position.Set(-1.329703998565674e+01f, 2.444145507812500e+02f);
  bd.angle = -1.875078582763672e+01f;
  bd.linearVelocity.Set(2.055969953536987e+00f, 2.903587818145752e-01f);
  bd.angularVelocity = -2.802596928649634e-45f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1156] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2);
    fd.filter.maskBits = uint16(2855);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.500000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1156]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.244457702636719e+02f, -3.297183990478516e+01f);
  bd.angle = 1.724153280258179e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1157] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1157]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1158] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1158]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1159] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1159]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1160] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1160]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1161] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1161]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1162] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1162]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1163] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1163]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1164] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1164]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1165] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1165]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1166] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1166]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1167] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1167]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1168] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1168]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1169] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1169]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1170] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1170]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1171] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1171]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1172] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1172]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1173] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1173]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1174] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1174]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.522238445281982e+01f, 1.578179836273193e+01f);
  bd.angle = 5.624548912048340e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1175] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1175]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.774751281738281e+01f, -1.063490200042725e+01f);
  bd.angle = 5.446329116821289e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1176] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1176]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.459759235382080e+01f, 2.208690643310547e+01f);
  bd.angle = 2.458921670913696e-01f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1177] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1177]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.283131504058838e+01f, 7.482317924499512e+00f);
  bd.angle = 3.797552585601807e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1178] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.000000000000000e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1178]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-nanf, -nanf);
  bd.angle = -nanf;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = -nanf;
  bd.linearDamping = 0.000000000000000e+00f;
  bd.angularDamping = 0.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1179] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+02f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(32);
    fd.filter.maskBits = uint16(514);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.000000000000000e-01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1179]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.500000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1180] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1024);
    fd.filter.maskBits = uint16(4);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(5.000032782554626e-01f, -7.500000000000000e+01f);
    vs[1].Set(4.999967217445374e-01f, 7.500000000000000e+01f);
    vs[2].Set(-5.000032782554626e-01f, 7.500000000000000e+01f);
    vs[3].Set(-4.999967217445374e-01f, -7.500000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1180]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.500000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1181] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1024);
    fd.filter.maskBits = uint16(4);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(5.000032782554626e-01f, -7.500000000000000e+01f);
    vs[1].Set(4.999967217445374e-01f, 7.500000000000000e+01f);
    vs[2].Set(-5.000032782554626e-01f, 7.500000000000000e+01f);
    vs[3].Set(-4.999967217445374e-01f, -7.500000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1181]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1182] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(2048);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2PolygonShape shape;
    b2Vec2 vs[8];
    vs[0].Set(7.000003337860107e+00f, -7.750000000000000e+01f);
    vs[1].Set(6.999996662139893e+00f, 7.750000000000000e+01f);
    vs[2].Set(-7.000003337860107e+00f, 7.750000000000000e+01f);
    vs[3].Set(-6.999996662139893e+00f, -7.750000000000000e+01f);
    shape.Set(vs, 4);

    fd.shape = &shape;

    bodies[1182]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-6.006740188598633e+01f, 1.753447418212891e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1183] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.342747497558594e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1183]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.550943298339844e+02f, 1.386261444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1184] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.303153991699219e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1184]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(7.912165069580078e+01f, -2.479356231689453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1185] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.235737895965576e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1185]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.567203521728516e+01f, -2.407344970703125e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1186] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.482034683227539e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1186]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.496918334960938e+02f, 2.428731727600098e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1187] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.206946086883545e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1187]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.606859283447266e+02f, -1.650097351074219e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1188] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.060206031799316e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1188]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.627242279052734e+02f, -3.226569366455078e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1189] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.730708122253418e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1189]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(8.630631256103516e+01f, -1.933203887939453e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1190] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.178622245788574e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1190]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.616893005371094e+02f, 1.345806026458740e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1191] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.292151165008545e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1191]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-8.595272827148438e+01f, -2.494852447509766e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1192] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.387961292266846e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1192]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-5.235678100585938e+01f, -2.561200256347656e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1193] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.080622100830078e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1193]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-2.269055366516113e+01f, -1.791886444091797e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1194] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.097749519348145e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1194]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.171111202239990e+01f, -2.031019897460938e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1195] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.345048332214355e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1195]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.231988601684570e+02f, 1.527272949218750e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1196] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.252936935424805e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1196]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.539339904785156e+02f, -2.316838531494141e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1197] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.008975028991699e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1197]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-7.013562774658203e+01f, 4.464557266235352e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1198] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.172460079193115e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1198]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1199] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.156902313232422e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1199]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.208606109619141e+02f, -3.535921096801758e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1200] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.215690231323242e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1200]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1201] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.828186988830566e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1201]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.576066436767578e+02f, 3.955086517333984e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1202] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.282818603515625e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1202]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1203] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.956974029541016e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1203]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.764017791748047e+02f, 9.181266784667969e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1204] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.195697402954102e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1204]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1205] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.662004470825195e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1205]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.139118881225586e+02f, -1.131521072387695e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1206] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.966200447082520e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1206]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1207] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.044806003570557e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1207]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(2.079012451171875e+02f, -1.302250671386719e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1208] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.004480552673340e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1208]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1209] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.404340744018555e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1209]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.427084808349609e+02f, -9.709397888183594e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1210] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.340434074401855e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1210]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1211] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.670727729797363e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1211]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(-1.904835510253906e+02f, 3.376055526733398e+01f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1212] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 2.367072677612305e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1212]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1213] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.065876007080078e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1213]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(1.533123321533203e+02f, 1.813738250732422e+02f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1214] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.906587600708008e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1214]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1215] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.500000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1215]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angle = 0.000000000000000e+00f;
  bd.linearVelocity.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  bd.angularVelocity = 0.000000000000000e+00f;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1216] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(256);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.900000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1216]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1217] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.427474975585938e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1217]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1218] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.303154468536377e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1218]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1219] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.357378959655762e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1219]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1220] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.082034683227539e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1220]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1221] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.069460868835449e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1221]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1222] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.602059841156006e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1222]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1223] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 5.730708122253418e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1223]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1224] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.786222457885742e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1224]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1225] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.921511650085449e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1225]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1226] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.879612922668457e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1226]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1227] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.806221485137939e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1227]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1228] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.977495193481445e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1228]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1229] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 9.450483322143555e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1229]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1230] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 8.529369354248047e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1230]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1231] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 6.089749813079834e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1231]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1232] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.724600315093994e+00f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1232]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1233] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.815690231323242e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1233]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1234] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.882818603515625e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1234]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1235] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.795697402954102e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1235]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1236] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.566200447082520e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1236]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1237] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.604480552673340e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1237]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1238] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.940434074401855e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1238]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1239] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.967072677612305e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1239]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1240] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 1.506587600708008e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1240]->CreateFixture(&fd);
  }
}
{
  b2BodyDef bd;
  bd.type = b2BodyType(0);
  bd.position.Set(nanf, -nanf);
  bd.angle = nanf;
  bd.linearVelocity.Set(nanf, -nanf);
  bd.angularVelocity = nanf;
  bd.linearDamping = 1.000000000000000e+01f;
  bd.angularDamping = 5.000000000000000e+00f;
  bd.allowSleep = bool(4);
  bd.awake = bool(2);
  bd.fixedRotation = bool(0);
  bd.bullet = bool(0);
  bd.active = bool(32);
  bd.gravityScale = 1.000000000000000e+00f;
  bodies[1241] = m_world->CreateBody(&bd);

  {
    b2FixtureDef fd;
    fd.friction = 2.000000029802322e-01f;
    fd.restitution = 0.000000000000000e+00f;
    fd.density = 1.000000000000000e+00f;
    fd.isSensor = bool(0);
    fd.filter.categoryBits = uint16(1);
    fd.filter.maskBits = uint16(518);
    fd.filter.groupIndex = int16(0);
    b2CircleShape shape;
    shape.m_radius = 7.500000000000000e+01f;
    shape.m_p.Set(0.000000000000000e+00f, 0.000000000000000e+00f);

    fd.shape = &shape;

    bodies[1241]->CreateFixture(&fd);
  }
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[51];
  jd.bodyB = bodies[40];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(5.679945600000000e+07f, -2.142136200000000e+07f);
  jd.localAnchorB.Set(5.679945600000000e+07f, -2.142136200000000e+07f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[0] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[113];
  jd.bodyB = bodies[85];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-2.999999523162842e+00f, -3.576278686523438e-06f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[1] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[300];
  jd.bodyB = bodies[95];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(1.847743988037109e-06f, 3.000000238418579e+00f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[2] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[209];
  jd.bodyB = bodies[134];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.760887145996094e-03f, -3.007760763168335e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[3] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[294];
  jd.bodyB = bodies[280];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.999998569488525e+00f, 1.072883605957031e-06f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[4] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[314];
  jd.bodyB = bodies[313];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.997811317443848e+00f, -6.891936063766479e-04f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[5] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[319];
  jd.bodyB = bodies[317];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-5.130577087402344e-02f, -2.982118129730225e+00f);
  jd.localAnchorB.Set(-0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[6] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[751];
  jd.bodyB = bodies[328];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(2.999987602233887e+00f, -2.467632293701172e-05f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[7] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[464];
  jd.bodyB = bodies[328];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(-2.503395080566406e-06f, -3.000005245208740e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[8] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[688];
  jd.bodyB = bodies[464];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(3.000000715255737e+00f, 1.072883605957031e-06f);
  jd.localAnchorB.Set(0.000000000000000e+00f, -0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[9] = m_world->CreateJoint(&jd);
}
{
  b2WeldJointDef jd;
  jd.bodyA = bodies[751];
  jd.bodyB = bodies[688];
  jd.collideConnected = bool(0);
  jd.localAnchorA.Set(4.291534423828125e-06f, 2.999995708465576e+00f);
  jd.localAnchorB.Set(0.000000000000000e+00f, 0.000000000000000e+00f);
  jd.referenceAngle = 0.000000000000000e+00f;
  jd.frequencyHz = 0.000000000000000e+00f;
  jd.dampingRatio = 0.000000000000000e+00f;
  joints[10] = m_world->CreateJoint(&jd);
}
b2Free(joints);
b2Free(bodies);
joints = NULL;
bodies = NULL;
